
Nicolas_Seillier.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  0000047e  00000512  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000047e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080010c  0080010c  0000051e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000051e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  0000054e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000035a  00000000  00000000  0000059e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000024e  00000000  00000000  000008f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000234  00000000  00000000  00000b46  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000068  00000000  00000000  00000d7c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001e5  00000000  00000000  00000de4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000026  00000000  00000000  00000fc9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00000fef  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ee e7       	ldi	r30, 0x7E	; 126
  84:	f4 e0       	ldi	r31, 0x04	; 4
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	ac 30       	cpi	r26, 0x0C	; 12
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	ac e0       	ldi	r26, 0x0C	; 12
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a6 31       	cpi	r26, 0x16	; 22
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 3d 02 	jmp	0x47a	; 0x47a <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:
{
	/* Enable port A */
	//DDRA = 0xFF;
	
	/* Initialize UART */
	UART_Init(MYUBBR);
  ae:	8f e1       	ldi	r24, 0x1F	; 31
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	0e 94 71 00 	call	0xe2	; 0xe2 <UART_Init>
		
		/* Try to communicate via UART */
		//unsigned char sent = 'A';
		//UART_Transmit(sent);
		//unsigned char received = UART_Receive();
		printf("Test\n");
  b6:	86 e0       	ldi	r24, 0x06	; 6
  b8:	91 e0       	ldi	r25, 0x01	; 1
  ba:	0e 94 c6 00 	call	0x18c	; 0x18c <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  be:	2f ef       	ldi	r18, 0xFF	; 255
  c0:	8f ef       	ldi	r24, 0xFF	; 255
  c2:	9e e0       	ldi	r25, 0x0E	; 14
  c4:	21 50       	subi	r18, 0x01	; 1
  c6:	80 40       	sbci	r24, 0x00	; 0
  c8:	90 40       	sbci	r25, 0x00	; 0
  ca:	e1 f7       	brne	.-8      	; 0xc4 <main+0x16>
  cc:	00 c0       	rjmp	.+0      	; 0xce <main+0x20>
  ce:	00 00       	nop
  d0:	f2 cf       	rjmp	.-28     	; 0xb6 <main+0x8>

000000d2 <UART_Transmit>:
#include <avr/io.h>
#include <stdio.h>

void UART_Transmit(unsigned char data){
	/* Wait for empty transmit buffer, sends the data */
	while(!(UCSR0A&(1<<UDRE0)))
  d2:	5d 9b       	sbis	0x0b, 5	; 11
  d4:	fe cf       	rjmp	.-4      	; 0xd2 <UART_Transmit>
		;
	/* Put data into buffer, sends the data */
	UDR0 = data;
  d6:	8c b9       	out	0x0c, r24	; 12
  d8:	08 95       	ret

000000da <UART_Receive>:
}

unsigned char UART_Receive(void){
	/* Wait for data to be received */
	while(!(UCSR0A&(1<<RXC0)))
  da:	5f 9b       	sbis	0x0b, 7	; 11
  dc:	fe cf       	rjmp	.-4      	; 0xda <UART_Receive>
		;
	/* Get and return received data from buffer */
	return UDR0;
  de:	8c b1       	in	r24, 0x0c	; 12
}
  e0:	08 95       	ret

000000e2 <UART_Init>:

void UART_Init(unsigned int ubrr){
	/* Set baud rate */
	//UBRR0H = (unsigned char) (ubrr>>8);
	UBRR0L = (unsigned char) ubrr;
  e2:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
  e4:	88 e1       	ldi	r24, 0x18	; 24
  e6:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	//UCSR0C = (1<<URSEL0)|(0<<USBS0)|(3<<UCSZ00);
	
	fdevopen(UART_Transmit,UART_Receive);
  e8:	6d e6       	ldi	r22, 0x6D	; 109
  ea:	70 e0       	ldi	r23, 0x00	; 0
  ec:	89 e6       	ldi	r24, 0x69	; 105
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	0e 94 7b 00 	call	0xf6	; 0xf6 <fdevopen>
  f4:	08 95       	ret

000000f6 <fdevopen>:
  f6:	0f 93       	push	r16
  f8:	1f 93       	push	r17
  fa:	cf 93       	push	r28
  fc:	df 93       	push	r29
  fe:	ec 01       	movw	r28, r24
 100:	8b 01       	movw	r16, r22
 102:	00 97       	sbiw	r24, 0x00	; 0
 104:	31 f4       	brne	.+12     	; 0x112 <fdevopen+0x1c>
 106:	61 15       	cp	r22, r1
 108:	71 05       	cpc	r23, r1
 10a:	19 f4       	brne	.+6      	; 0x112 <fdevopen+0x1c>
 10c:	80 e0       	ldi	r24, 0x00	; 0
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	38 c0       	rjmp	.+112    	; 0x182 <fdevopen+0x8c>
 112:	6e e0       	ldi	r22, 0x0E	; 14
 114:	70 e0       	ldi	r23, 0x00	; 0
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <calloc>
 11e:	fc 01       	movw	r30, r24
 120:	00 97       	sbiw	r24, 0x00	; 0
 122:	a1 f3       	breq	.-24     	; 0x10c <fdevopen+0x16>
 124:	80 e8       	ldi	r24, 0x80	; 128
 126:	83 83       	std	Z+3, r24	; 0x03
 128:	01 15       	cp	r16, r1
 12a:	11 05       	cpc	r17, r1
 12c:	71 f0       	breq	.+28     	; 0x14a <fdevopen+0x54>
 12e:	13 87       	std	Z+11, r17	; 0x0b
 130:	02 87       	std	Z+10, r16	; 0x0a
 132:	81 e8       	ldi	r24, 0x81	; 129
 134:	83 83       	std	Z+3, r24	; 0x03
 136:	80 91 0c 01 	lds	r24, 0x010C
 13a:	90 91 0d 01 	lds	r25, 0x010D
 13e:	89 2b       	or	r24, r25
 140:	21 f4       	brne	.+8      	; 0x14a <fdevopen+0x54>
 142:	f0 93 0d 01 	sts	0x010D, r31
 146:	e0 93 0c 01 	sts	0x010C, r30
 14a:	20 97       	sbiw	r28, 0x00	; 0
 14c:	c9 f0       	breq	.+50     	; 0x180 <fdevopen+0x8a>
 14e:	d1 87       	std	Z+9, r29	; 0x09
 150:	c0 87       	std	Z+8, r28	; 0x08
 152:	83 81       	ldd	r24, Z+3	; 0x03
 154:	82 60       	ori	r24, 0x02	; 2
 156:	83 83       	std	Z+3, r24	; 0x03
 158:	80 91 0e 01 	lds	r24, 0x010E
 15c:	90 91 0f 01 	lds	r25, 0x010F
 160:	89 2b       	or	r24, r25
 162:	71 f4       	brne	.+28     	; 0x180 <fdevopen+0x8a>
 164:	f0 93 0f 01 	sts	0x010F, r31
 168:	e0 93 0e 01 	sts	0x010E, r30
 16c:	80 91 10 01 	lds	r24, 0x0110
 170:	90 91 11 01 	lds	r25, 0x0111
 174:	89 2b       	or	r24, r25
 176:	21 f4       	brne	.+8      	; 0x180 <fdevopen+0x8a>
 178:	f0 93 11 01 	sts	0x0111, r31
 17c:	e0 93 10 01 	sts	0x0110, r30
 180:	cf 01       	movw	r24, r30
 182:	df 91       	pop	r29
 184:	cf 91       	pop	r28
 186:	1f 91       	pop	r17
 188:	0f 91       	pop	r16
 18a:	08 95       	ret

0000018c <puts>:
 18c:	0f 93       	push	r16
 18e:	1f 93       	push	r17
 190:	cf 93       	push	r28
 192:	df 93       	push	r29
 194:	e0 91 0e 01 	lds	r30, 0x010E
 198:	f0 91 0f 01 	lds	r31, 0x010F
 19c:	23 81       	ldd	r18, Z+3	; 0x03
 19e:	21 ff       	sbrs	r18, 1
 1a0:	1b c0       	rjmp	.+54     	; 0x1d8 <puts+0x4c>
 1a2:	ec 01       	movw	r28, r24
 1a4:	00 e0       	ldi	r16, 0x00	; 0
 1a6:	10 e0       	ldi	r17, 0x00	; 0
 1a8:	89 91       	ld	r24, Y+
 1aa:	60 91 0e 01 	lds	r22, 0x010E
 1ae:	70 91 0f 01 	lds	r23, 0x010F
 1b2:	db 01       	movw	r26, r22
 1b4:	18 96       	adiw	r26, 0x08	; 8
 1b6:	ed 91       	ld	r30, X+
 1b8:	fc 91       	ld	r31, X
 1ba:	19 97       	sbiw	r26, 0x09	; 9
 1bc:	88 23       	and	r24, r24
 1be:	31 f0       	breq	.+12     	; 0x1cc <puts+0x40>
 1c0:	09 95       	icall
 1c2:	89 2b       	or	r24, r25
 1c4:	89 f3       	breq	.-30     	; 0x1a8 <puts+0x1c>
 1c6:	0f ef       	ldi	r16, 0xFF	; 255
 1c8:	1f ef       	ldi	r17, 0xFF	; 255
 1ca:	ee cf       	rjmp	.-36     	; 0x1a8 <puts+0x1c>
 1cc:	8a e0       	ldi	r24, 0x0A	; 10
 1ce:	09 95       	icall
 1d0:	89 2b       	or	r24, r25
 1d2:	11 f4       	brne	.+4      	; 0x1d8 <puts+0x4c>
 1d4:	c8 01       	movw	r24, r16
 1d6:	02 c0       	rjmp	.+4      	; 0x1dc <puts+0x50>
 1d8:	8f ef       	ldi	r24, 0xFF	; 255
 1da:	9f ef       	ldi	r25, 0xFF	; 255
 1dc:	df 91       	pop	r29
 1de:	cf 91       	pop	r28
 1e0:	1f 91       	pop	r17
 1e2:	0f 91       	pop	r16
 1e4:	08 95       	ret

000001e6 <calloc>:
 1e6:	0f 93       	push	r16
 1e8:	1f 93       	push	r17
 1ea:	cf 93       	push	r28
 1ec:	df 93       	push	r29
 1ee:	86 9f       	mul	r24, r22
 1f0:	80 01       	movw	r16, r0
 1f2:	87 9f       	mul	r24, r23
 1f4:	10 0d       	add	r17, r0
 1f6:	96 9f       	mul	r25, r22
 1f8:	10 0d       	add	r17, r0
 1fa:	11 24       	eor	r1, r1
 1fc:	c8 01       	movw	r24, r16
 1fe:	0e 94 0f 01 	call	0x21e	; 0x21e <malloc>
 202:	ec 01       	movw	r28, r24
 204:	00 97       	sbiw	r24, 0x00	; 0
 206:	29 f0       	breq	.+10     	; 0x212 <calloc+0x2c>
 208:	a8 01       	movw	r20, r16
 20a:	60 e0       	ldi	r22, 0x00	; 0
 20c:	70 e0       	ldi	r23, 0x00	; 0
 20e:	0e 94 36 02 	call	0x46c	; 0x46c <memset>
 212:	ce 01       	movw	r24, r28
 214:	df 91       	pop	r29
 216:	cf 91       	pop	r28
 218:	1f 91       	pop	r17
 21a:	0f 91       	pop	r16
 21c:	08 95       	ret

0000021e <malloc>:
 21e:	cf 93       	push	r28
 220:	df 93       	push	r29
 222:	82 30       	cpi	r24, 0x02	; 2
 224:	91 05       	cpc	r25, r1
 226:	10 f4       	brcc	.+4      	; 0x22c <malloc+0xe>
 228:	82 e0       	ldi	r24, 0x02	; 2
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	e0 91 14 01 	lds	r30, 0x0114
 230:	f0 91 15 01 	lds	r31, 0x0115
 234:	20 e0       	ldi	r18, 0x00	; 0
 236:	30 e0       	ldi	r19, 0x00	; 0
 238:	a0 e0       	ldi	r26, 0x00	; 0
 23a:	b0 e0       	ldi	r27, 0x00	; 0
 23c:	30 97       	sbiw	r30, 0x00	; 0
 23e:	39 f1       	breq	.+78     	; 0x28e <malloc+0x70>
 240:	40 81       	ld	r20, Z
 242:	51 81       	ldd	r21, Z+1	; 0x01
 244:	48 17       	cp	r20, r24
 246:	59 07       	cpc	r21, r25
 248:	b8 f0       	brcs	.+46     	; 0x278 <malloc+0x5a>
 24a:	48 17       	cp	r20, r24
 24c:	59 07       	cpc	r21, r25
 24e:	71 f4       	brne	.+28     	; 0x26c <malloc+0x4e>
 250:	82 81       	ldd	r24, Z+2	; 0x02
 252:	93 81       	ldd	r25, Z+3	; 0x03
 254:	10 97       	sbiw	r26, 0x00	; 0
 256:	29 f0       	breq	.+10     	; 0x262 <malloc+0x44>
 258:	13 96       	adiw	r26, 0x03	; 3
 25a:	9c 93       	st	X, r25
 25c:	8e 93       	st	-X, r24
 25e:	12 97       	sbiw	r26, 0x02	; 2
 260:	2c c0       	rjmp	.+88     	; 0x2ba <malloc+0x9c>
 262:	90 93 15 01 	sts	0x0115, r25
 266:	80 93 14 01 	sts	0x0114, r24
 26a:	27 c0       	rjmp	.+78     	; 0x2ba <malloc+0x9c>
 26c:	21 15       	cp	r18, r1
 26e:	31 05       	cpc	r19, r1
 270:	31 f0       	breq	.+12     	; 0x27e <malloc+0x60>
 272:	42 17       	cp	r20, r18
 274:	53 07       	cpc	r21, r19
 276:	18 f0       	brcs	.+6      	; 0x27e <malloc+0x60>
 278:	a9 01       	movw	r20, r18
 27a:	db 01       	movw	r26, r22
 27c:	01 c0       	rjmp	.+2      	; 0x280 <malloc+0x62>
 27e:	ef 01       	movw	r28, r30
 280:	9a 01       	movw	r18, r20
 282:	bd 01       	movw	r22, r26
 284:	df 01       	movw	r26, r30
 286:	02 80       	ldd	r0, Z+2	; 0x02
 288:	f3 81       	ldd	r31, Z+3	; 0x03
 28a:	e0 2d       	mov	r30, r0
 28c:	d7 cf       	rjmp	.-82     	; 0x23c <malloc+0x1e>
 28e:	21 15       	cp	r18, r1
 290:	31 05       	cpc	r19, r1
 292:	f9 f0       	breq	.+62     	; 0x2d2 <malloc+0xb4>
 294:	28 1b       	sub	r18, r24
 296:	39 0b       	sbc	r19, r25
 298:	24 30       	cpi	r18, 0x04	; 4
 29a:	31 05       	cpc	r19, r1
 29c:	80 f4       	brcc	.+32     	; 0x2be <malloc+0xa0>
 29e:	8a 81       	ldd	r24, Y+2	; 0x02
 2a0:	9b 81       	ldd	r25, Y+3	; 0x03
 2a2:	61 15       	cp	r22, r1
 2a4:	71 05       	cpc	r23, r1
 2a6:	21 f0       	breq	.+8      	; 0x2b0 <malloc+0x92>
 2a8:	fb 01       	movw	r30, r22
 2aa:	93 83       	std	Z+3, r25	; 0x03
 2ac:	82 83       	std	Z+2, r24	; 0x02
 2ae:	04 c0       	rjmp	.+8      	; 0x2b8 <malloc+0x9a>
 2b0:	90 93 15 01 	sts	0x0115, r25
 2b4:	80 93 14 01 	sts	0x0114, r24
 2b8:	fe 01       	movw	r30, r28
 2ba:	32 96       	adiw	r30, 0x02	; 2
 2bc:	44 c0       	rjmp	.+136    	; 0x346 <malloc+0x128>
 2be:	fe 01       	movw	r30, r28
 2c0:	e2 0f       	add	r30, r18
 2c2:	f3 1f       	adc	r31, r19
 2c4:	81 93       	st	Z+, r24
 2c6:	91 93       	st	Z+, r25
 2c8:	22 50       	subi	r18, 0x02	; 2
 2ca:	31 09       	sbc	r19, r1
 2cc:	39 83       	std	Y+1, r19	; 0x01
 2ce:	28 83       	st	Y, r18
 2d0:	3a c0       	rjmp	.+116    	; 0x346 <malloc+0x128>
 2d2:	20 91 12 01 	lds	r18, 0x0112
 2d6:	30 91 13 01 	lds	r19, 0x0113
 2da:	23 2b       	or	r18, r19
 2dc:	41 f4       	brne	.+16     	; 0x2ee <malloc+0xd0>
 2de:	20 91 02 01 	lds	r18, 0x0102
 2e2:	30 91 03 01 	lds	r19, 0x0103
 2e6:	30 93 13 01 	sts	0x0113, r19
 2ea:	20 93 12 01 	sts	0x0112, r18
 2ee:	20 91 00 01 	lds	r18, 0x0100
 2f2:	30 91 01 01 	lds	r19, 0x0101
 2f6:	21 15       	cp	r18, r1
 2f8:	31 05       	cpc	r19, r1
 2fa:	41 f4       	brne	.+16     	; 0x30c <malloc+0xee>
 2fc:	2d b7       	in	r18, 0x3d	; 61
 2fe:	3e b7       	in	r19, 0x3e	; 62
 300:	40 91 04 01 	lds	r20, 0x0104
 304:	50 91 05 01 	lds	r21, 0x0105
 308:	24 1b       	sub	r18, r20
 30a:	35 0b       	sbc	r19, r21
 30c:	e0 91 12 01 	lds	r30, 0x0112
 310:	f0 91 13 01 	lds	r31, 0x0113
 314:	e2 17       	cp	r30, r18
 316:	f3 07       	cpc	r31, r19
 318:	a0 f4       	brcc	.+40     	; 0x342 <malloc+0x124>
 31a:	2e 1b       	sub	r18, r30
 31c:	3f 0b       	sbc	r19, r31
 31e:	28 17       	cp	r18, r24
 320:	39 07       	cpc	r19, r25
 322:	78 f0       	brcs	.+30     	; 0x342 <malloc+0x124>
 324:	ac 01       	movw	r20, r24
 326:	4e 5f       	subi	r20, 0xFE	; 254
 328:	5f 4f       	sbci	r21, 0xFF	; 255
 32a:	24 17       	cp	r18, r20
 32c:	35 07       	cpc	r19, r21
 32e:	48 f0       	brcs	.+18     	; 0x342 <malloc+0x124>
 330:	4e 0f       	add	r20, r30
 332:	5f 1f       	adc	r21, r31
 334:	50 93 13 01 	sts	0x0113, r21
 338:	40 93 12 01 	sts	0x0112, r20
 33c:	81 93       	st	Z+, r24
 33e:	91 93       	st	Z+, r25
 340:	02 c0       	rjmp	.+4      	; 0x346 <malloc+0x128>
 342:	e0 e0       	ldi	r30, 0x00	; 0
 344:	f0 e0       	ldi	r31, 0x00	; 0
 346:	cf 01       	movw	r24, r30
 348:	df 91       	pop	r29
 34a:	cf 91       	pop	r28
 34c:	08 95       	ret

0000034e <free>:
 34e:	cf 93       	push	r28
 350:	df 93       	push	r29
 352:	00 97       	sbiw	r24, 0x00	; 0
 354:	09 f4       	brne	.+2      	; 0x358 <free+0xa>
 356:	87 c0       	rjmp	.+270    	; 0x466 <free+0x118>
 358:	fc 01       	movw	r30, r24
 35a:	32 97       	sbiw	r30, 0x02	; 2
 35c:	13 82       	std	Z+3, r1	; 0x03
 35e:	12 82       	std	Z+2, r1	; 0x02
 360:	c0 91 14 01 	lds	r28, 0x0114
 364:	d0 91 15 01 	lds	r29, 0x0115
 368:	20 97       	sbiw	r28, 0x00	; 0
 36a:	81 f4       	brne	.+32     	; 0x38c <free+0x3e>
 36c:	20 81       	ld	r18, Z
 36e:	31 81       	ldd	r19, Z+1	; 0x01
 370:	28 0f       	add	r18, r24
 372:	39 1f       	adc	r19, r25
 374:	80 91 12 01 	lds	r24, 0x0112
 378:	90 91 13 01 	lds	r25, 0x0113
 37c:	82 17       	cp	r24, r18
 37e:	93 07       	cpc	r25, r19
 380:	79 f5       	brne	.+94     	; 0x3e0 <free+0x92>
 382:	f0 93 13 01 	sts	0x0113, r31
 386:	e0 93 12 01 	sts	0x0112, r30
 38a:	6d c0       	rjmp	.+218    	; 0x466 <free+0x118>
 38c:	de 01       	movw	r26, r28
 38e:	20 e0       	ldi	r18, 0x00	; 0
 390:	30 e0       	ldi	r19, 0x00	; 0
 392:	ae 17       	cp	r26, r30
 394:	bf 07       	cpc	r27, r31
 396:	50 f4       	brcc	.+20     	; 0x3ac <free+0x5e>
 398:	12 96       	adiw	r26, 0x02	; 2
 39a:	4d 91       	ld	r20, X+
 39c:	5c 91       	ld	r21, X
 39e:	13 97       	sbiw	r26, 0x03	; 3
 3a0:	9d 01       	movw	r18, r26
 3a2:	41 15       	cp	r20, r1
 3a4:	51 05       	cpc	r21, r1
 3a6:	09 f1       	breq	.+66     	; 0x3ea <free+0x9c>
 3a8:	da 01       	movw	r26, r20
 3aa:	f3 cf       	rjmp	.-26     	; 0x392 <free+0x44>
 3ac:	b3 83       	std	Z+3, r27	; 0x03
 3ae:	a2 83       	std	Z+2, r26	; 0x02
 3b0:	40 81       	ld	r20, Z
 3b2:	51 81       	ldd	r21, Z+1	; 0x01
 3b4:	84 0f       	add	r24, r20
 3b6:	95 1f       	adc	r25, r21
 3b8:	8a 17       	cp	r24, r26
 3ba:	9b 07       	cpc	r25, r27
 3bc:	71 f4       	brne	.+28     	; 0x3da <free+0x8c>
 3be:	8d 91       	ld	r24, X+
 3c0:	9c 91       	ld	r25, X
 3c2:	11 97       	sbiw	r26, 0x01	; 1
 3c4:	84 0f       	add	r24, r20
 3c6:	95 1f       	adc	r25, r21
 3c8:	02 96       	adiw	r24, 0x02	; 2
 3ca:	91 83       	std	Z+1, r25	; 0x01
 3cc:	80 83       	st	Z, r24
 3ce:	12 96       	adiw	r26, 0x02	; 2
 3d0:	8d 91       	ld	r24, X+
 3d2:	9c 91       	ld	r25, X
 3d4:	13 97       	sbiw	r26, 0x03	; 3
 3d6:	93 83       	std	Z+3, r25	; 0x03
 3d8:	82 83       	std	Z+2, r24	; 0x02
 3da:	21 15       	cp	r18, r1
 3dc:	31 05       	cpc	r19, r1
 3de:	29 f4       	brne	.+10     	; 0x3ea <free+0x9c>
 3e0:	f0 93 15 01 	sts	0x0115, r31
 3e4:	e0 93 14 01 	sts	0x0114, r30
 3e8:	3e c0       	rjmp	.+124    	; 0x466 <free+0x118>
 3ea:	d9 01       	movw	r26, r18
 3ec:	13 96       	adiw	r26, 0x03	; 3
 3ee:	fc 93       	st	X, r31
 3f0:	ee 93       	st	-X, r30
 3f2:	12 97       	sbiw	r26, 0x02	; 2
 3f4:	4d 91       	ld	r20, X+
 3f6:	5d 91       	ld	r21, X+
 3f8:	a4 0f       	add	r26, r20
 3fa:	b5 1f       	adc	r27, r21
 3fc:	ea 17       	cp	r30, r26
 3fe:	fb 07       	cpc	r31, r27
 400:	79 f4       	brne	.+30     	; 0x420 <free+0xd2>
 402:	80 81       	ld	r24, Z
 404:	91 81       	ldd	r25, Z+1	; 0x01
 406:	84 0f       	add	r24, r20
 408:	95 1f       	adc	r25, r21
 40a:	02 96       	adiw	r24, 0x02	; 2
 40c:	d9 01       	movw	r26, r18
 40e:	11 96       	adiw	r26, 0x01	; 1
 410:	9c 93       	st	X, r25
 412:	8e 93       	st	-X, r24
 414:	82 81       	ldd	r24, Z+2	; 0x02
 416:	93 81       	ldd	r25, Z+3	; 0x03
 418:	13 96       	adiw	r26, 0x03	; 3
 41a:	9c 93       	st	X, r25
 41c:	8e 93       	st	-X, r24
 41e:	12 97       	sbiw	r26, 0x02	; 2
 420:	e0 e0       	ldi	r30, 0x00	; 0
 422:	f0 e0       	ldi	r31, 0x00	; 0
 424:	8a 81       	ldd	r24, Y+2	; 0x02
 426:	9b 81       	ldd	r25, Y+3	; 0x03
 428:	00 97       	sbiw	r24, 0x00	; 0
 42a:	19 f0       	breq	.+6      	; 0x432 <free+0xe4>
 42c:	fe 01       	movw	r30, r28
 42e:	ec 01       	movw	r28, r24
 430:	f9 cf       	rjmp	.-14     	; 0x424 <free+0xd6>
 432:	ce 01       	movw	r24, r28
 434:	02 96       	adiw	r24, 0x02	; 2
 436:	28 81       	ld	r18, Y
 438:	39 81       	ldd	r19, Y+1	; 0x01
 43a:	82 0f       	add	r24, r18
 43c:	93 1f       	adc	r25, r19
 43e:	20 91 12 01 	lds	r18, 0x0112
 442:	30 91 13 01 	lds	r19, 0x0113
 446:	28 17       	cp	r18, r24
 448:	39 07       	cpc	r19, r25
 44a:	69 f4       	brne	.+26     	; 0x466 <free+0x118>
 44c:	30 97       	sbiw	r30, 0x00	; 0
 44e:	29 f4       	brne	.+10     	; 0x45a <free+0x10c>
 450:	10 92 15 01 	sts	0x0115, r1
 454:	10 92 14 01 	sts	0x0114, r1
 458:	02 c0       	rjmp	.+4      	; 0x45e <free+0x110>
 45a:	13 82       	std	Z+3, r1	; 0x03
 45c:	12 82       	std	Z+2, r1	; 0x02
 45e:	d0 93 13 01 	sts	0x0113, r29
 462:	c0 93 12 01 	sts	0x0112, r28
 466:	df 91       	pop	r29
 468:	cf 91       	pop	r28
 46a:	08 95       	ret

0000046c <memset>:
 46c:	dc 01       	movw	r26, r24
 46e:	01 c0       	rjmp	.+2      	; 0x472 <memset+0x6>
 470:	6d 93       	st	X+, r22
 472:	41 50       	subi	r20, 0x01	; 1
 474:	50 40       	sbci	r21, 0x00	; 0
 476:	e0 f7       	brcc	.-8      	; 0x470 <memset+0x4>
 478:	08 95       	ret

0000047a <_exit>:
 47a:	f8 94       	cli

0000047c <__stop_program>:
 47c:	ff cf       	rjmp	.-2      	; 0x47c <__stop_program>
