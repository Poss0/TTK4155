
Nicolas_Seillier.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000f2  00800100  00000c9e  00000d32  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c9e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008001f2  008001f2  00000e24  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e24  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  00000e80  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000004e1  00000000  00000000  00000ef0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000306  00000000  00000000  000013d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000312  00000000  00000000  000016d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000100  00000000  00000000  000019ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002a3  00000000  00000000  00001aec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001e8  00000000  00000000  00001d8f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  00001f77  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ee e9       	ldi	r30, 0x9E	; 158
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a2 3f       	cpi	r26, 0xF2	; 242
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a2 ef       	ldi	r26, 0xF2	; 242
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ac 3f       	cpi	r26, 0xFC	; 252
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 4d 06 	jmp	0xc9a	; 0xc9a <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:
#define MYUBBR FOSC/16/BAUD-1

int main(void)
{
	/* Enable port A */
	DDRA = 0xFF;
  ae:	8f ef       	ldi	r24, 0xFF	; 255
  b0:	8a bb       	out	0x1a, r24	; 26
	
	/* Initialize UART */
	UART_Init(MYUBBR);
  b2:	8f e1       	ldi	r24, 0x1F	; 31
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	0e 94 fd 00 	call	0x1fa	; 0x1fa <UART_Init>
	printf("Reset\n");
  ba:	8a e0       	ldi	r24, 0x0A	; 10
  bc:	91 e0       	ldi	r25, 0x01	; 1
  be:	0e 94 c4 01 	call	0x388	; 0x388 <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c2:	2f ef       	ldi	r18, 0xFF	; 255
  c4:	8f ef       	ldi	r24, 0xFF	; 255
  c6:	9e e0       	ldi	r25, 0x0E	; 14
  c8:	21 50       	subi	r18, 0x01	; 1
  ca:	80 40       	sbci	r24, 0x00	; 0
  cc:	90 40       	sbci	r25, 0x00	; 0
  ce:	e1 f7       	brne	.-8      	; 0xc8 <main+0x1a>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <main+0x24>
  d2:	00 00       	nop
	_delay_ms(1000);
	
	/* Enable external SRAM: setting SRE to 1 */
	MCUCR |= (1 << SRE);
  d4:	85 b7       	in	r24, 0x35	; 53
  d6:	80 68       	ori	r24, 0x80	; 128
  d8:	85 bf       	out	0x35, r24	; 53
	
	SRAM_test();
  da:	0e 94 70 00 	call	0xe0	; 0xe0 <SRAM_test>
  de:	ff cf       	rjmp	.-2      	; 0xde <main+0x30>

000000e0 <SRAM_test>:
#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>

void SRAM_test(void)
{
  e0:	cf 92       	push	r12
  e2:	df 92       	push	r13
  e4:	ef 92       	push	r14
  e6:	ff 92       	push	r15
  e8:	0f 93       	push	r16
  ea:	1f 93       	push	r17
  ec:	cf 93       	push	r28
  ee:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\n");
  f0:	80 e1       	ldi	r24, 0x10	; 16
  f2:	91 e0       	ldi	r25, 0x01	; 1
  f4:	0e 94 c4 01 	call	0x388	; 0x388 <puts>
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before thisfunction)
	uint16_t seed = rand();
  f8:	0e 94 55 01 	call	0x2aa	; 0x2aa <rand>
  fc:	6c 01       	movw	r12, r24
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
  fe:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 102:	c0 e0       	ldi	r28, 0x00	; 0
 104:	d0 e0       	ldi	r29, 0x00	; 0

void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
 106:	00 e0       	ldi	r16, 0x00	; 0
 108:	10 e0       	ldi	r17, 0x00	; 0
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		ext_ram[i] = some_value;
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,retreived_value, some_value);
 10a:	0f 2e       	mov	r0, r31
 10c:	f6 e2       	ldi	r31, 0x26	; 38
 10e:	ef 2e       	mov	r14, r31
 110:	f1 e0       	ldi	r31, 0x01	; 1
 112:	ff 2e       	mov	r15, r31
 114:	f0 2d       	mov	r31, r0
	// yield different seeds each time (unless srand() is called before thisfunction)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
 116:	0e 94 55 01 	call	0x2aa	; 0x2aa <rand>
 11a:	fe 01       	movw	r30, r28
 11c:	f8 5e       	subi	r31, 0xE8	; 232
		ext_ram[i] = some_value;
 11e:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
 120:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
 122:	28 17       	cp	r18, r24
 124:	a9 f0       	breq	.+42     	; 0x150 <SRAM_test+0x70>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,retreived_value, some_value);
 126:	99 27       	eor	r25, r25
 128:	9f 93       	push	r25
 12a:	8f 93       	push	r24
 12c:	1f 92       	push	r1
 12e:	2f 93       	push	r18
 130:	df 93       	push	r29
 132:	cf 93       	push	r28
 134:	ff 92       	push	r15
 136:	ef 92       	push	r14
 138:	0e 94 b0 01 	call	0x360	; 0x360 <printf>
			write_errors++;
 13c:	0f 5f       	subi	r16, 0xFF	; 255
 13e:	1f 4f       	sbci	r17, 0xFF	; 255
 140:	8d b7       	in	r24, 0x3d	; 61
 142:	9e b7       	in	r25, 0x3e	; 62
 144:	08 96       	adiw	r24, 0x08	; 8
 146:	0f b6       	in	r0, 0x3f	; 63
 148:	f8 94       	cli
 14a:	9e bf       	out	0x3e, r25	; 62
 14c:	0f be       	out	0x3f, r0	; 63
 14e:	8d bf       	out	0x3d, r24	; 61
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before thisfunction)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 150:	21 96       	adiw	r28, 0x01	; 1
 152:	c1 15       	cp	r28, r1
 154:	98 e0       	ldi	r25, 0x08	; 8
 156:	d9 07       	cpc	r29, r25
 158:	f1 f6       	brne	.-68     	; 0x116 <SRAM_test+0x36>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,retreived_value, some_value);
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the writephase
	srand(seed);
 15a:	c6 01       	movw	r24, r12
 15c:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <srand>
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 160:	c0 e0       	ldi	r28, 0x00	; 0
 162:	d0 e0       	ldi	r29, 0x00	; 0
void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
 164:	e1 2c       	mov	r14, r1
 166:	f1 2c       	mov	r15, r1
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n",i, retreived_value, some_value);
 168:	0f 2e       	mov	r0, r31
 16a:	ff e5       	ldi	r31, 0x5F	; 95
 16c:	cf 2e       	mov	r12, r31
 16e:	f1 e0       	ldi	r31, 0x01	; 1
 170:	df 2e       	mov	r13, r31
 172:	f0 2d       	mov	r31, r0
	}
	// Retrieval phase: Check that no values were changed during or after the writephase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
 174:	0e 94 55 01 	call	0x2aa	; 0x2aa <rand>
 178:	fe 01       	movw	r30, r28
 17a:	f8 5e       	subi	r31, 0xE8	; 232
		uint8_t retreived_value = ext_ram[i];
 17c:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
 17e:	28 17       	cp	r18, r24
 180:	b1 f0       	breq	.+44     	; 0x1ae <SRAM_test+0xce>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n",i, retreived_value, some_value);
 182:	99 27       	eor	r25, r25
 184:	9f 93       	push	r25
 186:	8f 93       	push	r24
 188:	1f 92       	push	r1
 18a:	2f 93       	push	r18
 18c:	df 93       	push	r29
 18e:	cf 93       	push	r28
 190:	df 92       	push	r13
 192:	cf 92       	push	r12
 194:	0e 94 b0 01 	call	0x360	; 0x360 <printf>
			retrieval_errors++;
 198:	8f ef       	ldi	r24, 0xFF	; 255
 19a:	e8 1a       	sub	r14, r24
 19c:	f8 0a       	sbc	r15, r24
 19e:	8d b7       	in	r24, 0x3d	; 61
 1a0:	9e b7       	in	r25, 0x3e	; 62
 1a2:	08 96       	adiw	r24, 0x08	; 8
 1a4:	0f b6       	in	r0, 0x3f	; 63
 1a6:	f8 94       	cli
 1a8:	9e bf       	out	0x3e, r25	; 62
 1aa:	0f be       	out	0x3f, r0	; 63
 1ac:	8d bf       	out	0x3d, r24	; 61
		}
	}
	// Retrieval phase: Check that no values were changed during or after the writephase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 1ae:	21 96       	adiw	r28, 0x01	; 1
 1b0:	c1 15       	cp	r28, r1
 1b2:	98 e0       	ldi	r25, 0x08	; 8
 1b4:	d9 07       	cpc	r29, r25
 1b6:	f1 f6       	brne	.-68     	; 0x174 <SRAM_test+0x94>
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n",i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with\n%4d errors in write phase and\n%4d errorsin retrieval phase\n\n", write_errors, retrieval_errors);
 1b8:	ff 92       	push	r15
 1ba:	ef 92       	push	r14
 1bc:	1f 93       	push	r17
 1be:	0f 93       	push	r16
 1c0:	8c e9       	ldi	r24, 0x9C	; 156
 1c2:	91 e0       	ldi	r25, 0x01	; 1
 1c4:	9f 93       	push	r25
 1c6:	8f 93       	push	r24
 1c8:	0e 94 b0 01 	call	0x360	; 0x360 <printf>
 1cc:	0f 90       	pop	r0
 1ce:	0f 90       	pop	r0
 1d0:	0f 90       	pop	r0
 1d2:	0f 90       	pop	r0
 1d4:	0f 90       	pop	r0
 1d6:	0f 90       	pop	r0
 1d8:	df 91       	pop	r29
 1da:	cf 91       	pop	r28
 1dc:	1f 91       	pop	r17
 1de:	0f 91       	pop	r16
 1e0:	ff 90       	pop	r15
 1e2:	ef 90       	pop	r14
 1e4:	df 90       	pop	r13
 1e6:	cf 90       	pop	r12
 1e8:	08 95       	ret

000001ea <UART_Transmit>:
 1ea:	5d 9b       	sbis	0x0b, 5	; 11
 1ec:	fe cf       	rjmp	.-4      	; 0x1ea <UART_Transmit>
 1ee:	8c b9       	out	0x0c, r24	; 12
 1f0:	08 95       	ret

000001f2 <UART_Receive>:
 1f2:	5f 9b       	sbis	0x0b, 7	; 11
 1f4:	fe cf       	rjmp	.-4      	; 0x1f2 <UART_Receive>
 1f6:	8c b1       	in	r24, 0x0c	; 12
 1f8:	08 95       	ret

000001fa <UART_Init>:
 1fa:	89 b9       	out	0x09, r24	; 9
 1fc:	88 e1       	ldi	r24, 0x18	; 24
 1fe:	8a b9       	out	0x0a, r24	; 10
 200:	69 ef       	ldi	r22, 0xF9	; 249
 202:	70 e0       	ldi	r23, 0x00	; 0
 204:	85 ef       	ldi	r24, 0xF5	; 245
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	0e 94 65 01 	call	0x2ca	; 0x2ca <fdevopen>
 20c:	08 95       	ret

0000020e <do_rand>:
 20e:	8f 92       	push	r8
 210:	9f 92       	push	r9
 212:	af 92       	push	r10
 214:	bf 92       	push	r11
 216:	cf 92       	push	r12
 218:	df 92       	push	r13
 21a:	ef 92       	push	r14
 21c:	ff 92       	push	r15
 21e:	cf 93       	push	r28
 220:	df 93       	push	r29
 222:	ec 01       	movw	r28, r24
 224:	68 81       	ld	r22, Y
 226:	79 81       	ldd	r23, Y+1	; 0x01
 228:	8a 81       	ldd	r24, Y+2	; 0x02
 22a:	9b 81       	ldd	r25, Y+3	; 0x03
 22c:	61 15       	cp	r22, r1
 22e:	71 05       	cpc	r23, r1
 230:	81 05       	cpc	r24, r1
 232:	91 05       	cpc	r25, r1
 234:	21 f4       	brne	.+8      	; 0x23e <do_rand+0x30>
 236:	64 e2       	ldi	r22, 0x24	; 36
 238:	79 ed       	ldi	r23, 0xD9	; 217
 23a:	8b e5       	ldi	r24, 0x5B	; 91
 23c:	97 e0       	ldi	r25, 0x07	; 7
 23e:	2d e1       	ldi	r18, 0x1D	; 29
 240:	33 ef       	ldi	r19, 0xF3	; 243
 242:	41 e0       	ldi	r20, 0x01	; 1
 244:	50 e0       	ldi	r21, 0x00	; 0
 246:	0e 94 b3 05 	call	0xb66	; 0xb66 <__divmodsi4>
 24a:	49 01       	movw	r8, r18
 24c:	5a 01       	movw	r10, r20
 24e:	9b 01       	movw	r18, r22
 250:	ac 01       	movw	r20, r24
 252:	a7 ea       	ldi	r26, 0xA7	; 167
 254:	b1 e4       	ldi	r27, 0x41	; 65
 256:	0e 94 d2 05 	call	0xba4	; 0xba4 <__muluhisi3>
 25a:	6b 01       	movw	r12, r22
 25c:	7c 01       	movw	r14, r24
 25e:	ac ee       	ldi	r26, 0xEC	; 236
 260:	b4 ef       	ldi	r27, 0xF4	; 244
 262:	a5 01       	movw	r20, r10
 264:	94 01       	movw	r18, r8
 266:	0e 94 e0 05 	call	0xbc0	; 0xbc0 <__mulohisi3>
 26a:	c6 0e       	add	r12, r22
 26c:	d7 1e       	adc	r13, r23
 26e:	e8 1e       	adc	r14, r24
 270:	f9 1e       	adc	r15, r25
 272:	f7 fe       	sbrs	r15, 7
 274:	06 c0       	rjmp	.+12     	; 0x282 <do_rand+0x74>
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	c8 1a       	sub	r12, r24
 27a:	d1 08       	sbc	r13, r1
 27c:	e1 08       	sbc	r14, r1
 27e:	80 e8       	ldi	r24, 0x80	; 128
 280:	f8 0a       	sbc	r15, r24
 282:	c8 82       	st	Y, r12
 284:	d9 82       	std	Y+1, r13	; 0x01
 286:	ea 82       	std	Y+2, r14	; 0x02
 288:	fb 82       	std	Y+3, r15	; 0x03
 28a:	c6 01       	movw	r24, r12
 28c:	9f 77       	andi	r25, 0x7F	; 127
 28e:	df 91       	pop	r29
 290:	cf 91       	pop	r28
 292:	ff 90       	pop	r15
 294:	ef 90       	pop	r14
 296:	df 90       	pop	r13
 298:	cf 90       	pop	r12
 29a:	bf 90       	pop	r11
 29c:	af 90       	pop	r10
 29e:	9f 90       	pop	r9
 2a0:	8f 90       	pop	r8
 2a2:	08 95       	ret

000002a4 <rand_r>:
 2a4:	0e 94 07 01 	call	0x20e	; 0x20e <do_rand>
 2a8:	08 95       	ret

000002aa <rand>:
 2aa:	80 e0       	ldi	r24, 0x00	; 0
 2ac:	91 e0       	ldi	r25, 0x01	; 1
 2ae:	0e 94 07 01 	call	0x20e	; 0x20e <do_rand>
 2b2:	08 95       	ret

000002b4 <srand>:
 2b4:	a0 e0       	ldi	r26, 0x00	; 0
 2b6:	b0 e0       	ldi	r27, 0x00	; 0
 2b8:	80 93 00 01 	sts	0x0100, r24
 2bc:	90 93 01 01 	sts	0x0101, r25
 2c0:	a0 93 02 01 	sts	0x0102, r26
 2c4:	b0 93 03 01 	sts	0x0103, r27
 2c8:	08 95       	ret

000002ca <fdevopen>:
 2ca:	0f 93       	push	r16
 2cc:	1f 93       	push	r17
 2ce:	cf 93       	push	r28
 2d0:	df 93       	push	r29
 2d2:	ec 01       	movw	r28, r24
 2d4:	8b 01       	movw	r16, r22
 2d6:	00 97       	sbiw	r24, 0x00	; 0
 2d8:	31 f4       	brne	.+12     	; 0x2e6 <fdevopen+0x1c>
 2da:	61 15       	cp	r22, r1
 2dc:	71 05       	cpc	r23, r1
 2de:	19 f4       	brne	.+6      	; 0x2e6 <fdevopen+0x1c>
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	38 c0       	rjmp	.+112    	; 0x356 <fdevopen+0x8c>
 2e6:	6e e0       	ldi	r22, 0x0E	; 14
 2e8:	70 e0       	ldi	r23, 0x00	; 0
 2ea:	81 e0       	ldi	r24, 0x01	; 1
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	0e 94 c3 03 	call	0x786	; 0x786 <calloc>
 2f2:	fc 01       	movw	r30, r24
 2f4:	00 97       	sbiw	r24, 0x00	; 0
 2f6:	a1 f3       	breq	.-24     	; 0x2e0 <fdevopen+0x16>
 2f8:	80 e8       	ldi	r24, 0x80	; 128
 2fa:	83 83       	std	Z+3, r24	; 0x03
 2fc:	01 15       	cp	r16, r1
 2fe:	11 05       	cpc	r17, r1
 300:	71 f0       	breq	.+28     	; 0x31e <fdevopen+0x54>
 302:	13 87       	std	Z+11, r17	; 0x0b
 304:	02 87       	std	Z+10, r16	; 0x0a
 306:	81 e8       	ldi	r24, 0x81	; 129
 308:	83 83       	std	Z+3, r24	; 0x03
 30a:	80 91 f2 01 	lds	r24, 0x01F2
 30e:	90 91 f3 01 	lds	r25, 0x01F3
 312:	89 2b       	or	r24, r25
 314:	21 f4       	brne	.+8      	; 0x31e <fdevopen+0x54>
 316:	f0 93 f3 01 	sts	0x01F3, r31
 31a:	e0 93 f2 01 	sts	0x01F2, r30
 31e:	20 97       	sbiw	r28, 0x00	; 0
 320:	c9 f0       	breq	.+50     	; 0x354 <fdevopen+0x8a>
 322:	d1 87       	std	Z+9, r29	; 0x09
 324:	c0 87       	std	Z+8, r28	; 0x08
 326:	83 81       	ldd	r24, Z+3	; 0x03
 328:	82 60       	ori	r24, 0x02	; 2
 32a:	83 83       	std	Z+3, r24	; 0x03
 32c:	80 91 f4 01 	lds	r24, 0x01F4
 330:	90 91 f5 01 	lds	r25, 0x01F5
 334:	89 2b       	or	r24, r25
 336:	71 f4       	brne	.+28     	; 0x354 <fdevopen+0x8a>
 338:	f0 93 f5 01 	sts	0x01F5, r31
 33c:	e0 93 f4 01 	sts	0x01F4, r30
 340:	80 91 f6 01 	lds	r24, 0x01F6
 344:	90 91 f7 01 	lds	r25, 0x01F7
 348:	89 2b       	or	r24, r25
 34a:	21 f4       	brne	.+8      	; 0x354 <fdevopen+0x8a>
 34c:	f0 93 f7 01 	sts	0x01F7, r31
 350:	e0 93 f6 01 	sts	0x01F6, r30
 354:	cf 01       	movw	r24, r30
 356:	df 91       	pop	r29
 358:	cf 91       	pop	r28
 35a:	1f 91       	pop	r17
 35c:	0f 91       	pop	r16
 35e:	08 95       	ret

00000360 <printf>:
 360:	a0 e0       	ldi	r26, 0x00	; 0
 362:	b0 e0       	ldi	r27, 0x00	; 0
 364:	e6 eb       	ldi	r30, 0xB6	; 182
 366:	f1 e0       	ldi	r31, 0x01	; 1
 368:	0c 94 f5 05 	jmp	0xbea	; 0xbea <__prologue_saves__+0x20>
 36c:	fe 01       	movw	r30, r28
 36e:	35 96       	adiw	r30, 0x05	; 5
 370:	61 91       	ld	r22, Z+
 372:	71 91       	ld	r23, Z+
 374:	af 01       	movw	r20, r30
 376:	80 91 f4 01 	lds	r24, 0x01F4
 37a:	90 91 f5 01 	lds	r25, 0x01F5
 37e:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <vfprintf>
 382:	e2 e0       	ldi	r30, 0x02	; 2
 384:	0c 94 11 06 	jmp	0xc22	; 0xc22 <__epilogue_restores__+0x20>

00000388 <puts>:
 388:	0f 93       	push	r16
 38a:	1f 93       	push	r17
 38c:	cf 93       	push	r28
 38e:	df 93       	push	r29
 390:	e0 91 f4 01 	lds	r30, 0x01F4
 394:	f0 91 f5 01 	lds	r31, 0x01F5
 398:	23 81       	ldd	r18, Z+3	; 0x03
 39a:	21 ff       	sbrs	r18, 1
 39c:	1b c0       	rjmp	.+54     	; 0x3d4 <puts+0x4c>
 39e:	ec 01       	movw	r28, r24
 3a0:	00 e0       	ldi	r16, 0x00	; 0
 3a2:	10 e0       	ldi	r17, 0x00	; 0
 3a4:	89 91       	ld	r24, Y+
 3a6:	60 91 f4 01 	lds	r22, 0x01F4
 3aa:	70 91 f5 01 	lds	r23, 0x01F5
 3ae:	db 01       	movw	r26, r22
 3b0:	18 96       	adiw	r26, 0x08	; 8
 3b2:	ed 91       	ld	r30, X+
 3b4:	fc 91       	ld	r31, X
 3b6:	19 97       	sbiw	r26, 0x09	; 9
 3b8:	88 23       	and	r24, r24
 3ba:	31 f0       	breq	.+12     	; 0x3c8 <puts+0x40>
 3bc:	09 95       	icall
 3be:	89 2b       	or	r24, r25
 3c0:	89 f3       	breq	.-30     	; 0x3a4 <puts+0x1c>
 3c2:	0f ef       	ldi	r16, 0xFF	; 255
 3c4:	1f ef       	ldi	r17, 0xFF	; 255
 3c6:	ee cf       	rjmp	.-36     	; 0x3a4 <puts+0x1c>
 3c8:	8a e0       	ldi	r24, 0x0A	; 10
 3ca:	09 95       	icall
 3cc:	89 2b       	or	r24, r25
 3ce:	11 f4       	brne	.+4      	; 0x3d4 <puts+0x4c>
 3d0:	c8 01       	movw	r24, r16
 3d2:	02 c0       	rjmp	.+4      	; 0x3d8 <puts+0x50>
 3d4:	8f ef       	ldi	r24, 0xFF	; 255
 3d6:	9f ef       	ldi	r25, 0xFF	; 255
 3d8:	df 91       	pop	r29
 3da:	cf 91       	pop	r28
 3dc:	1f 91       	pop	r17
 3de:	0f 91       	pop	r16
 3e0:	08 95       	ret

000003e2 <vfprintf>:
 3e2:	ac e0       	ldi	r26, 0x0C	; 12
 3e4:	b0 e0       	ldi	r27, 0x00	; 0
 3e6:	e7 ef       	ldi	r30, 0xF7	; 247
 3e8:	f1 e0       	ldi	r31, 0x01	; 1
 3ea:	0c 94 e5 05 	jmp	0xbca	; 0xbca <__prologue_saves__>
 3ee:	7c 01       	movw	r14, r24
 3f0:	6b 01       	movw	r12, r22
 3f2:	8a 01       	movw	r16, r20
 3f4:	fc 01       	movw	r30, r24
 3f6:	17 82       	std	Z+7, r1	; 0x07
 3f8:	16 82       	std	Z+6, r1	; 0x06
 3fa:	83 81       	ldd	r24, Z+3	; 0x03
 3fc:	81 ff       	sbrs	r24, 1
 3fe:	bd c1       	rjmp	.+890    	; 0x77a <__stack+0x27b>
 400:	ce 01       	movw	r24, r28
 402:	01 96       	adiw	r24, 0x01	; 1
 404:	4c 01       	movw	r8, r24
 406:	f7 01       	movw	r30, r14
 408:	93 81       	ldd	r25, Z+3	; 0x03
 40a:	f6 01       	movw	r30, r12
 40c:	93 fd       	sbrc	r25, 3
 40e:	85 91       	lpm	r24, Z+
 410:	93 ff       	sbrs	r25, 3
 412:	81 91       	ld	r24, Z+
 414:	6f 01       	movw	r12, r30
 416:	88 23       	and	r24, r24
 418:	09 f4       	brne	.+2      	; 0x41c <vfprintf+0x3a>
 41a:	ab c1       	rjmp	.+854    	; 0x772 <__stack+0x273>
 41c:	85 32       	cpi	r24, 0x25	; 37
 41e:	39 f4       	brne	.+14     	; 0x42e <vfprintf+0x4c>
 420:	93 fd       	sbrc	r25, 3
 422:	85 91       	lpm	r24, Z+
 424:	93 ff       	sbrs	r25, 3
 426:	81 91       	ld	r24, Z+
 428:	6f 01       	movw	r12, r30
 42a:	85 32       	cpi	r24, 0x25	; 37
 42c:	29 f4       	brne	.+10     	; 0x438 <vfprintf+0x56>
 42e:	b7 01       	movw	r22, r14
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	0e 94 23 05 	call	0xa46	; 0xa46 <fputc>
 436:	e7 cf       	rjmp	.-50     	; 0x406 <vfprintf+0x24>
 438:	51 2c       	mov	r5, r1
 43a:	31 2c       	mov	r3, r1
 43c:	20 e0       	ldi	r18, 0x00	; 0
 43e:	20 32       	cpi	r18, 0x20	; 32
 440:	a0 f4       	brcc	.+40     	; 0x46a <vfprintf+0x88>
 442:	8b 32       	cpi	r24, 0x2B	; 43
 444:	69 f0       	breq	.+26     	; 0x460 <vfprintf+0x7e>
 446:	30 f4       	brcc	.+12     	; 0x454 <vfprintf+0x72>
 448:	80 32       	cpi	r24, 0x20	; 32
 44a:	59 f0       	breq	.+22     	; 0x462 <vfprintf+0x80>
 44c:	83 32       	cpi	r24, 0x23	; 35
 44e:	69 f4       	brne	.+26     	; 0x46a <vfprintf+0x88>
 450:	20 61       	ori	r18, 0x10	; 16
 452:	2c c0       	rjmp	.+88     	; 0x4ac <vfprintf+0xca>
 454:	8d 32       	cpi	r24, 0x2D	; 45
 456:	39 f0       	breq	.+14     	; 0x466 <vfprintf+0x84>
 458:	80 33       	cpi	r24, 0x30	; 48
 45a:	39 f4       	brne	.+14     	; 0x46a <vfprintf+0x88>
 45c:	21 60       	ori	r18, 0x01	; 1
 45e:	26 c0       	rjmp	.+76     	; 0x4ac <vfprintf+0xca>
 460:	22 60       	ori	r18, 0x02	; 2
 462:	24 60       	ori	r18, 0x04	; 4
 464:	23 c0       	rjmp	.+70     	; 0x4ac <vfprintf+0xca>
 466:	28 60       	ori	r18, 0x08	; 8
 468:	21 c0       	rjmp	.+66     	; 0x4ac <vfprintf+0xca>
 46a:	27 fd       	sbrc	r18, 7
 46c:	27 c0       	rjmp	.+78     	; 0x4bc <vfprintf+0xda>
 46e:	30 ed       	ldi	r19, 0xD0	; 208
 470:	38 0f       	add	r19, r24
 472:	3a 30       	cpi	r19, 0x0A	; 10
 474:	78 f4       	brcc	.+30     	; 0x494 <vfprintf+0xb2>
 476:	26 ff       	sbrs	r18, 6
 478:	06 c0       	rjmp	.+12     	; 0x486 <vfprintf+0xa4>
 47a:	fa e0       	ldi	r31, 0x0A	; 10
 47c:	5f 9e       	mul	r5, r31
 47e:	30 0d       	add	r19, r0
 480:	11 24       	eor	r1, r1
 482:	53 2e       	mov	r5, r19
 484:	13 c0       	rjmp	.+38     	; 0x4ac <vfprintf+0xca>
 486:	8a e0       	ldi	r24, 0x0A	; 10
 488:	38 9e       	mul	r3, r24
 48a:	30 0d       	add	r19, r0
 48c:	11 24       	eor	r1, r1
 48e:	33 2e       	mov	r3, r19
 490:	20 62       	ori	r18, 0x20	; 32
 492:	0c c0       	rjmp	.+24     	; 0x4ac <vfprintf+0xca>
 494:	8e 32       	cpi	r24, 0x2E	; 46
 496:	21 f4       	brne	.+8      	; 0x4a0 <vfprintf+0xbe>
 498:	26 fd       	sbrc	r18, 6
 49a:	6b c1       	rjmp	.+726    	; 0x772 <__stack+0x273>
 49c:	20 64       	ori	r18, 0x40	; 64
 49e:	06 c0       	rjmp	.+12     	; 0x4ac <vfprintf+0xca>
 4a0:	8c 36       	cpi	r24, 0x6C	; 108
 4a2:	11 f4       	brne	.+4      	; 0x4a8 <vfprintf+0xc6>
 4a4:	20 68       	ori	r18, 0x80	; 128
 4a6:	02 c0       	rjmp	.+4      	; 0x4ac <vfprintf+0xca>
 4a8:	88 36       	cpi	r24, 0x68	; 104
 4aa:	41 f4       	brne	.+16     	; 0x4bc <vfprintf+0xda>
 4ac:	f6 01       	movw	r30, r12
 4ae:	93 fd       	sbrc	r25, 3
 4b0:	85 91       	lpm	r24, Z+
 4b2:	93 ff       	sbrs	r25, 3
 4b4:	81 91       	ld	r24, Z+
 4b6:	6f 01       	movw	r12, r30
 4b8:	81 11       	cpse	r24, r1
 4ba:	c1 cf       	rjmp	.-126    	; 0x43e <vfprintf+0x5c>
 4bc:	98 2f       	mov	r25, r24
 4be:	9f 7d       	andi	r25, 0xDF	; 223
 4c0:	95 54       	subi	r25, 0x45	; 69
 4c2:	93 30       	cpi	r25, 0x03	; 3
 4c4:	28 f4       	brcc	.+10     	; 0x4d0 <vfprintf+0xee>
 4c6:	0c 5f       	subi	r16, 0xFC	; 252
 4c8:	1f 4f       	sbci	r17, 0xFF	; 255
 4ca:	ff e3       	ldi	r31, 0x3F	; 63
 4cc:	f9 83       	std	Y+1, r31	; 0x01
 4ce:	0d c0       	rjmp	.+26     	; 0x4ea <vfprintf+0x108>
 4d0:	83 36       	cpi	r24, 0x63	; 99
 4d2:	31 f0       	breq	.+12     	; 0x4e0 <vfprintf+0xfe>
 4d4:	83 37       	cpi	r24, 0x73	; 115
 4d6:	71 f0       	breq	.+28     	; 0x4f4 <vfprintf+0x112>
 4d8:	83 35       	cpi	r24, 0x53	; 83
 4da:	09 f0       	breq	.+2      	; 0x4de <vfprintf+0xfc>
 4dc:	5b c0       	rjmp	.+182    	; 0x594 <__stack+0x95>
 4de:	22 c0       	rjmp	.+68     	; 0x524 <__stack+0x25>
 4e0:	f8 01       	movw	r30, r16
 4e2:	80 81       	ld	r24, Z
 4e4:	89 83       	std	Y+1, r24	; 0x01
 4e6:	0e 5f       	subi	r16, 0xFE	; 254
 4e8:	1f 4f       	sbci	r17, 0xFF	; 255
 4ea:	44 24       	eor	r4, r4
 4ec:	43 94       	inc	r4
 4ee:	51 2c       	mov	r5, r1
 4f0:	54 01       	movw	r10, r8
 4f2:	15 c0       	rjmp	.+42     	; 0x51e <__stack+0x1f>
 4f4:	38 01       	movw	r6, r16
 4f6:	f2 e0       	ldi	r31, 0x02	; 2
 4f8:	6f 0e       	add	r6, r31
 4fa:	71 1c       	adc	r7, r1
 4fc:	f8 01       	movw	r30, r16
 4fe:	a0 80       	ld	r10, Z
 500:	b1 80       	ldd	r11, Z+1	; 0x01
 502:	26 ff       	sbrs	r18, 6
 504:	03 c0       	rjmp	.+6      	; 0x50c <__stack+0xd>
 506:	65 2d       	mov	r22, r5
 508:	70 e0       	ldi	r23, 0x00	; 0
 50a:	02 c0       	rjmp	.+4      	; 0x510 <__stack+0x11>
 50c:	6f ef       	ldi	r22, 0xFF	; 255
 50e:	7f ef       	ldi	r23, 0xFF	; 255
 510:	c5 01       	movw	r24, r10
 512:	2c 87       	std	Y+12, r18	; 0x0c
 514:	0e 94 18 05 	call	0xa30	; 0xa30 <strnlen>
 518:	2c 01       	movw	r4, r24
 51a:	83 01       	movw	r16, r6
 51c:	2c 85       	ldd	r18, Y+12	; 0x0c
 51e:	2f 77       	andi	r18, 0x7F	; 127
 520:	22 2e       	mov	r2, r18
 522:	17 c0       	rjmp	.+46     	; 0x552 <__stack+0x53>
 524:	38 01       	movw	r6, r16
 526:	f2 e0       	ldi	r31, 0x02	; 2
 528:	6f 0e       	add	r6, r31
 52a:	71 1c       	adc	r7, r1
 52c:	f8 01       	movw	r30, r16
 52e:	a0 80       	ld	r10, Z
 530:	b1 80       	ldd	r11, Z+1	; 0x01
 532:	26 ff       	sbrs	r18, 6
 534:	03 c0       	rjmp	.+6      	; 0x53c <__stack+0x3d>
 536:	65 2d       	mov	r22, r5
 538:	70 e0       	ldi	r23, 0x00	; 0
 53a:	02 c0       	rjmp	.+4      	; 0x540 <__stack+0x41>
 53c:	6f ef       	ldi	r22, 0xFF	; 255
 53e:	7f ef       	ldi	r23, 0xFF	; 255
 540:	c5 01       	movw	r24, r10
 542:	2c 87       	std	Y+12, r18	; 0x0c
 544:	0e 94 06 05 	call	0xa0c	; 0xa0c <strnlen_P>
 548:	2c 01       	movw	r4, r24
 54a:	2c 85       	ldd	r18, Y+12	; 0x0c
 54c:	20 68       	ori	r18, 0x80	; 128
 54e:	22 2e       	mov	r2, r18
 550:	83 01       	movw	r16, r6
 552:	23 fc       	sbrc	r2, 3
 554:	1b c0       	rjmp	.+54     	; 0x58c <__stack+0x8d>
 556:	83 2d       	mov	r24, r3
 558:	90 e0       	ldi	r25, 0x00	; 0
 55a:	48 16       	cp	r4, r24
 55c:	59 06       	cpc	r5, r25
 55e:	b0 f4       	brcc	.+44     	; 0x58c <__stack+0x8d>
 560:	b7 01       	movw	r22, r14
 562:	80 e2       	ldi	r24, 0x20	; 32
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	0e 94 23 05 	call	0xa46	; 0xa46 <fputc>
 56a:	3a 94       	dec	r3
 56c:	f4 cf       	rjmp	.-24     	; 0x556 <__stack+0x57>
 56e:	f5 01       	movw	r30, r10
 570:	27 fc       	sbrc	r2, 7
 572:	85 91       	lpm	r24, Z+
 574:	27 fe       	sbrs	r2, 7
 576:	81 91       	ld	r24, Z+
 578:	5f 01       	movw	r10, r30
 57a:	b7 01       	movw	r22, r14
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	0e 94 23 05 	call	0xa46	; 0xa46 <fputc>
 582:	31 10       	cpse	r3, r1
 584:	3a 94       	dec	r3
 586:	f1 e0       	ldi	r31, 0x01	; 1
 588:	4f 1a       	sub	r4, r31
 58a:	51 08       	sbc	r5, r1
 58c:	41 14       	cp	r4, r1
 58e:	51 04       	cpc	r5, r1
 590:	71 f7       	brne	.-36     	; 0x56e <__stack+0x6f>
 592:	e5 c0       	rjmp	.+458    	; 0x75e <__stack+0x25f>
 594:	84 36       	cpi	r24, 0x64	; 100
 596:	11 f0       	breq	.+4      	; 0x59c <__stack+0x9d>
 598:	89 36       	cpi	r24, 0x69	; 105
 59a:	39 f5       	brne	.+78     	; 0x5ea <__stack+0xeb>
 59c:	f8 01       	movw	r30, r16
 59e:	27 ff       	sbrs	r18, 7
 5a0:	07 c0       	rjmp	.+14     	; 0x5b0 <__stack+0xb1>
 5a2:	60 81       	ld	r22, Z
 5a4:	71 81       	ldd	r23, Z+1	; 0x01
 5a6:	82 81       	ldd	r24, Z+2	; 0x02
 5a8:	93 81       	ldd	r25, Z+3	; 0x03
 5aa:	0c 5f       	subi	r16, 0xFC	; 252
 5ac:	1f 4f       	sbci	r17, 0xFF	; 255
 5ae:	08 c0       	rjmp	.+16     	; 0x5c0 <__stack+0xc1>
 5b0:	60 81       	ld	r22, Z
 5b2:	71 81       	ldd	r23, Z+1	; 0x01
 5b4:	88 27       	eor	r24, r24
 5b6:	77 fd       	sbrc	r23, 7
 5b8:	80 95       	com	r24
 5ba:	98 2f       	mov	r25, r24
 5bc:	0e 5f       	subi	r16, 0xFE	; 254
 5be:	1f 4f       	sbci	r17, 0xFF	; 255
 5c0:	2f 76       	andi	r18, 0x6F	; 111
 5c2:	b2 2e       	mov	r11, r18
 5c4:	97 ff       	sbrs	r25, 7
 5c6:	09 c0       	rjmp	.+18     	; 0x5da <__stack+0xdb>
 5c8:	90 95       	com	r25
 5ca:	80 95       	com	r24
 5cc:	70 95       	com	r23
 5ce:	61 95       	neg	r22
 5d0:	7f 4f       	sbci	r23, 0xFF	; 255
 5d2:	8f 4f       	sbci	r24, 0xFF	; 255
 5d4:	9f 4f       	sbci	r25, 0xFF	; 255
 5d6:	20 68       	ori	r18, 0x80	; 128
 5d8:	b2 2e       	mov	r11, r18
 5da:	2a e0       	ldi	r18, 0x0A	; 10
 5dc:	30 e0       	ldi	r19, 0x00	; 0
 5de:	a4 01       	movw	r20, r8
 5e0:	0e 94 55 05 	call	0xaaa	; 0xaaa <__ultoa_invert>
 5e4:	a8 2e       	mov	r10, r24
 5e6:	a8 18       	sub	r10, r8
 5e8:	44 c0       	rjmp	.+136    	; 0x672 <__stack+0x173>
 5ea:	85 37       	cpi	r24, 0x75	; 117
 5ec:	29 f4       	brne	.+10     	; 0x5f8 <__stack+0xf9>
 5ee:	2f 7e       	andi	r18, 0xEF	; 239
 5f0:	b2 2e       	mov	r11, r18
 5f2:	2a e0       	ldi	r18, 0x0A	; 10
 5f4:	30 e0       	ldi	r19, 0x00	; 0
 5f6:	25 c0       	rjmp	.+74     	; 0x642 <__stack+0x143>
 5f8:	f2 2f       	mov	r31, r18
 5fa:	f9 7f       	andi	r31, 0xF9	; 249
 5fc:	bf 2e       	mov	r11, r31
 5fe:	8f 36       	cpi	r24, 0x6F	; 111
 600:	c1 f0       	breq	.+48     	; 0x632 <__stack+0x133>
 602:	18 f4       	brcc	.+6      	; 0x60a <__stack+0x10b>
 604:	88 35       	cpi	r24, 0x58	; 88
 606:	79 f0       	breq	.+30     	; 0x626 <__stack+0x127>
 608:	b4 c0       	rjmp	.+360    	; 0x772 <__stack+0x273>
 60a:	80 37       	cpi	r24, 0x70	; 112
 60c:	19 f0       	breq	.+6      	; 0x614 <__stack+0x115>
 60e:	88 37       	cpi	r24, 0x78	; 120
 610:	21 f0       	breq	.+8      	; 0x61a <__stack+0x11b>
 612:	af c0       	rjmp	.+350    	; 0x772 <__stack+0x273>
 614:	2f 2f       	mov	r18, r31
 616:	20 61       	ori	r18, 0x10	; 16
 618:	b2 2e       	mov	r11, r18
 61a:	b4 fe       	sbrs	r11, 4
 61c:	0d c0       	rjmp	.+26     	; 0x638 <__stack+0x139>
 61e:	8b 2d       	mov	r24, r11
 620:	84 60       	ori	r24, 0x04	; 4
 622:	b8 2e       	mov	r11, r24
 624:	09 c0       	rjmp	.+18     	; 0x638 <__stack+0x139>
 626:	24 ff       	sbrs	r18, 4
 628:	0a c0       	rjmp	.+20     	; 0x63e <__stack+0x13f>
 62a:	9f 2f       	mov	r25, r31
 62c:	96 60       	ori	r25, 0x06	; 6
 62e:	b9 2e       	mov	r11, r25
 630:	06 c0       	rjmp	.+12     	; 0x63e <__stack+0x13f>
 632:	28 e0       	ldi	r18, 0x08	; 8
 634:	30 e0       	ldi	r19, 0x00	; 0
 636:	05 c0       	rjmp	.+10     	; 0x642 <__stack+0x143>
 638:	20 e1       	ldi	r18, 0x10	; 16
 63a:	30 e0       	ldi	r19, 0x00	; 0
 63c:	02 c0       	rjmp	.+4      	; 0x642 <__stack+0x143>
 63e:	20 e1       	ldi	r18, 0x10	; 16
 640:	32 e0       	ldi	r19, 0x02	; 2
 642:	f8 01       	movw	r30, r16
 644:	b7 fe       	sbrs	r11, 7
 646:	07 c0       	rjmp	.+14     	; 0x656 <__stack+0x157>
 648:	60 81       	ld	r22, Z
 64a:	71 81       	ldd	r23, Z+1	; 0x01
 64c:	82 81       	ldd	r24, Z+2	; 0x02
 64e:	93 81       	ldd	r25, Z+3	; 0x03
 650:	0c 5f       	subi	r16, 0xFC	; 252
 652:	1f 4f       	sbci	r17, 0xFF	; 255
 654:	06 c0       	rjmp	.+12     	; 0x662 <__stack+0x163>
 656:	60 81       	ld	r22, Z
 658:	71 81       	ldd	r23, Z+1	; 0x01
 65a:	80 e0       	ldi	r24, 0x00	; 0
 65c:	90 e0       	ldi	r25, 0x00	; 0
 65e:	0e 5f       	subi	r16, 0xFE	; 254
 660:	1f 4f       	sbci	r17, 0xFF	; 255
 662:	a4 01       	movw	r20, r8
 664:	0e 94 55 05 	call	0xaaa	; 0xaaa <__ultoa_invert>
 668:	a8 2e       	mov	r10, r24
 66a:	a8 18       	sub	r10, r8
 66c:	fb 2d       	mov	r31, r11
 66e:	ff 77       	andi	r31, 0x7F	; 127
 670:	bf 2e       	mov	r11, r31
 672:	b6 fe       	sbrs	r11, 6
 674:	0b c0       	rjmp	.+22     	; 0x68c <__stack+0x18d>
 676:	2b 2d       	mov	r18, r11
 678:	2e 7f       	andi	r18, 0xFE	; 254
 67a:	a5 14       	cp	r10, r5
 67c:	50 f4       	brcc	.+20     	; 0x692 <__stack+0x193>
 67e:	b4 fe       	sbrs	r11, 4
 680:	0a c0       	rjmp	.+20     	; 0x696 <__stack+0x197>
 682:	b2 fc       	sbrc	r11, 2
 684:	08 c0       	rjmp	.+16     	; 0x696 <__stack+0x197>
 686:	2b 2d       	mov	r18, r11
 688:	2e 7e       	andi	r18, 0xEE	; 238
 68a:	05 c0       	rjmp	.+10     	; 0x696 <__stack+0x197>
 68c:	7a 2c       	mov	r7, r10
 68e:	2b 2d       	mov	r18, r11
 690:	03 c0       	rjmp	.+6      	; 0x698 <__stack+0x199>
 692:	7a 2c       	mov	r7, r10
 694:	01 c0       	rjmp	.+2      	; 0x698 <__stack+0x199>
 696:	75 2c       	mov	r7, r5
 698:	24 ff       	sbrs	r18, 4
 69a:	0d c0       	rjmp	.+26     	; 0x6b6 <__stack+0x1b7>
 69c:	fe 01       	movw	r30, r28
 69e:	ea 0d       	add	r30, r10
 6a0:	f1 1d       	adc	r31, r1
 6a2:	80 81       	ld	r24, Z
 6a4:	80 33       	cpi	r24, 0x30	; 48
 6a6:	11 f4       	brne	.+4      	; 0x6ac <__stack+0x1ad>
 6a8:	29 7e       	andi	r18, 0xE9	; 233
 6aa:	09 c0       	rjmp	.+18     	; 0x6be <__stack+0x1bf>
 6ac:	22 ff       	sbrs	r18, 2
 6ae:	06 c0       	rjmp	.+12     	; 0x6bc <__stack+0x1bd>
 6b0:	73 94       	inc	r7
 6b2:	73 94       	inc	r7
 6b4:	04 c0       	rjmp	.+8      	; 0x6be <__stack+0x1bf>
 6b6:	82 2f       	mov	r24, r18
 6b8:	86 78       	andi	r24, 0x86	; 134
 6ba:	09 f0       	breq	.+2      	; 0x6be <__stack+0x1bf>
 6bc:	73 94       	inc	r7
 6be:	23 fd       	sbrc	r18, 3
 6c0:	13 c0       	rjmp	.+38     	; 0x6e8 <__stack+0x1e9>
 6c2:	20 ff       	sbrs	r18, 0
 6c4:	06 c0       	rjmp	.+12     	; 0x6d2 <__stack+0x1d3>
 6c6:	5a 2c       	mov	r5, r10
 6c8:	73 14       	cp	r7, r3
 6ca:	18 f4       	brcc	.+6      	; 0x6d2 <__stack+0x1d3>
 6cc:	53 0c       	add	r5, r3
 6ce:	57 18       	sub	r5, r7
 6d0:	73 2c       	mov	r7, r3
 6d2:	73 14       	cp	r7, r3
 6d4:	68 f4       	brcc	.+26     	; 0x6f0 <__stack+0x1f1>
 6d6:	b7 01       	movw	r22, r14
 6d8:	80 e2       	ldi	r24, 0x20	; 32
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	2c 87       	std	Y+12, r18	; 0x0c
 6de:	0e 94 23 05 	call	0xa46	; 0xa46 <fputc>
 6e2:	73 94       	inc	r7
 6e4:	2c 85       	ldd	r18, Y+12	; 0x0c
 6e6:	f5 cf       	rjmp	.-22     	; 0x6d2 <__stack+0x1d3>
 6e8:	73 14       	cp	r7, r3
 6ea:	10 f4       	brcc	.+4      	; 0x6f0 <__stack+0x1f1>
 6ec:	37 18       	sub	r3, r7
 6ee:	01 c0       	rjmp	.+2      	; 0x6f2 <__stack+0x1f3>
 6f0:	31 2c       	mov	r3, r1
 6f2:	24 ff       	sbrs	r18, 4
 6f4:	12 c0       	rjmp	.+36     	; 0x71a <__stack+0x21b>
 6f6:	b7 01       	movw	r22, r14
 6f8:	80 e3       	ldi	r24, 0x30	; 48
 6fa:	90 e0       	ldi	r25, 0x00	; 0
 6fc:	2c 87       	std	Y+12, r18	; 0x0c
 6fe:	0e 94 23 05 	call	0xa46	; 0xa46 <fputc>
 702:	2c 85       	ldd	r18, Y+12	; 0x0c
 704:	22 ff       	sbrs	r18, 2
 706:	17 c0       	rjmp	.+46     	; 0x736 <__stack+0x237>
 708:	21 ff       	sbrs	r18, 1
 70a:	03 c0       	rjmp	.+6      	; 0x712 <__stack+0x213>
 70c:	88 e5       	ldi	r24, 0x58	; 88
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	02 c0       	rjmp	.+4      	; 0x716 <__stack+0x217>
 712:	88 e7       	ldi	r24, 0x78	; 120
 714:	90 e0       	ldi	r25, 0x00	; 0
 716:	b7 01       	movw	r22, r14
 718:	0c c0       	rjmp	.+24     	; 0x732 <__stack+0x233>
 71a:	82 2f       	mov	r24, r18
 71c:	86 78       	andi	r24, 0x86	; 134
 71e:	59 f0       	breq	.+22     	; 0x736 <__stack+0x237>
 720:	21 fd       	sbrc	r18, 1
 722:	02 c0       	rjmp	.+4      	; 0x728 <__stack+0x229>
 724:	80 e2       	ldi	r24, 0x20	; 32
 726:	01 c0       	rjmp	.+2      	; 0x72a <__stack+0x22b>
 728:	8b e2       	ldi	r24, 0x2B	; 43
 72a:	27 fd       	sbrc	r18, 7
 72c:	8d e2       	ldi	r24, 0x2D	; 45
 72e:	b7 01       	movw	r22, r14
 730:	90 e0       	ldi	r25, 0x00	; 0
 732:	0e 94 23 05 	call	0xa46	; 0xa46 <fputc>
 736:	a5 14       	cp	r10, r5
 738:	38 f4       	brcc	.+14     	; 0x748 <__stack+0x249>
 73a:	b7 01       	movw	r22, r14
 73c:	80 e3       	ldi	r24, 0x30	; 48
 73e:	90 e0       	ldi	r25, 0x00	; 0
 740:	0e 94 23 05 	call	0xa46	; 0xa46 <fputc>
 744:	5a 94       	dec	r5
 746:	f7 cf       	rjmp	.-18     	; 0x736 <__stack+0x237>
 748:	aa 94       	dec	r10
 74a:	f4 01       	movw	r30, r8
 74c:	ea 0d       	add	r30, r10
 74e:	f1 1d       	adc	r31, r1
 750:	80 81       	ld	r24, Z
 752:	b7 01       	movw	r22, r14
 754:	90 e0       	ldi	r25, 0x00	; 0
 756:	0e 94 23 05 	call	0xa46	; 0xa46 <fputc>
 75a:	a1 10       	cpse	r10, r1
 75c:	f5 cf       	rjmp	.-22     	; 0x748 <__stack+0x249>
 75e:	33 20       	and	r3, r3
 760:	09 f4       	brne	.+2      	; 0x764 <__stack+0x265>
 762:	51 ce       	rjmp	.-862    	; 0x406 <vfprintf+0x24>
 764:	b7 01       	movw	r22, r14
 766:	80 e2       	ldi	r24, 0x20	; 32
 768:	90 e0       	ldi	r25, 0x00	; 0
 76a:	0e 94 23 05 	call	0xa46	; 0xa46 <fputc>
 76e:	3a 94       	dec	r3
 770:	f6 cf       	rjmp	.-20     	; 0x75e <__stack+0x25f>
 772:	f7 01       	movw	r30, r14
 774:	86 81       	ldd	r24, Z+6	; 0x06
 776:	97 81       	ldd	r25, Z+7	; 0x07
 778:	02 c0       	rjmp	.+4      	; 0x77e <__stack+0x27f>
 77a:	8f ef       	ldi	r24, 0xFF	; 255
 77c:	9f ef       	ldi	r25, 0xFF	; 255
 77e:	2c 96       	adiw	r28, 0x0c	; 12
 780:	e2 e1       	ldi	r30, 0x12	; 18
 782:	0c 94 01 06 	jmp	0xc02	; 0xc02 <__epilogue_restores__>

00000786 <calloc>:
 786:	0f 93       	push	r16
 788:	1f 93       	push	r17
 78a:	cf 93       	push	r28
 78c:	df 93       	push	r29
 78e:	86 9f       	mul	r24, r22
 790:	80 01       	movw	r16, r0
 792:	87 9f       	mul	r24, r23
 794:	10 0d       	add	r17, r0
 796:	96 9f       	mul	r25, r22
 798:	10 0d       	add	r17, r0
 79a:	11 24       	eor	r1, r1
 79c:	c8 01       	movw	r24, r16
 79e:	0e 94 df 03 	call	0x7be	; 0x7be <malloc>
 7a2:	ec 01       	movw	r28, r24
 7a4:	00 97       	sbiw	r24, 0x00	; 0
 7a6:	29 f0       	breq	.+10     	; 0x7b2 <calloc+0x2c>
 7a8:	a8 01       	movw	r20, r16
 7aa:	60 e0       	ldi	r22, 0x00	; 0
 7ac:	70 e0       	ldi	r23, 0x00	; 0
 7ae:	0e 94 11 05 	call	0xa22	; 0xa22 <memset>
 7b2:	ce 01       	movw	r24, r28
 7b4:	df 91       	pop	r29
 7b6:	cf 91       	pop	r28
 7b8:	1f 91       	pop	r17
 7ba:	0f 91       	pop	r16
 7bc:	08 95       	ret

000007be <malloc>:
 7be:	cf 93       	push	r28
 7c0:	df 93       	push	r29
 7c2:	82 30       	cpi	r24, 0x02	; 2
 7c4:	91 05       	cpc	r25, r1
 7c6:	10 f4       	brcc	.+4      	; 0x7cc <malloc+0xe>
 7c8:	82 e0       	ldi	r24, 0x02	; 2
 7ca:	90 e0       	ldi	r25, 0x00	; 0
 7cc:	e0 91 fa 01 	lds	r30, 0x01FA
 7d0:	f0 91 fb 01 	lds	r31, 0x01FB
 7d4:	20 e0       	ldi	r18, 0x00	; 0
 7d6:	30 e0       	ldi	r19, 0x00	; 0
 7d8:	a0 e0       	ldi	r26, 0x00	; 0
 7da:	b0 e0       	ldi	r27, 0x00	; 0
 7dc:	30 97       	sbiw	r30, 0x00	; 0
 7de:	39 f1       	breq	.+78     	; 0x82e <malloc+0x70>
 7e0:	40 81       	ld	r20, Z
 7e2:	51 81       	ldd	r21, Z+1	; 0x01
 7e4:	48 17       	cp	r20, r24
 7e6:	59 07       	cpc	r21, r25
 7e8:	b8 f0       	brcs	.+46     	; 0x818 <malloc+0x5a>
 7ea:	48 17       	cp	r20, r24
 7ec:	59 07       	cpc	r21, r25
 7ee:	71 f4       	brne	.+28     	; 0x80c <malloc+0x4e>
 7f0:	82 81       	ldd	r24, Z+2	; 0x02
 7f2:	93 81       	ldd	r25, Z+3	; 0x03
 7f4:	10 97       	sbiw	r26, 0x00	; 0
 7f6:	29 f0       	breq	.+10     	; 0x802 <malloc+0x44>
 7f8:	13 96       	adiw	r26, 0x03	; 3
 7fa:	9c 93       	st	X, r25
 7fc:	8e 93       	st	-X, r24
 7fe:	12 97       	sbiw	r26, 0x02	; 2
 800:	2c c0       	rjmp	.+88     	; 0x85a <malloc+0x9c>
 802:	90 93 fb 01 	sts	0x01FB, r25
 806:	80 93 fa 01 	sts	0x01FA, r24
 80a:	27 c0       	rjmp	.+78     	; 0x85a <malloc+0x9c>
 80c:	21 15       	cp	r18, r1
 80e:	31 05       	cpc	r19, r1
 810:	31 f0       	breq	.+12     	; 0x81e <malloc+0x60>
 812:	42 17       	cp	r20, r18
 814:	53 07       	cpc	r21, r19
 816:	18 f0       	brcs	.+6      	; 0x81e <malloc+0x60>
 818:	a9 01       	movw	r20, r18
 81a:	db 01       	movw	r26, r22
 81c:	01 c0       	rjmp	.+2      	; 0x820 <malloc+0x62>
 81e:	ef 01       	movw	r28, r30
 820:	9a 01       	movw	r18, r20
 822:	bd 01       	movw	r22, r26
 824:	df 01       	movw	r26, r30
 826:	02 80       	ldd	r0, Z+2	; 0x02
 828:	f3 81       	ldd	r31, Z+3	; 0x03
 82a:	e0 2d       	mov	r30, r0
 82c:	d7 cf       	rjmp	.-82     	; 0x7dc <malloc+0x1e>
 82e:	21 15       	cp	r18, r1
 830:	31 05       	cpc	r19, r1
 832:	f9 f0       	breq	.+62     	; 0x872 <malloc+0xb4>
 834:	28 1b       	sub	r18, r24
 836:	39 0b       	sbc	r19, r25
 838:	24 30       	cpi	r18, 0x04	; 4
 83a:	31 05       	cpc	r19, r1
 83c:	80 f4       	brcc	.+32     	; 0x85e <malloc+0xa0>
 83e:	8a 81       	ldd	r24, Y+2	; 0x02
 840:	9b 81       	ldd	r25, Y+3	; 0x03
 842:	61 15       	cp	r22, r1
 844:	71 05       	cpc	r23, r1
 846:	21 f0       	breq	.+8      	; 0x850 <malloc+0x92>
 848:	fb 01       	movw	r30, r22
 84a:	93 83       	std	Z+3, r25	; 0x03
 84c:	82 83       	std	Z+2, r24	; 0x02
 84e:	04 c0       	rjmp	.+8      	; 0x858 <malloc+0x9a>
 850:	90 93 fb 01 	sts	0x01FB, r25
 854:	80 93 fa 01 	sts	0x01FA, r24
 858:	fe 01       	movw	r30, r28
 85a:	32 96       	adiw	r30, 0x02	; 2
 85c:	44 c0       	rjmp	.+136    	; 0x8e6 <malloc+0x128>
 85e:	fe 01       	movw	r30, r28
 860:	e2 0f       	add	r30, r18
 862:	f3 1f       	adc	r31, r19
 864:	81 93       	st	Z+, r24
 866:	91 93       	st	Z+, r25
 868:	22 50       	subi	r18, 0x02	; 2
 86a:	31 09       	sbc	r19, r1
 86c:	39 83       	std	Y+1, r19	; 0x01
 86e:	28 83       	st	Y, r18
 870:	3a c0       	rjmp	.+116    	; 0x8e6 <malloc+0x128>
 872:	20 91 f8 01 	lds	r18, 0x01F8
 876:	30 91 f9 01 	lds	r19, 0x01F9
 87a:	23 2b       	or	r18, r19
 87c:	41 f4       	brne	.+16     	; 0x88e <malloc+0xd0>
 87e:	20 91 06 01 	lds	r18, 0x0106
 882:	30 91 07 01 	lds	r19, 0x0107
 886:	30 93 f9 01 	sts	0x01F9, r19
 88a:	20 93 f8 01 	sts	0x01F8, r18
 88e:	20 91 04 01 	lds	r18, 0x0104
 892:	30 91 05 01 	lds	r19, 0x0105
 896:	21 15       	cp	r18, r1
 898:	31 05       	cpc	r19, r1
 89a:	41 f4       	brne	.+16     	; 0x8ac <malloc+0xee>
 89c:	2d b7       	in	r18, 0x3d	; 61
 89e:	3e b7       	in	r19, 0x3e	; 62
 8a0:	40 91 08 01 	lds	r20, 0x0108
 8a4:	50 91 09 01 	lds	r21, 0x0109
 8a8:	24 1b       	sub	r18, r20
 8aa:	35 0b       	sbc	r19, r21
 8ac:	e0 91 f8 01 	lds	r30, 0x01F8
 8b0:	f0 91 f9 01 	lds	r31, 0x01F9
 8b4:	e2 17       	cp	r30, r18
 8b6:	f3 07       	cpc	r31, r19
 8b8:	a0 f4       	brcc	.+40     	; 0x8e2 <malloc+0x124>
 8ba:	2e 1b       	sub	r18, r30
 8bc:	3f 0b       	sbc	r19, r31
 8be:	28 17       	cp	r18, r24
 8c0:	39 07       	cpc	r19, r25
 8c2:	78 f0       	brcs	.+30     	; 0x8e2 <malloc+0x124>
 8c4:	ac 01       	movw	r20, r24
 8c6:	4e 5f       	subi	r20, 0xFE	; 254
 8c8:	5f 4f       	sbci	r21, 0xFF	; 255
 8ca:	24 17       	cp	r18, r20
 8cc:	35 07       	cpc	r19, r21
 8ce:	48 f0       	brcs	.+18     	; 0x8e2 <malloc+0x124>
 8d0:	4e 0f       	add	r20, r30
 8d2:	5f 1f       	adc	r21, r31
 8d4:	50 93 f9 01 	sts	0x01F9, r21
 8d8:	40 93 f8 01 	sts	0x01F8, r20
 8dc:	81 93       	st	Z+, r24
 8de:	91 93       	st	Z+, r25
 8e0:	02 c0       	rjmp	.+4      	; 0x8e6 <malloc+0x128>
 8e2:	e0 e0       	ldi	r30, 0x00	; 0
 8e4:	f0 e0       	ldi	r31, 0x00	; 0
 8e6:	cf 01       	movw	r24, r30
 8e8:	df 91       	pop	r29
 8ea:	cf 91       	pop	r28
 8ec:	08 95       	ret

000008ee <free>:
 8ee:	cf 93       	push	r28
 8f0:	df 93       	push	r29
 8f2:	00 97       	sbiw	r24, 0x00	; 0
 8f4:	09 f4       	brne	.+2      	; 0x8f8 <free+0xa>
 8f6:	87 c0       	rjmp	.+270    	; 0xa06 <free+0x118>
 8f8:	fc 01       	movw	r30, r24
 8fa:	32 97       	sbiw	r30, 0x02	; 2
 8fc:	13 82       	std	Z+3, r1	; 0x03
 8fe:	12 82       	std	Z+2, r1	; 0x02
 900:	c0 91 fa 01 	lds	r28, 0x01FA
 904:	d0 91 fb 01 	lds	r29, 0x01FB
 908:	20 97       	sbiw	r28, 0x00	; 0
 90a:	81 f4       	brne	.+32     	; 0x92c <free+0x3e>
 90c:	20 81       	ld	r18, Z
 90e:	31 81       	ldd	r19, Z+1	; 0x01
 910:	28 0f       	add	r18, r24
 912:	39 1f       	adc	r19, r25
 914:	80 91 f8 01 	lds	r24, 0x01F8
 918:	90 91 f9 01 	lds	r25, 0x01F9
 91c:	82 17       	cp	r24, r18
 91e:	93 07       	cpc	r25, r19
 920:	79 f5       	brne	.+94     	; 0x980 <free+0x92>
 922:	f0 93 f9 01 	sts	0x01F9, r31
 926:	e0 93 f8 01 	sts	0x01F8, r30
 92a:	6d c0       	rjmp	.+218    	; 0xa06 <free+0x118>
 92c:	de 01       	movw	r26, r28
 92e:	20 e0       	ldi	r18, 0x00	; 0
 930:	30 e0       	ldi	r19, 0x00	; 0
 932:	ae 17       	cp	r26, r30
 934:	bf 07       	cpc	r27, r31
 936:	50 f4       	brcc	.+20     	; 0x94c <free+0x5e>
 938:	12 96       	adiw	r26, 0x02	; 2
 93a:	4d 91       	ld	r20, X+
 93c:	5c 91       	ld	r21, X
 93e:	13 97       	sbiw	r26, 0x03	; 3
 940:	9d 01       	movw	r18, r26
 942:	41 15       	cp	r20, r1
 944:	51 05       	cpc	r21, r1
 946:	09 f1       	breq	.+66     	; 0x98a <free+0x9c>
 948:	da 01       	movw	r26, r20
 94a:	f3 cf       	rjmp	.-26     	; 0x932 <free+0x44>
 94c:	b3 83       	std	Z+3, r27	; 0x03
 94e:	a2 83       	std	Z+2, r26	; 0x02
 950:	40 81       	ld	r20, Z
 952:	51 81       	ldd	r21, Z+1	; 0x01
 954:	84 0f       	add	r24, r20
 956:	95 1f       	adc	r25, r21
 958:	8a 17       	cp	r24, r26
 95a:	9b 07       	cpc	r25, r27
 95c:	71 f4       	brne	.+28     	; 0x97a <free+0x8c>
 95e:	8d 91       	ld	r24, X+
 960:	9c 91       	ld	r25, X
 962:	11 97       	sbiw	r26, 0x01	; 1
 964:	84 0f       	add	r24, r20
 966:	95 1f       	adc	r25, r21
 968:	02 96       	adiw	r24, 0x02	; 2
 96a:	91 83       	std	Z+1, r25	; 0x01
 96c:	80 83       	st	Z, r24
 96e:	12 96       	adiw	r26, 0x02	; 2
 970:	8d 91       	ld	r24, X+
 972:	9c 91       	ld	r25, X
 974:	13 97       	sbiw	r26, 0x03	; 3
 976:	93 83       	std	Z+3, r25	; 0x03
 978:	82 83       	std	Z+2, r24	; 0x02
 97a:	21 15       	cp	r18, r1
 97c:	31 05       	cpc	r19, r1
 97e:	29 f4       	brne	.+10     	; 0x98a <free+0x9c>
 980:	f0 93 fb 01 	sts	0x01FB, r31
 984:	e0 93 fa 01 	sts	0x01FA, r30
 988:	3e c0       	rjmp	.+124    	; 0xa06 <free+0x118>
 98a:	d9 01       	movw	r26, r18
 98c:	13 96       	adiw	r26, 0x03	; 3
 98e:	fc 93       	st	X, r31
 990:	ee 93       	st	-X, r30
 992:	12 97       	sbiw	r26, 0x02	; 2
 994:	4d 91       	ld	r20, X+
 996:	5d 91       	ld	r21, X+
 998:	a4 0f       	add	r26, r20
 99a:	b5 1f       	adc	r27, r21
 99c:	ea 17       	cp	r30, r26
 99e:	fb 07       	cpc	r31, r27
 9a0:	79 f4       	brne	.+30     	; 0x9c0 <free+0xd2>
 9a2:	80 81       	ld	r24, Z
 9a4:	91 81       	ldd	r25, Z+1	; 0x01
 9a6:	84 0f       	add	r24, r20
 9a8:	95 1f       	adc	r25, r21
 9aa:	02 96       	adiw	r24, 0x02	; 2
 9ac:	d9 01       	movw	r26, r18
 9ae:	11 96       	adiw	r26, 0x01	; 1
 9b0:	9c 93       	st	X, r25
 9b2:	8e 93       	st	-X, r24
 9b4:	82 81       	ldd	r24, Z+2	; 0x02
 9b6:	93 81       	ldd	r25, Z+3	; 0x03
 9b8:	13 96       	adiw	r26, 0x03	; 3
 9ba:	9c 93       	st	X, r25
 9bc:	8e 93       	st	-X, r24
 9be:	12 97       	sbiw	r26, 0x02	; 2
 9c0:	e0 e0       	ldi	r30, 0x00	; 0
 9c2:	f0 e0       	ldi	r31, 0x00	; 0
 9c4:	8a 81       	ldd	r24, Y+2	; 0x02
 9c6:	9b 81       	ldd	r25, Y+3	; 0x03
 9c8:	00 97       	sbiw	r24, 0x00	; 0
 9ca:	19 f0       	breq	.+6      	; 0x9d2 <free+0xe4>
 9cc:	fe 01       	movw	r30, r28
 9ce:	ec 01       	movw	r28, r24
 9d0:	f9 cf       	rjmp	.-14     	; 0x9c4 <free+0xd6>
 9d2:	ce 01       	movw	r24, r28
 9d4:	02 96       	adiw	r24, 0x02	; 2
 9d6:	28 81       	ld	r18, Y
 9d8:	39 81       	ldd	r19, Y+1	; 0x01
 9da:	82 0f       	add	r24, r18
 9dc:	93 1f       	adc	r25, r19
 9de:	20 91 f8 01 	lds	r18, 0x01F8
 9e2:	30 91 f9 01 	lds	r19, 0x01F9
 9e6:	28 17       	cp	r18, r24
 9e8:	39 07       	cpc	r19, r25
 9ea:	69 f4       	brne	.+26     	; 0xa06 <free+0x118>
 9ec:	30 97       	sbiw	r30, 0x00	; 0
 9ee:	29 f4       	brne	.+10     	; 0x9fa <free+0x10c>
 9f0:	10 92 fb 01 	sts	0x01FB, r1
 9f4:	10 92 fa 01 	sts	0x01FA, r1
 9f8:	02 c0       	rjmp	.+4      	; 0x9fe <free+0x110>
 9fa:	13 82       	std	Z+3, r1	; 0x03
 9fc:	12 82       	std	Z+2, r1	; 0x02
 9fe:	d0 93 f9 01 	sts	0x01F9, r29
 a02:	c0 93 f8 01 	sts	0x01F8, r28
 a06:	df 91       	pop	r29
 a08:	cf 91       	pop	r28
 a0a:	08 95       	ret

00000a0c <strnlen_P>:
 a0c:	fc 01       	movw	r30, r24
 a0e:	05 90       	lpm	r0, Z+
 a10:	61 50       	subi	r22, 0x01	; 1
 a12:	70 40       	sbci	r23, 0x00	; 0
 a14:	01 10       	cpse	r0, r1
 a16:	d8 f7       	brcc	.-10     	; 0xa0e <strnlen_P+0x2>
 a18:	80 95       	com	r24
 a1a:	90 95       	com	r25
 a1c:	8e 0f       	add	r24, r30
 a1e:	9f 1f       	adc	r25, r31
 a20:	08 95       	ret

00000a22 <memset>:
 a22:	dc 01       	movw	r26, r24
 a24:	01 c0       	rjmp	.+2      	; 0xa28 <memset+0x6>
 a26:	6d 93       	st	X+, r22
 a28:	41 50       	subi	r20, 0x01	; 1
 a2a:	50 40       	sbci	r21, 0x00	; 0
 a2c:	e0 f7       	brcc	.-8      	; 0xa26 <memset+0x4>
 a2e:	08 95       	ret

00000a30 <strnlen>:
 a30:	fc 01       	movw	r30, r24
 a32:	61 50       	subi	r22, 0x01	; 1
 a34:	70 40       	sbci	r23, 0x00	; 0
 a36:	01 90       	ld	r0, Z+
 a38:	01 10       	cpse	r0, r1
 a3a:	d8 f7       	brcc	.-10     	; 0xa32 <strnlen+0x2>
 a3c:	80 95       	com	r24
 a3e:	90 95       	com	r25
 a40:	8e 0f       	add	r24, r30
 a42:	9f 1f       	adc	r25, r31
 a44:	08 95       	ret

00000a46 <fputc>:
 a46:	0f 93       	push	r16
 a48:	1f 93       	push	r17
 a4a:	cf 93       	push	r28
 a4c:	df 93       	push	r29
 a4e:	18 2f       	mov	r17, r24
 a50:	09 2f       	mov	r16, r25
 a52:	eb 01       	movw	r28, r22
 a54:	8b 81       	ldd	r24, Y+3	; 0x03
 a56:	81 fd       	sbrc	r24, 1
 a58:	03 c0       	rjmp	.+6      	; 0xa60 <fputc+0x1a>
 a5a:	8f ef       	ldi	r24, 0xFF	; 255
 a5c:	9f ef       	ldi	r25, 0xFF	; 255
 a5e:	20 c0       	rjmp	.+64     	; 0xaa0 <fputc+0x5a>
 a60:	82 ff       	sbrs	r24, 2
 a62:	10 c0       	rjmp	.+32     	; 0xa84 <fputc+0x3e>
 a64:	4e 81       	ldd	r20, Y+6	; 0x06
 a66:	5f 81       	ldd	r21, Y+7	; 0x07
 a68:	2c 81       	ldd	r18, Y+4	; 0x04
 a6a:	3d 81       	ldd	r19, Y+5	; 0x05
 a6c:	42 17       	cp	r20, r18
 a6e:	53 07       	cpc	r21, r19
 a70:	7c f4       	brge	.+30     	; 0xa90 <fputc+0x4a>
 a72:	e8 81       	ld	r30, Y
 a74:	f9 81       	ldd	r31, Y+1	; 0x01
 a76:	9f 01       	movw	r18, r30
 a78:	2f 5f       	subi	r18, 0xFF	; 255
 a7a:	3f 4f       	sbci	r19, 0xFF	; 255
 a7c:	39 83       	std	Y+1, r19	; 0x01
 a7e:	28 83       	st	Y, r18
 a80:	10 83       	st	Z, r17
 a82:	06 c0       	rjmp	.+12     	; 0xa90 <fputc+0x4a>
 a84:	e8 85       	ldd	r30, Y+8	; 0x08
 a86:	f9 85       	ldd	r31, Y+9	; 0x09
 a88:	81 2f       	mov	r24, r17
 a8a:	09 95       	icall
 a8c:	89 2b       	or	r24, r25
 a8e:	29 f7       	brne	.-54     	; 0xa5a <fputc+0x14>
 a90:	2e 81       	ldd	r18, Y+6	; 0x06
 a92:	3f 81       	ldd	r19, Y+7	; 0x07
 a94:	2f 5f       	subi	r18, 0xFF	; 255
 a96:	3f 4f       	sbci	r19, 0xFF	; 255
 a98:	3f 83       	std	Y+7, r19	; 0x07
 a9a:	2e 83       	std	Y+6, r18	; 0x06
 a9c:	81 2f       	mov	r24, r17
 a9e:	90 2f       	mov	r25, r16
 aa0:	df 91       	pop	r29
 aa2:	cf 91       	pop	r28
 aa4:	1f 91       	pop	r17
 aa6:	0f 91       	pop	r16
 aa8:	08 95       	ret

00000aaa <__ultoa_invert>:
 aaa:	fa 01       	movw	r30, r20
 aac:	aa 27       	eor	r26, r26
 aae:	28 30       	cpi	r18, 0x08	; 8
 ab0:	51 f1       	breq	.+84     	; 0xb06 <__ultoa_invert+0x5c>
 ab2:	20 31       	cpi	r18, 0x10	; 16
 ab4:	81 f1       	breq	.+96     	; 0xb16 <__ultoa_invert+0x6c>
 ab6:	e8 94       	clt
 ab8:	6f 93       	push	r22
 aba:	6e 7f       	andi	r22, 0xFE	; 254
 abc:	6e 5f       	subi	r22, 0xFE	; 254
 abe:	7f 4f       	sbci	r23, 0xFF	; 255
 ac0:	8f 4f       	sbci	r24, 0xFF	; 255
 ac2:	9f 4f       	sbci	r25, 0xFF	; 255
 ac4:	af 4f       	sbci	r26, 0xFF	; 255
 ac6:	b1 e0       	ldi	r27, 0x01	; 1
 ac8:	3e d0       	rcall	.+124    	; 0xb46 <__ultoa_invert+0x9c>
 aca:	b4 e0       	ldi	r27, 0x04	; 4
 acc:	3c d0       	rcall	.+120    	; 0xb46 <__ultoa_invert+0x9c>
 ace:	67 0f       	add	r22, r23
 ad0:	78 1f       	adc	r23, r24
 ad2:	89 1f       	adc	r24, r25
 ad4:	9a 1f       	adc	r25, r26
 ad6:	a1 1d       	adc	r26, r1
 ad8:	68 0f       	add	r22, r24
 ada:	79 1f       	adc	r23, r25
 adc:	8a 1f       	adc	r24, r26
 ade:	91 1d       	adc	r25, r1
 ae0:	a1 1d       	adc	r26, r1
 ae2:	6a 0f       	add	r22, r26
 ae4:	71 1d       	adc	r23, r1
 ae6:	81 1d       	adc	r24, r1
 ae8:	91 1d       	adc	r25, r1
 aea:	a1 1d       	adc	r26, r1
 aec:	20 d0       	rcall	.+64     	; 0xb2e <__ultoa_invert+0x84>
 aee:	09 f4       	brne	.+2      	; 0xaf2 <__ultoa_invert+0x48>
 af0:	68 94       	set
 af2:	3f 91       	pop	r19
 af4:	2a e0       	ldi	r18, 0x0A	; 10
 af6:	26 9f       	mul	r18, r22
 af8:	11 24       	eor	r1, r1
 afa:	30 19       	sub	r19, r0
 afc:	30 5d       	subi	r19, 0xD0	; 208
 afe:	31 93       	st	Z+, r19
 b00:	de f6       	brtc	.-74     	; 0xab8 <__ultoa_invert+0xe>
 b02:	cf 01       	movw	r24, r30
 b04:	08 95       	ret
 b06:	46 2f       	mov	r20, r22
 b08:	47 70       	andi	r20, 0x07	; 7
 b0a:	40 5d       	subi	r20, 0xD0	; 208
 b0c:	41 93       	st	Z+, r20
 b0e:	b3 e0       	ldi	r27, 0x03	; 3
 b10:	0f d0       	rcall	.+30     	; 0xb30 <__ultoa_invert+0x86>
 b12:	c9 f7       	brne	.-14     	; 0xb06 <__ultoa_invert+0x5c>
 b14:	f6 cf       	rjmp	.-20     	; 0xb02 <__ultoa_invert+0x58>
 b16:	46 2f       	mov	r20, r22
 b18:	4f 70       	andi	r20, 0x0F	; 15
 b1a:	40 5d       	subi	r20, 0xD0	; 208
 b1c:	4a 33       	cpi	r20, 0x3A	; 58
 b1e:	18 f0       	brcs	.+6      	; 0xb26 <__ultoa_invert+0x7c>
 b20:	49 5d       	subi	r20, 0xD9	; 217
 b22:	31 fd       	sbrc	r19, 1
 b24:	40 52       	subi	r20, 0x20	; 32
 b26:	41 93       	st	Z+, r20
 b28:	02 d0       	rcall	.+4      	; 0xb2e <__ultoa_invert+0x84>
 b2a:	a9 f7       	brne	.-22     	; 0xb16 <__ultoa_invert+0x6c>
 b2c:	ea cf       	rjmp	.-44     	; 0xb02 <__ultoa_invert+0x58>
 b2e:	b4 e0       	ldi	r27, 0x04	; 4
 b30:	a6 95       	lsr	r26
 b32:	97 95       	ror	r25
 b34:	87 95       	ror	r24
 b36:	77 95       	ror	r23
 b38:	67 95       	ror	r22
 b3a:	ba 95       	dec	r27
 b3c:	c9 f7       	brne	.-14     	; 0xb30 <__ultoa_invert+0x86>
 b3e:	00 97       	sbiw	r24, 0x00	; 0
 b40:	61 05       	cpc	r22, r1
 b42:	71 05       	cpc	r23, r1
 b44:	08 95       	ret
 b46:	9b 01       	movw	r18, r22
 b48:	ac 01       	movw	r20, r24
 b4a:	0a 2e       	mov	r0, r26
 b4c:	06 94       	lsr	r0
 b4e:	57 95       	ror	r21
 b50:	47 95       	ror	r20
 b52:	37 95       	ror	r19
 b54:	27 95       	ror	r18
 b56:	ba 95       	dec	r27
 b58:	c9 f7       	brne	.-14     	; 0xb4c <__ultoa_invert+0xa2>
 b5a:	62 0f       	add	r22, r18
 b5c:	73 1f       	adc	r23, r19
 b5e:	84 1f       	adc	r24, r20
 b60:	95 1f       	adc	r25, r21
 b62:	a0 1d       	adc	r26, r0
 b64:	08 95       	ret

00000b66 <__divmodsi4>:
 b66:	05 2e       	mov	r0, r21
 b68:	97 fb       	bst	r25, 7
 b6a:	1e f4       	brtc	.+6      	; 0xb72 <__divmodsi4+0xc>
 b6c:	00 94       	com	r0
 b6e:	0e 94 ca 05 	call	0xb94	; 0xb94 <__negsi2>
 b72:	57 fd       	sbrc	r21, 7
 b74:	07 d0       	rcall	.+14     	; 0xb84 <__divmodsi4_neg2>
 b76:	0e 94 1c 06 	call	0xc38	; 0xc38 <__udivmodsi4>
 b7a:	07 fc       	sbrc	r0, 7
 b7c:	03 d0       	rcall	.+6      	; 0xb84 <__divmodsi4_neg2>
 b7e:	4e f4       	brtc	.+18     	; 0xb92 <__divmodsi4_exit>
 b80:	0c 94 ca 05 	jmp	0xb94	; 0xb94 <__negsi2>

00000b84 <__divmodsi4_neg2>:
 b84:	50 95       	com	r21
 b86:	40 95       	com	r20
 b88:	30 95       	com	r19
 b8a:	21 95       	neg	r18
 b8c:	3f 4f       	sbci	r19, 0xFF	; 255
 b8e:	4f 4f       	sbci	r20, 0xFF	; 255
 b90:	5f 4f       	sbci	r21, 0xFF	; 255

00000b92 <__divmodsi4_exit>:
 b92:	08 95       	ret

00000b94 <__negsi2>:
 b94:	90 95       	com	r25
 b96:	80 95       	com	r24
 b98:	70 95       	com	r23
 b9a:	61 95       	neg	r22
 b9c:	7f 4f       	sbci	r23, 0xFF	; 255
 b9e:	8f 4f       	sbci	r24, 0xFF	; 255
 ba0:	9f 4f       	sbci	r25, 0xFF	; 255
 ba2:	08 95       	ret

00000ba4 <__muluhisi3>:
 ba4:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__umulhisi3>
 ba8:	a5 9f       	mul	r26, r21
 baa:	90 0d       	add	r25, r0
 bac:	b4 9f       	mul	r27, r20
 bae:	90 0d       	add	r25, r0
 bb0:	a4 9f       	mul	r26, r20
 bb2:	80 0d       	add	r24, r0
 bb4:	91 1d       	adc	r25, r1
 bb6:	11 24       	eor	r1, r1
 bb8:	08 95       	ret

00000bba <__mulshisi3>:
 bba:	b7 ff       	sbrs	r27, 7
 bbc:	0c 94 d2 05 	jmp	0xba4	; 0xba4 <__muluhisi3>

00000bc0 <__mulohisi3>:
 bc0:	0e 94 d2 05 	call	0xba4	; 0xba4 <__muluhisi3>
 bc4:	82 1b       	sub	r24, r18
 bc6:	93 0b       	sbc	r25, r19
 bc8:	08 95       	ret

00000bca <__prologue_saves__>:
 bca:	2f 92       	push	r2
 bcc:	3f 92       	push	r3
 bce:	4f 92       	push	r4
 bd0:	5f 92       	push	r5
 bd2:	6f 92       	push	r6
 bd4:	7f 92       	push	r7
 bd6:	8f 92       	push	r8
 bd8:	9f 92       	push	r9
 bda:	af 92       	push	r10
 bdc:	bf 92       	push	r11
 bde:	cf 92       	push	r12
 be0:	df 92       	push	r13
 be2:	ef 92       	push	r14
 be4:	ff 92       	push	r15
 be6:	0f 93       	push	r16
 be8:	1f 93       	push	r17
 bea:	cf 93       	push	r28
 bec:	df 93       	push	r29
 bee:	cd b7       	in	r28, 0x3d	; 61
 bf0:	de b7       	in	r29, 0x3e	; 62
 bf2:	ca 1b       	sub	r28, r26
 bf4:	db 0b       	sbc	r29, r27
 bf6:	0f b6       	in	r0, 0x3f	; 63
 bf8:	f8 94       	cli
 bfa:	de bf       	out	0x3e, r29	; 62
 bfc:	0f be       	out	0x3f, r0	; 63
 bfe:	cd bf       	out	0x3d, r28	; 61
 c00:	09 94       	ijmp

00000c02 <__epilogue_restores__>:
 c02:	2a 88       	ldd	r2, Y+18	; 0x12
 c04:	39 88       	ldd	r3, Y+17	; 0x11
 c06:	48 88       	ldd	r4, Y+16	; 0x10
 c08:	5f 84       	ldd	r5, Y+15	; 0x0f
 c0a:	6e 84       	ldd	r6, Y+14	; 0x0e
 c0c:	7d 84       	ldd	r7, Y+13	; 0x0d
 c0e:	8c 84       	ldd	r8, Y+12	; 0x0c
 c10:	9b 84       	ldd	r9, Y+11	; 0x0b
 c12:	aa 84       	ldd	r10, Y+10	; 0x0a
 c14:	b9 84       	ldd	r11, Y+9	; 0x09
 c16:	c8 84       	ldd	r12, Y+8	; 0x08
 c18:	df 80       	ldd	r13, Y+7	; 0x07
 c1a:	ee 80       	ldd	r14, Y+6	; 0x06
 c1c:	fd 80       	ldd	r15, Y+5	; 0x05
 c1e:	0c 81       	ldd	r16, Y+4	; 0x04
 c20:	1b 81       	ldd	r17, Y+3	; 0x03
 c22:	aa 81       	ldd	r26, Y+2	; 0x02
 c24:	b9 81       	ldd	r27, Y+1	; 0x01
 c26:	ce 0f       	add	r28, r30
 c28:	d1 1d       	adc	r29, r1
 c2a:	0f b6       	in	r0, 0x3f	; 63
 c2c:	f8 94       	cli
 c2e:	de bf       	out	0x3e, r29	; 62
 c30:	0f be       	out	0x3f, r0	; 63
 c32:	cd bf       	out	0x3d, r28	; 61
 c34:	ed 01       	movw	r28, r26
 c36:	08 95       	ret

00000c38 <__udivmodsi4>:
 c38:	a1 e2       	ldi	r26, 0x21	; 33
 c3a:	1a 2e       	mov	r1, r26
 c3c:	aa 1b       	sub	r26, r26
 c3e:	bb 1b       	sub	r27, r27
 c40:	fd 01       	movw	r30, r26
 c42:	0d c0       	rjmp	.+26     	; 0xc5e <__udivmodsi4_ep>

00000c44 <__udivmodsi4_loop>:
 c44:	aa 1f       	adc	r26, r26
 c46:	bb 1f       	adc	r27, r27
 c48:	ee 1f       	adc	r30, r30
 c4a:	ff 1f       	adc	r31, r31
 c4c:	a2 17       	cp	r26, r18
 c4e:	b3 07       	cpc	r27, r19
 c50:	e4 07       	cpc	r30, r20
 c52:	f5 07       	cpc	r31, r21
 c54:	20 f0       	brcs	.+8      	; 0xc5e <__udivmodsi4_ep>
 c56:	a2 1b       	sub	r26, r18
 c58:	b3 0b       	sbc	r27, r19
 c5a:	e4 0b       	sbc	r30, r20
 c5c:	f5 0b       	sbc	r31, r21

00000c5e <__udivmodsi4_ep>:
 c5e:	66 1f       	adc	r22, r22
 c60:	77 1f       	adc	r23, r23
 c62:	88 1f       	adc	r24, r24
 c64:	99 1f       	adc	r25, r25
 c66:	1a 94       	dec	r1
 c68:	69 f7       	brne	.-38     	; 0xc44 <__udivmodsi4_loop>
 c6a:	60 95       	com	r22
 c6c:	70 95       	com	r23
 c6e:	80 95       	com	r24
 c70:	90 95       	com	r25
 c72:	9b 01       	movw	r18, r22
 c74:	ac 01       	movw	r20, r24
 c76:	bd 01       	movw	r22, r26
 c78:	cf 01       	movw	r24, r30
 c7a:	08 95       	ret

00000c7c <__umulhisi3>:
 c7c:	a2 9f       	mul	r26, r18
 c7e:	b0 01       	movw	r22, r0
 c80:	b3 9f       	mul	r27, r19
 c82:	c0 01       	movw	r24, r0
 c84:	a3 9f       	mul	r26, r19
 c86:	70 0d       	add	r23, r0
 c88:	81 1d       	adc	r24, r1
 c8a:	11 24       	eor	r1, r1
 c8c:	91 1d       	adc	r25, r1
 c8e:	b2 9f       	mul	r27, r18
 c90:	70 0d       	add	r23, r0
 c92:	81 1d       	adc	r24, r1
 c94:	11 24       	eor	r1, r1
 c96:	91 1d       	adc	r25, r1
 c98:	08 95       	ret

00000c9a <_exit>:
 c9a:	f8 94       	cli

00000c9c <__stop_program>:
 c9c:	ff cf       	rjmp	.-2      	; 0xc9c <__stop_program>
