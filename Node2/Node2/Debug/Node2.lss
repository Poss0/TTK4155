
Node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002e  00800200  00000d12  00000da6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d12  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080022e  0080022e  00000dd4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000dd4  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000108  00000000  00000000  00000e30  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000cf3  00000000  00000000  00000f38  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006cd  00000000  00000000  00001c2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000e9d  00000000  00000000  000022f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000228  00000000  00000000  00003198  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00009b66  00000000  00000000  000033c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000054f  00000000  00000000  0000cf26  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b8  00000000  00000000  0000d475  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000042ce  00000000  00000000  0000d52d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e2 e1       	ldi	r30, 0x12	; 18
  fc:	fd e0       	ldi	r31, 0x0D	; 13
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ae 32       	cpi	r26, 0x2E	; 46
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	ae e2       	ldi	r26, 0x2E	; 46
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a8 33       	cpi	r26, 0x38	; 56
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	13 d1       	rcall	.+550    	; 0x346 <main>
 120:	f6 c5       	rjmp	.+3052   	; 0xd0e <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <CAN_init>:
#include "MCP251DEFS.h"
#include "CAN.h"

void CAN_init()
{
	SPI_Init();
 124:	5d d1       	rcall	.+698    	; 0x3e0 <SPI_Init>
	MCP2515_RESET();
 126:	d5 d0       	rcall	.+426    	; 0x2d2 <MCP2515_RESET>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 128:	87 ea       	ldi	r24, 0xA7	; 167
 12a:	91 e6       	ldi	r25, 0x61	; 97
 12c:	01 97       	sbiw	r24, 0x01	; 1
 12e:	f1 f7       	brne	.-4      	; 0x12c <CAN_init+0x8>
 130:	00 c0       	rjmp	.+0      	; 0x132 <CAN_init+0xe>
 132:	00 00       	nop
	_delay_ms(100);
	
	/*loop back mode*/
	MCP2515_BIT_MODIFY(MCP_CANCTRL, MODE_MASK, MODE_LOOPBACK);
 134:	40 e4       	ldi	r20, 0x40	; 64
 136:	60 ee       	ldi	r22, 0xE0	; 224
 138:	8f e0       	ldi	r24, 0x0F	; 15
 13a:	f1 d0       	rcall	.+482    	; 0x31e <MCP2515_BIT_MODIFY>
	
	/*enable interrupts*/
	MCP2515_BIT_MODIFY(MCP_CANINTE, 0b00000001, 0b00000001);
 13c:	41 e0       	ldi	r20, 0x01	; 1
 13e:	61 e0       	ldi	r22, 0x01	; 1
 140:	8b e2       	ldi	r24, 0x2B	; 43
 142:	ed c0       	rjmp	.+474    	; 0x31e <MCP2515_BIT_MODIFY>
 144:	08 95       	ret

00000146 <CAN_send>:
}

void CAN_send(MSG* message)
{	
 146:	ef 92       	push	r14
 148:	ff 92       	push	r15
 14a:	0f 93       	push	r16
 14c:	1f 93       	push	r17
 14e:	cf 93       	push	r28
 150:	df 93       	push	r29
 152:	7c 01       	movw	r14, r24
	/*write ID*/
	int ID_l = (message->ID & 0x07) << 5;
 154:	fc 01       	movw	r30, r24
 156:	40 81       	ld	r20, Z
 158:	51 81       	ldd	r21, Z+1	; 0x01
 15a:	44 0f       	add	r20, r20
 15c:	55 1f       	adc	r21, r21
 15e:	42 95       	swap	r20
 160:	52 95       	swap	r21
 162:	50 7f       	andi	r21, 0xF0	; 240
 164:	54 27       	eor	r21, r20
 166:	40 7f       	andi	r20, 0xF0	; 240
 168:	54 27       	eor	r21, r20
 16a:	55 27       	eor	r21, r21
	MCP2515_BIT_MODIFY(MCP_TXB0SIDL,0xE0,ID_l);
 16c:	60 ee       	ldi	r22, 0xE0	; 224
 16e:	82 e3       	ldi	r24, 0x32	; 50
 170:	d6 d0       	rcall	.+428    	; 0x31e <MCP2515_BIT_MODIFY>
	
	int ID_h = (message->ID & 0xFFF8) >> 3;
 172:	f7 01       	movw	r30, r14
 174:	60 81       	ld	r22, Z
 176:	71 81       	ldd	r23, Z+1	; 0x01
 178:	76 95       	lsr	r23
 17a:	67 95       	ror	r22
 17c:	76 95       	lsr	r23
 17e:	67 95       	ror	r22
 180:	76 95       	lsr	r23
 182:	67 95       	ror	r22
	MCP2515_WRITE(MCP_TXB0SIDH,ID_h);
 184:	81 e3       	ldi	r24, 0x31	; 49
 186:	b7 d0       	rcall	.+366    	; 0x2f6 <MCP2515_WRITE>
	
	/*write data length*/
	int length = message->length;
	MCP2515_BIT_MODIFY(MCP_TXB0DLC,0x0F,length);
 188:	f7 01       	movw	r30, r14
 18a:	42 81       	ldd	r20, Z+2	; 0x02
 18c:	6f e0       	ldi	r22, 0x0F	; 15
 18e:	85 e3       	ldi	r24, 0x35	; 53
 190:	c6 d0       	rcall	.+396    	; 0x31e <MCP2515_BIT_MODIFY>
	
	/*write the message in the chosen buffer*/
	for (int i=0; i<message->length; i++)
 192:	f7 01       	movw	r30, r14
 194:	82 81       	ldd	r24, Z+2	; 0x02
 196:	93 81       	ldd	r25, Z+3	; 0x03
 198:	18 16       	cp	r1, r24
 19a:	19 06       	cpc	r1, r25
 19c:	94 f4       	brge	.+36     	; 0x1c2 <CAN_send+0x7c>
 19e:	87 01       	movw	r16, r14
 1a0:	0c 5f       	subi	r16, 0xFC	; 252
 1a2:	1f 4f       	sbci	r17, 0xFF	; 255
 1a4:	c0 e0       	ldi	r28, 0x00	; 0
 1a6:	d0 e0       	ldi	r29, 0x00	; 0
	{
		MCP2515_WRITE(MCP_TXB0D0+i,message->data[i]);
 1a8:	f8 01       	movw	r30, r16
 1aa:	61 91       	ld	r22, Z+
 1ac:	8f 01       	movw	r16, r30
 1ae:	8c 2f       	mov	r24, r28
 1b0:	8a 5c       	subi	r24, 0xCA	; 202
 1b2:	a1 d0       	rcall	.+322    	; 0x2f6 <MCP2515_WRITE>
	/*write data length*/
	int length = message->length;
	MCP2515_BIT_MODIFY(MCP_TXB0DLC,0x0F,length);
	
	/*write the message in the chosen buffer*/
	for (int i=0; i<message->length; i++)
 1b4:	21 96       	adiw	r28, 0x01	; 1
 1b6:	f7 01       	movw	r30, r14
 1b8:	22 81       	ldd	r18, Z+2	; 0x02
 1ba:	33 81       	ldd	r19, Z+3	; 0x03
 1bc:	c2 17       	cp	r28, r18
 1be:	d3 07       	cpc	r29, r19
 1c0:	9c f3       	brlt	.-26     	; 0x1a8 <CAN_send+0x62>
	{
		MCP2515_WRITE(MCP_TXB0D0+i,message->data[i]);
	}
	
	MCP2515_REQUEST_TO_SEND();
 1c2:	a8 d0       	rcall	.+336    	; 0x314 <MCP2515_REQUEST_TO_SEND>
}
 1c4:	df 91       	pop	r29
 1c6:	cf 91       	pop	r28
 1c8:	1f 91       	pop	r17
 1ca:	0f 91       	pop	r16
 1cc:	ff 90       	pop	r15
 1ce:	ef 90       	pop	r14
 1d0:	08 95       	ret

000001d2 <CAN_receive>:

MSG CAN_receive()
{
 1d2:	7f 92       	push	r7
 1d4:	8f 92       	push	r8
 1d6:	9f 92       	push	r9
 1d8:	af 92       	push	r10
 1da:	bf 92       	push	r11
 1dc:	cf 92       	push	r12
 1de:	df 92       	push	r13
 1e0:	ef 92       	push	r14
 1e2:	ff 92       	push	r15
 1e4:	0f 93       	push	r16
 1e6:	1f 93       	push	r17
 1e8:	cf 93       	push	r28
 1ea:	df 93       	push	r29
 1ec:	cd b7       	in	r28, 0x3d	; 61
 1ee:	de b7       	in	r29, 0x3e	; 62
 1f0:	2c 97       	sbiw	r28, 0x0c	; 12
 1f2:	0f b6       	in	r0, 0x3f	; 63
 1f4:	f8 94       	cli
 1f6:	de bf       	out	0x3e, r29	; 62
 1f8:	0f be       	out	0x3f, r0	; 63
 1fa:	cd bf       	out	0x3d, r28	; 61
 1fc:	5c 01       	movw	r10, r24
	MSG message;
	
	int ID_l = MCP2515_READ(MCP_RXB0SIDL);
 1fe:	82 e6       	ldi	r24, 0x62	; 98
 200:	6d d0       	rcall	.+218    	; 0x2dc <MCP2515_READ>
 202:	c8 2e       	mov	r12, r24
	int ID_h = MCP2515_READ(MCP_RXB0SIDH);
 204:	81 e6       	ldi	r24, 0x61	; 97
 206:	6a d0       	rcall	.+212    	; 0x2dc <MCP2515_READ>

MSG CAN_receive()
{
	MSG message;
	
	int ID_l = MCP2515_READ(MCP_RXB0SIDL);
 208:	dd 24       	eor	r13, r13
 20a:	c7 fc       	sbrc	r12, 7
 20c:	d0 94       	com	r13
	int ID_h = MCP2515_READ(MCP_RXB0SIDH);
	message.ID = ((ID_h << 3) + ((ID_l >> 5) & 0x7)) & 0xFF;
 20e:	d5 94       	asr	r13
 210:	c7 94       	ror	r12
 212:	d5 94       	asr	r13
 214:	c7 94       	ror	r12
 216:	d5 94       	asr	r13
 218:	c7 94       	ror	r12
 21a:	d5 94       	asr	r13
 21c:	c7 94       	ror	r12
 21e:	d5 94       	asr	r13
 220:	c7 94       	ror	r12
 222:	97 e0       	ldi	r25, 0x07	; 7
 224:	c9 22       	and	r12, r25
 226:	dd 24       	eor	r13, r13
 228:	e8 e0       	ldi	r30, 0x08	; 8
 22a:	8e 02       	muls	r24, r30
 22c:	c0 0c       	add	r12, r0
 22e:	d1 1c       	adc	r13, r1
 230:	11 24       	eor	r1, r1
 232:	dd 24       	eor	r13, r13
	
	printf("%d", message.ID);
 234:	df 92       	push	r13
 236:	cf 92       	push	r12
 238:	86 e0       	ldi	r24, 0x06	; 6
 23a:	92 e0       	ldi	r25, 0x02	; 2
 23c:	9f 93       	push	r25
 23e:	8f 93       	push	r24
 240:	4c d1       	rcall	.+664    	; 0x4da <printf>
		
	int length = MCP2515_READ(MCP_RXB0DLC);
 242:	85 e6       	ldi	r24, 0x65	; 101
 244:	4b d0       	rcall	.+150    	; 0x2dc <MCP2515_READ>
	message.length = length & 0x0F;
 246:	98 2f       	mov	r25, r24
 248:	9f 70       	andi	r25, 0x0F	; 15
 24a:	89 2e       	mov	r8, r25
 24c:	99 24       	eor	r9, r9
 24e:	87 fc       	sbrc	r8, 7
 250:	90 94       	com	r9
	
	for (int i=0; i<length; i++)
 252:	0f 90       	pop	r0
 254:	0f 90       	pop	r0
 256:	0f 90       	pop	r0
 258:	0f 90       	pop	r0
 25a:	18 16       	cp	r1, r24
 25c:	ac f4       	brge	.+42     	; 0x288 <CAN_receive+0xb6>
 25e:	8e 01       	movw	r16, r28
 260:	0b 5f       	subi	r16, 0xFB	; 251
 262:	1f 4f       	sbci	r17, 0xFF	; 255
 264:	78 01       	movw	r14, r16
 266:	e8 0e       	add	r14, r24
 268:	f1 1c       	adc	r15, r1
 26a:	87 fd       	sbrc	r24, 7
 26c:	fa 94       	dec	r15
 26e:	0f 2e       	mov	r0, r31
 270:	f6 e6       	ldi	r31, 0x66	; 102
 272:	7f 2e       	mov	r7, r31
 274:	f0 2d       	mov	r31, r0
	{
		message.data[i] = MCP2515_READ(MCP_RXB0D0+i);
 276:	87 2d       	mov	r24, r7
 278:	31 d0       	rcall	.+98     	; 0x2dc <MCP2515_READ>
 27a:	f8 01       	movw	r30, r16
 27c:	81 93       	st	Z+, r24
 27e:	8f 01       	movw	r16, r30
 280:	73 94       	inc	r7
	printf("%d", message.ID);
		
	int length = MCP2515_READ(MCP_RXB0DLC);
	message.length = length & 0x0F;
	
	for (int i=0; i<length; i++)
 282:	ee 15       	cp	r30, r14
 284:	ff 05       	cpc	r31, r15
 286:	b9 f7       	brne	.-18     	; 0x276 <CAN_receive+0xa4>
	{
		message.data[i] = MCP2515_READ(MCP_RXB0D0+i);
		
	}
	
	MCP2515_BIT_MODIFY(MCP_CANINTF,0b00000001,0b00000000);	
 288:	40 e0       	ldi	r20, 0x00	; 0
 28a:	61 e0       	ldi	r22, 0x01	; 1
 28c:	8c e2       	ldi	r24, 0x2C	; 44
 28e:	47 d0       	rcall	.+142    	; 0x31e <MCP2515_BIT_MODIFY>
		
	return message;
 290:	da 82       	std	Y+2, r13	; 0x02
 292:	c9 82       	std	Y+1, r12	; 0x01
 294:	9c 82       	std	Y+4, r9	; 0x04
 296:	8b 82       	std	Y+3, r8	; 0x03
 298:	8c e0       	ldi	r24, 0x0C	; 12
 29a:	fe 01       	movw	r30, r28
 29c:	31 96       	adiw	r30, 0x01	; 1
 29e:	d5 01       	movw	r26, r10
 2a0:	01 90       	ld	r0, Z+
 2a2:	0d 92       	st	X+, r0
 2a4:	8a 95       	dec	r24
 2a6:	e1 f7       	brne	.-8      	; 0x2a0 <CAN_receive+0xce>
 2a8:	c5 01       	movw	r24, r10
 2aa:	2c 96       	adiw	r28, 0x0c	; 12
 2ac:	0f b6       	in	r0, 0x3f	; 63
 2ae:	f8 94       	cli
 2b0:	de bf       	out	0x3e, r29	; 62
 2b2:	0f be       	out	0x3f, r0	; 63
 2b4:	cd bf       	out	0x3d, r28	; 61
 2b6:	df 91       	pop	r29
 2b8:	cf 91       	pop	r28
 2ba:	1f 91       	pop	r17
 2bc:	0f 91       	pop	r16
 2be:	ff 90       	pop	r15
 2c0:	ef 90       	pop	r14
 2c2:	df 90       	pop	r13
 2c4:	cf 90       	pop	r12
 2c6:	bf 90       	pop	r11
 2c8:	af 90       	pop	r10
 2ca:	9f 90       	pop	r9
 2cc:	8f 90       	pop	r8
 2ce:	7f 90       	pop	r7
 2d0:	08 95       	ret

000002d2 <MCP2515_RESET>:
	SPI_on();
	SPI_write(MCP_READ_STATUS);
	char data = SPI_read();
	SPI_off();
	return data;
}
 2d2:	99 d0       	rcall	.+306    	; 0x406 <SPI_on>
 2d4:	80 ec       	ldi	r24, 0xC0	; 192
 2d6:	8c d0       	rcall	.+280    	; 0x3f0 <SPI_write>
 2d8:	99 c0       	rjmp	.+306    	; 0x40c <SPI_off>
 2da:	08 95       	ret

000002dc <MCP2515_READ>:
 2dc:	cf 93       	push	r28
 2de:	c8 2f       	mov	r28, r24
 2e0:	92 d0       	rcall	.+292    	; 0x406 <SPI_on>
 2e2:	83 e0       	ldi	r24, 0x03	; 3
 2e4:	85 d0       	rcall	.+266    	; 0x3f0 <SPI_write>
 2e6:	8c 2f       	mov	r24, r28
 2e8:	83 d0       	rcall	.+262    	; 0x3f0 <SPI_write>
 2ea:	87 d0       	rcall	.+270    	; 0x3fa <SPI_read>
 2ec:	c8 2f       	mov	r28, r24
 2ee:	8e d0       	rcall	.+284    	; 0x40c <SPI_off>
 2f0:	8c 2f       	mov	r24, r28
 2f2:	cf 91       	pop	r28
 2f4:	08 95       	ret

000002f6 <MCP2515_WRITE>:
 2f6:	cf 93       	push	r28
 2f8:	df 93       	push	r29
 2fa:	d8 2f       	mov	r29, r24
 2fc:	c6 2f       	mov	r28, r22
 2fe:	83 d0       	rcall	.+262    	; 0x406 <SPI_on>
 300:	82 e0       	ldi	r24, 0x02	; 2
 302:	76 d0       	rcall	.+236    	; 0x3f0 <SPI_write>
 304:	8d 2f       	mov	r24, r29
 306:	74 d0       	rcall	.+232    	; 0x3f0 <SPI_write>
 308:	8c 2f       	mov	r24, r28
 30a:	72 d0       	rcall	.+228    	; 0x3f0 <SPI_write>
 30c:	7f d0       	rcall	.+254    	; 0x40c <SPI_off>
 30e:	df 91       	pop	r29
 310:	cf 91       	pop	r28
 312:	08 95       	ret

00000314 <MCP2515_REQUEST_TO_SEND>:
 314:	78 d0       	rcall	.+240    	; 0x406 <SPI_on>
 316:	81 e8       	ldi	r24, 0x81	; 129
 318:	6b d0       	rcall	.+214    	; 0x3f0 <SPI_write>
 31a:	78 c0       	rjmp	.+240    	; 0x40c <SPI_off>
 31c:	08 95       	ret

0000031e <MCP2515_BIT_MODIFY>:

void MCP2515_BIT_MODIFY(uint8_t address, uint8_t mask, uint8_t data)
{
 31e:	1f 93       	push	r17
 320:	cf 93       	push	r28
 322:	df 93       	push	r29
 324:	18 2f       	mov	r17, r24
 326:	d6 2f       	mov	r29, r22
 328:	c4 2f       	mov	r28, r20
	SPI_on();
 32a:	6d d0       	rcall	.+218    	; 0x406 <SPI_on>
	SPI_write(MCP_BITMOD);
 32c:	85 e0       	ldi	r24, 0x05	; 5
 32e:	60 d0       	rcall	.+192    	; 0x3f0 <SPI_write>
	SPI_write(address);
 330:	81 2f       	mov	r24, r17
 332:	5e d0       	rcall	.+188    	; 0x3f0 <SPI_write>
	SPI_write(mask);
 334:	8d 2f       	mov	r24, r29
 336:	5c d0       	rcall	.+184    	; 0x3f0 <SPI_write>
	SPI_write(data);
 338:	8c 2f       	mov	r24, r28
 33a:	5a d0       	rcall	.+180    	; 0x3f0 <SPI_write>
	SPI_off();	
 33c:	67 d0       	rcall	.+206    	; 0x40c <SPI_off>
 33e:	df 91       	pop	r29
 340:	cf 91       	pop	r28
 342:	1f 91       	pop	r17
 344:	08 95       	ret

00000346 <main>:
#define FOSC 16000000
#define BAUD 9600
#define UART_BAUD FOSC/16/BAUD-1

int main(void)
{
 346:	cf 93       	push	r28
 348:	df 93       	push	r29
 34a:	cd b7       	in	r28, 0x3d	; 61
 34c:	de b7       	in	r29, 0x3e	; 62
 34e:	68 97       	sbiw	r28, 0x18	; 24
 350:	0f b6       	in	r0, 0x3f	; 63
 352:	f8 94       	cli
 354:	de bf       	out	0x3e, r29	; 62
 356:	0f be       	out	0x3f, r0	; 63
 358:	cd bf       	out	0x3d, r28	; 61
	/* Initialize UART */
	UART_Init(UART_BAUD);
 35a:	87 e6       	ldi	r24, 0x67	; 103
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	68 d0       	rcall	.+208    	; 0x430 <UART_Init>
	printf("Reset\n");
 360:	89 e0       	ldi	r24, 0x09	; 9
 362:	92 e0       	ldi	r25, 0x02	; 2
 364:	cb d0       	rcall	.+406    	; 0x4fc <puts>
 366:	2f e3       	ldi	r18, 0x3F	; 63
 368:	8d e0       	ldi	r24, 0x0D	; 13
 36a:	93 e0       	ldi	r25, 0x03	; 3
 36c:	21 50       	subi	r18, 0x01	; 1
 36e:	80 40       	sbci	r24, 0x00	; 0
 370:	90 40       	sbci	r25, 0x00	; 0
 372:	e1 f7       	brne	.-8      	; 0x36c <main+0x26>
 374:	00 c0       	rjmp	.+0      	; 0x376 <main+0x30>
 376:	00 00       	nop
	_delay_ms(1000);
	
	/* Initialize CAN */
	CAN_init();
 378:	d5 de       	rcall	.-598    	; 0x124 <CAN_init>
	
	/* Send and receive a CAN message */
	MSG test_message;
	test_message.ID = 173;
 37a:	8d ea       	ldi	r24, 0xAD	; 173
 37c:	90 e0       	ldi	r25, 0x00	; 0
 37e:	9a 83       	std	Y+2, r25	; 0x02
 380:	89 83       	std	Y+1, r24	; 0x01
	test_message.length = 1;
 382:	81 e0       	ldi	r24, 0x01	; 1
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	9c 83       	std	Y+4, r25	; 0x04
 388:	8b 83       	std	Y+3, r24	; 0x03
	test_message.data[0] = 153;
 38a:	89 e9       	ldi	r24, 0x99	; 153
 38c:	8d 83       	std	Y+5, r24	; 0x05
	CAN_send(&test_message);
 38e:	ce 01       	movw	r24, r28
 390:	01 96       	adiw	r24, 0x01	; 1
 392:	d9 de       	rcall	.-590    	; 0x146 <CAN_send>
 394:	2f e3       	ldi	r18, 0x3F	; 63
 396:	8d e0       	ldi	r24, 0x0D	; 13
 398:	93 e0       	ldi	r25, 0x03	; 3
 39a:	21 50       	subi	r18, 0x01	; 1
 39c:	80 40       	sbci	r24, 0x00	; 0
 39e:	90 40       	sbci	r25, 0x00	; 0
 3a0:	e1 f7       	brne	.-8      	; 0x39a <main+0x54>
 3a2:	00 c0       	rjmp	.+0      	; 0x3a4 <main+0x5e>
 3a4:	00 00       	nop
	_delay_ms(1000);
	MSG received_test = CAN_receive();
 3a6:	ce 01       	movw	r24, r28
 3a8:	0d 96       	adiw	r24, 0x0d	; 13
 3aa:	13 df       	rcall	.-474    	; 0x1d2 <CAN_receive>
	printf("ID: %d, length: %d, data: %d\n", received_test.ID, received_test.length, received_test.data[0]);
 3ac:	29 89       	ldd	r18, Y+17	; 0x11
 3ae:	82 2f       	mov	r24, r18
 3b0:	99 27       	eor	r25, r25
 3b2:	87 fd       	sbrc	r24, 7
 3b4:	90 95       	com	r25
 3b6:	9f 93       	push	r25
 3b8:	2f 93       	push	r18
 3ba:	88 89       	ldd	r24, Y+16	; 0x10
 3bc:	8f 93       	push	r24
 3be:	8f 85       	ldd	r24, Y+15	; 0x0f
 3c0:	8f 93       	push	r24
 3c2:	8e 85       	ldd	r24, Y+14	; 0x0e
 3c4:	8f 93       	push	r24
 3c6:	8d 85       	ldd	r24, Y+13	; 0x0d
 3c8:	8f 93       	push	r24
 3ca:	8f e0       	ldi	r24, 0x0F	; 15
 3cc:	92 e0       	ldi	r25, 0x02	; 2
 3ce:	9f 93       	push	r25
 3d0:	8f 93       	push	r24
 3d2:	83 d0       	rcall	.+262    	; 0x4da <printf>
 3d4:	0f b6       	in	r0, 0x3f	; 63
 3d6:	f8 94       	cli
 3d8:	de bf       	out	0x3e, r29	; 62
 3da:	0f be       	out	0x3f, r0	; 63
 3dc:	cd bf       	out	0x3d, r28	; 61
 3de:	ff cf       	rjmp	.-2      	; 0x3de <main+0x98>

000003e0 <SPI_Init>:
#include <avr/io.h>

void SPI_Init(void)
{
	/* Set CS, MOSI and SCK output, MISO input */
	DDRB |= (1<<PB0)| (1<<PB1)|(1<<PB2);
 3e0:	84 b1       	in	r24, 0x04	; 4
 3e2:	87 60       	ori	r24, 0x07	; 7
 3e4:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1<<PB3);
 3e6:	23 98       	cbi	0x04, 3	; 4
	PORTB |= 1;
 3e8:	28 9a       	sbi	0x05, 0	; 5
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
 3ea:	81 e5       	ldi	r24, 0x51	; 81
 3ec:	8c bd       	out	0x2c, r24	; 44
 3ee:	08 95       	ret

000003f0 <SPI_write>:
}

void SPI_write(char cData)
{
	/* Start transmission */
	SPDR = cData;
 3f0:	8e bd       	out	0x2e, r24	; 46
	/* Wait for transmission complete */
	while (!(SPSR & (1<<SPIF)))
 3f2:	0d b4       	in	r0, 0x2d	; 45
 3f4:	07 fe       	sbrs	r0, 7
 3f6:	fd cf       	rjmp	.-6      	; 0x3f2 <SPI_write+0x2>
		;
}
 3f8:	08 95       	ret

000003fa <SPI_read>:

char SPI_read(void)
{
	/* Start transmission */
	SPDR = 0x00;
 3fa:	1e bc       	out	0x2e, r1	; 46
	/* Wait for transmission complete */
	while (!(SPSR & (1<<SPIF)))
 3fc:	0d b4       	in	r0, 0x2d	; 45
 3fe:	07 fe       	sbrs	r0, 7
 400:	fd cf       	rjmp	.-6      	; 0x3fc <SPI_read+0x2>
		;
	return SPDR;
 402:	8e b5       	in	r24, 0x2e	; 46
}
 404:	08 95       	ret

00000406 <SPI_on>:

void SPI_on(void)
{
	PORTB &= 0;
 406:	85 b1       	in	r24, 0x05	; 5
 408:	15 b8       	out	0x05, r1	; 5
 40a:	08 95       	ret

0000040c <SPI_off>:
}

void SPI_off(void)
{
	PORTB |= 1;
 40c:	28 9a       	sbi	0x05, 0	; 5
 40e:	08 95       	ret

00000410 <UART_Transmit>:
#include <stdio.h>
#include <avr/io.h>

void UART_Transmit(unsigned char data){
	/* Wait for empty transmit buffer */
	while(!(UCSR0A&(1<<UDRE0)))
 410:	e0 ec       	ldi	r30, 0xC0	; 192
 412:	f0 e0       	ldi	r31, 0x00	; 0
 414:	90 81       	ld	r25, Z
 416:	95 ff       	sbrs	r25, 5
 418:	fd cf       	rjmp	.-6      	; 0x414 <UART_Transmit+0x4>
		;
	/* Put data into buffer */
	UDR0 = data;
 41a:	80 93 c6 00 	sts	0x00C6, r24
 41e:	08 95       	ret

00000420 <UART_Receive>:
}

unsigned char UART_Receive(void){
	/* Wait for data to be received */
	while(!(UCSR0A&(1<<RXC0)))
 420:	e0 ec       	ldi	r30, 0xC0	; 192
 422:	f0 e0       	ldi	r31, 0x00	; 0
 424:	80 81       	ld	r24, Z
 426:	88 23       	and	r24, r24
 428:	ec f7       	brge	.-6      	; 0x424 <UART_Receive+0x4>
		;
	/* Get and return received data from buffer */
	return UDR0;
 42a:	80 91 c6 00 	lds	r24, 0x00C6
}
 42e:	08 95       	ret

00000430 <UART_Init>:

void UART_Init(unsigned int ubrr){
	/* Set baud rate */
	UBRR0L = (unsigned char) ubrr;
 430:	80 93 c4 00 	sts	0x00C4, r24
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 434:	88 e1       	ldi	r24, 0x18	; 24
 436:	80 93 c1 00 	sts	0x00C1, r24
	/* Link printf to UART transmissions */	
	fdevopen(UART_Transmit,UART_Receive);
 43a:	60 e1       	ldi	r22, 0x10	; 16
 43c:	72 e0       	ldi	r23, 0x02	; 2
 43e:	88 e0       	ldi	r24, 0x08	; 8
 440:	92 e0       	ldi	r25, 0x02	; 2
 442:	01 c0       	rjmp	.+2      	; 0x446 <fdevopen>
 444:	08 95       	ret

00000446 <fdevopen>:
 446:	0f 93       	push	r16
 448:	1f 93       	push	r17
 44a:	cf 93       	push	r28
 44c:	df 93       	push	r29
 44e:	ec 01       	movw	r28, r24
 450:	8b 01       	movw	r16, r22
 452:	00 97       	sbiw	r24, 0x00	; 0
 454:	31 f4       	brne	.+12     	; 0x462 <fdevopen+0x1c>
 456:	61 15       	cp	r22, r1
 458:	71 05       	cpc	r23, r1
 45a:	19 f4       	brne	.+6      	; 0x462 <fdevopen+0x1c>
 45c:	80 e0       	ldi	r24, 0x00	; 0
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	37 c0       	rjmp	.+110    	; 0x4d0 <fdevopen+0x8a>
 462:	6e e0       	ldi	r22, 0x0E	; 14
 464:	70 e0       	ldi	r23, 0x00	; 0
 466:	81 e0       	ldi	r24, 0x01	; 1
 468:	90 e0       	ldi	r25, 0x00	; 0
 46a:	63 d2       	rcall	.+1222   	; 0x932 <calloc>
 46c:	fc 01       	movw	r30, r24
 46e:	00 97       	sbiw	r24, 0x00	; 0
 470:	a9 f3       	breq	.-22     	; 0x45c <fdevopen+0x16>
 472:	80 e8       	ldi	r24, 0x80	; 128
 474:	83 83       	std	Z+3, r24	; 0x03
 476:	01 15       	cp	r16, r1
 478:	11 05       	cpc	r17, r1
 47a:	71 f0       	breq	.+28     	; 0x498 <fdevopen+0x52>
 47c:	13 87       	std	Z+11, r17	; 0x0b
 47e:	02 87       	std	Z+10, r16	; 0x0a
 480:	81 e8       	ldi	r24, 0x81	; 129
 482:	83 83       	std	Z+3, r24	; 0x03
 484:	80 91 2e 02 	lds	r24, 0x022E
 488:	90 91 2f 02 	lds	r25, 0x022F
 48c:	89 2b       	or	r24, r25
 48e:	21 f4       	brne	.+8      	; 0x498 <fdevopen+0x52>
 490:	f0 93 2f 02 	sts	0x022F, r31
 494:	e0 93 2e 02 	sts	0x022E, r30
 498:	20 97       	sbiw	r28, 0x00	; 0
 49a:	c9 f0       	breq	.+50     	; 0x4ce <fdevopen+0x88>
 49c:	d1 87       	std	Z+9, r29	; 0x09
 49e:	c0 87       	std	Z+8, r28	; 0x08
 4a0:	83 81       	ldd	r24, Z+3	; 0x03
 4a2:	82 60       	ori	r24, 0x02	; 2
 4a4:	83 83       	std	Z+3, r24	; 0x03
 4a6:	80 91 30 02 	lds	r24, 0x0230
 4aa:	90 91 31 02 	lds	r25, 0x0231
 4ae:	89 2b       	or	r24, r25
 4b0:	71 f4       	brne	.+28     	; 0x4ce <fdevopen+0x88>
 4b2:	f0 93 31 02 	sts	0x0231, r31
 4b6:	e0 93 30 02 	sts	0x0230, r30
 4ba:	80 91 32 02 	lds	r24, 0x0232
 4be:	90 91 33 02 	lds	r25, 0x0233
 4c2:	89 2b       	or	r24, r25
 4c4:	21 f4       	brne	.+8      	; 0x4ce <fdevopen+0x88>
 4c6:	f0 93 33 02 	sts	0x0233, r31
 4ca:	e0 93 32 02 	sts	0x0232, r30
 4ce:	cf 01       	movw	r24, r30
 4d0:	df 91       	pop	r29
 4d2:	cf 91       	pop	r28
 4d4:	1f 91       	pop	r17
 4d6:	0f 91       	pop	r16
 4d8:	08 95       	ret

000004da <printf>:
 4da:	cf 93       	push	r28
 4dc:	df 93       	push	r29
 4de:	cd b7       	in	r28, 0x3d	; 61
 4e0:	de b7       	in	r29, 0x3e	; 62
 4e2:	fe 01       	movw	r30, r28
 4e4:	36 96       	adiw	r30, 0x06	; 6
 4e6:	61 91       	ld	r22, Z+
 4e8:	71 91       	ld	r23, Z+
 4ea:	af 01       	movw	r20, r30
 4ec:	80 91 30 02 	lds	r24, 0x0230
 4f0:	90 91 31 02 	lds	r25, 0x0231
 4f4:	30 d0       	rcall	.+96     	; 0x556 <vfprintf>
 4f6:	df 91       	pop	r29
 4f8:	cf 91       	pop	r28
 4fa:	08 95       	ret

000004fc <puts>:
 4fc:	0f 93       	push	r16
 4fe:	1f 93       	push	r17
 500:	cf 93       	push	r28
 502:	df 93       	push	r29
 504:	e0 91 30 02 	lds	r30, 0x0230
 508:	f0 91 31 02 	lds	r31, 0x0231
 50c:	23 81       	ldd	r18, Z+3	; 0x03
 50e:	21 ff       	sbrs	r18, 1
 510:	1b c0       	rjmp	.+54     	; 0x548 <puts+0x4c>
 512:	ec 01       	movw	r28, r24
 514:	00 e0       	ldi	r16, 0x00	; 0
 516:	10 e0       	ldi	r17, 0x00	; 0
 518:	89 91       	ld	r24, Y+
 51a:	60 91 30 02 	lds	r22, 0x0230
 51e:	70 91 31 02 	lds	r23, 0x0231
 522:	db 01       	movw	r26, r22
 524:	18 96       	adiw	r26, 0x08	; 8
 526:	ed 91       	ld	r30, X+
 528:	fc 91       	ld	r31, X
 52a:	19 97       	sbiw	r26, 0x09	; 9
 52c:	88 23       	and	r24, r24
 52e:	31 f0       	breq	.+12     	; 0x53c <puts+0x40>
 530:	19 95       	eicall
 532:	89 2b       	or	r24, r25
 534:	89 f3       	breq	.-30     	; 0x518 <puts+0x1c>
 536:	0f ef       	ldi	r16, 0xFF	; 255
 538:	1f ef       	ldi	r17, 0xFF	; 255
 53a:	ee cf       	rjmp	.-36     	; 0x518 <puts+0x1c>
 53c:	8a e0       	ldi	r24, 0x0A	; 10
 53e:	19 95       	eicall
 540:	89 2b       	or	r24, r25
 542:	11 f4       	brne	.+4      	; 0x548 <puts+0x4c>
 544:	c8 01       	movw	r24, r16
 546:	02 c0       	rjmp	.+4      	; 0x54c <puts+0x50>
 548:	8f ef       	ldi	r24, 0xFF	; 255
 54a:	9f ef       	ldi	r25, 0xFF	; 255
 54c:	df 91       	pop	r29
 54e:	cf 91       	pop	r28
 550:	1f 91       	pop	r17
 552:	0f 91       	pop	r16
 554:	08 95       	ret

00000556 <vfprintf>:
 556:	2f 92       	push	r2
 558:	3f 92       	push	r3
 55a:	4f 92       	push	r4
 55c:	5f 92       	push	r5
 55e:	6f 92       	push	r6
 560:	7f 92       	push	r7
 562:	8f 92       	push	r8
 564:	9f 92       	push	r9
 566:	af 92       	push	r10
 568:	bf 92       	push	r11
 56a:	cf 92       	push	r12
 56c:	df 92       	push	r13
 56e:	ef 92       	push	r14
 570:	ff 92       	push	r15
 572:	0f 93       	push	r16
 574:	1f 93       	push	r17
 576:	cf 93       	push	r28
 578:	df 93       	push	r29
 57a:	cd b7       	in	r28, 0x3d	; 61
 57c:	de b7       	in	r29, 0x3e	; 62
 57e:	2c 97       	sbiw	r28, 0x0c	; 12
 580:	0f b6       	in	r0, 0x3f	; 63
 582:	f8 94       	cli
 584:	de bf       	out	0x3e, r29	; 62
 586:	0f be       	out	0x3f, r0	; 63
 588:	cd bf       	out	0x3d, r28	; 61
 58a:	7c 01       	movw	r14, r24
 58c:	6b 01       	movw	r12, r22
 58e:	8a 01       	movw	r16, r20
 590:	fc 01       	movw	r30, r24
 592:	17 82       	std	Z+7, r1	; 0x07
 594:	16 82       	std	Z+6, r1	; 0x06
 596:	83 81       	ldd	r24, Z+3	; 0x03
 598:	81 ff       	sbrs	r24, 1
 59a:	b0 c1       	rjmp	.+864    	; 0x8fc <vfprintf+0x3a6>
 59c:	ce 01       	movw	r24, r28
 59e:	01 96       	adiw	r24, 0x01	; 1
 5a0:	4c 01       	movw	r8, r24
 5a2:	f7 01       	movw	r30, r14
 5a4:	93 81       	ldd	r25, Z+3	; 0x03
 5a6:	f6 01       	movw	r30, r12
 5a8:	93 fd       	sbrc	r25, 3
 5aa:	85 91       	lpm	r24, Z+
 5ac:	93 ff       	sbrs	r25, 3
 5ae:	81 91       	ld	r24, Z+
 5b0:	6f 01       	movw	r12, r30
 5b2:	88 23       	and	r24, r24
 5b4:	09 f4       	brne	.+2      	; 0x5b8 <vfprintf+0x62>
 5b6:	9e c1       	rjmp	.+828    	; 0x8f4 <vfprintf+0x39e>
 5b8:	85 32       	cpi	r24, 0x25	; 37
 5ba:	39 f4       	brne	.+14     	; 0x5ca <vfprintf+0x74>
 5bc:	93 fd       	sbrc	r25, 3
 5be:	85 91       	lpm	r24, Z+
 5c0:	93 ff       	sbrs	r25, 3
 5c2:	81 91       	ld	r24, Z+
 5c4:	6f 01       	movw	r12, r30
 5c6:	85 32       	cpi	r24, 0x25	; 37
 5c8:	21 f4       	brne	.+8      	; 0x5d2 <vfprintf+0x7c>
 5ca:	b7 01       	movw	r22, r14
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	0f d3       	rcall	.+1566   	; 0xbee <fputc>
 5d0:	e8 cf       	rjmp	.-48     	; 0x5a2 <vfprintf+0x4c>
 5d2:	51 2c       	mov	r5, r1
 5d4:	31 2c       	mov	r3, r1
 5d6:	20 e0       	ldi	r18, 0x00	; 0
 5d8:	20 32       	cpi	r18, 0x20	; 32
 5da:	a0 f4       	brcc	.+40     	; 0x604 <vfprintf+0xae>
 5dc:	8b 32       	cpi	r24, 0x2B	; 43
 5de:	69 f0       	breq	.+26     	; 0x5fa <vfprintf+0xa4>
 5e0:	30 f4       	brcc	.+12     	; 0x5ee <vfprintf+0x98>
 5e2:	80 32       	cpi	r24, 0x20	; 32
 5e4:	59 f0       	breq	.+22     	; 0x5fc <vfprintf+0xa6>
 5e6:	83 32       	cpi	r24, 0x23	; 35
 5e8:	69 f4       	brne	.+26     	; 0x604 <vfprintf+0xae>
 5ea:	20 61       	ori	r18, 0x10	; 16
 5ec:	2c c0       	rjmp	.+88     	; 0x646 <vfprintf+0xf0>
 5ee:	8d 32       	cpi	r24, 0x2D	; 45
 5f0:	39 f0       	breq	.+14     	; 0x600 <vfprintf+0xaa>
 5f2:	80 33       	cpi	r24, 0x30	; 48
 5f4:	39 f4       	brne	.+14     	; 0x604 <vfprintf+0xae>
 5f6:	21 60       	ori	r18, 0x01	; 1
 5f8:	26 c0       	rjmp	.+76     	; 0x646 <vfprintf+0xf0>
 5fa:	22 60       	ori	r18, 0x02	; 2
 5fc:	24 60       	ori	r18, 0x04	; 4
 5fe:	23 c0       	rjmp	.+70     	; 0x646 <vfprintf+0xf0>
 600:	28 60       	ori	r18, 0x08	; 8
 602:	21 c0       	rjmp	.+66     	; 0x646 <vfprintf+0xf0>
 604:	27 fd       	sbrc	r18, 7
 606:	27 c0       	rjmp	.+78     	; 0x656 <vfprintf+0x100>
 608:	30 ed       	ldi	r19, 0xD0	; 208
 60a:	38 0f       	add	r19, r24
 60c:	3a 30       	cpi	r19, 0x0A	; 10
 60e:	78 f4       	brcc	.+30     	; 0x62e <vfprintf+0xd8>
 610:	26 ff       	sbrs	r18, 6
 612:	06 c0       	rjmp	.+12     	; 0x620 <vfprintf+0xca>
 614:	fa e0       	ldi	r31, 0x0A	; 10
 616:	5f 9e       	mul	r5, r31
 618:	30 0d       	add	r19, r0
 61a:	11 24       	eor	r1, r1
 61c:	53 2e       	mov	r5, r19
 61e:	13 c0       	rjmp	.+38     	; 0x646 <vfprintf+0xf0>
 620:	8a e0       	ldi	r24, 0x0A	; 10
 622:	38 9e       	mul	r3, r24
 624:	30 0d       	add	r19, r0
 626:	11 24       	eor	r1, r1
 628:	33 2e       	mov	r3, r19
 62a:	20 62       	ori	r18, 0x20	; 32
 62c:	0c c0       	rjmp	.+24     	; 0x646 <vfprintf+0xf0>
 62e:	8e 32       	cpi	r24, 0x2E	; 46
 630:	21 f4       	brne	.+8      	; 0x63a <vfprintf+0xe4>
 632:	26 fd       	sbrc	r18, 6
 634:	5f c1       	rjmp	.+702    	; 0x8f4 <vfprintf+0x39e>
 636:	20 64       	ori	r18, 0x40	; 64
 638:	06 c0       	rjmp	.+12     	; 0x646 <vfprintf+0xf0>
 63a:	8c 36       	cpi	r24, 0x6C	; 108
 63c:	11 f4       	brne	.+4      	; 0x642 <vfprintf+0xec>
 63e:	20 68       	ori	r18, 0x80	; 128
 640:	02 c0       	rjmp	.+4      	; 0x646 <vfprintf+0xf0>
 642:	88 36       	cpi	r24, 0x68	; 104
 644:	41 f4       	brne	.+16     	; 0x656 <vfprintf+0x100>
 646:	f6 01       	movw	r30, r12
 648:	93 fd       	sbrc	r25, 3
 64a:	85 91       	lpm	r24, Z+
 64c:	93 ff       	sbrs	r25, 3
 64e:	81 91       	ld	r24, Z+
 650:	6f 01       	movw	r12, r30
 652:	81 11       	cpse	r24, r1
 654:	c1 cf       	rjmp	.-126    	; 0x5d8 <vfprintf+0x82>
 656:	98 2f       	mov	r25, r24
 658:	9f 7d       	andi	r25, 0xDF	; 223
 65a:	95 54       	subi	r25, 0x45	; 69
 65c:	93 30       	cpi	r25, 0x03	; 3
 65e:	28 f4       	brcc	.+10     	; 0x66a <vfprintf+0x114>
 660:	0c 5f       	subi	r16, 0xFC	; 252
 662:	1f 4f       	sbci	r17, 0xFF	; 255
 664:	ff e3       	ldi	r31, 0x3F	; 63
 666:	f9 83       	std	Y+1, r31	; 0x01
 668:	0d c0       	rjmp	.+26     	; 0x684 <vfprintf+0x12e>
 66a:	83 36       	cpi	r24, 0x63	; 99
 66c:	31 f0       	breq	.+12     	; 0x67a <vfprintf+0x124>
 66e:	83 37       	cpi	r24, 0x73	; 115
 670:	71 f0       	breq	.+28     	; 0x68e <vfprintf+0x138>
 672:	83 35       	cpi	r24, 0x53	; 83
 674:	09 f0       	breq	.+2      	; 0x678 <vfprintf+0x122>
 676:	57 c0       	rjmp	.+174    	; 0x726 <vfprintf+0x1d0>
 678:	21 c0       	rjmp	.+66     	; 0x6bc <vfprintf+0x166>
 67a:	f8 01       	movw	r30, r16
 67c:	80 81       	ld	r24, Z
 67e:	89 83       	std	Y+1, r24	; 0x01
 680:	0e 5f       	subi	r16, 0xFE	; 254
 682:	1f 4f       	sbci	r17, 0xFF	; 255
 684:	44 24       	eor	r4, r4
 686:	43 94       	inc	r4
 688:	51 2c       	mov	r5, r1
 68a:	54 01       	movw	r10, r8
 68c:	14 c0       	rjmp	.+40     	; 0x6b6 <vfprintf+0x160>
 68e:	38 01       	movw	r6, r16
 690:	f2 e0       	ldi	r31, 0x02	; 2
 692:	6f 0e       	add	r6, r31
 694:	71 1c       	adc	r7, r1
 696:	f8 01       	movw	r30, r16
 698:	a0 80       	ld	r10, Z
 69a:	b1 80       	ldd	r11, Z+1	; 0x01
 69c:	26 ff       	sbrs	r18, 6
 69e:	03 c0       	rjmp	.+6      	; 0x6a6 <vfprintf+0x150>
 6a0:	65 2d       	mov	r22, r5
 6a2:	70 e0       	ldi	r23, 0x00	; 0
 6a4:	02 c0       	rjmp	.+4      	; 0x6aa <vfprintf+0x154>
 6a6:	6f ef       	ldi	r22, 0xFF	; 255
 6a8:	7f ef       	ldi	r23, 0xFF	; 255
 6aa:	c5 01       	movw	r24, r10
 6ac:	2c 87       	std	Y+12, r18	; 0x0c
 6ae:	94 d2       	rcall	.+1320   	; 0xbd8 <strnlen>
 6b0:	2c 01       	movw	r4, r24
 6b2:	83 01       	movw	r16, r6
 6b4:	2c 85       	ldd	r18, Y+12	; 0x0c
 6b6:	2f 77       	andi	r18, 0x7F	; 127
 6b8:	22 2e       	mov	r2, r18
 6ba:	16 c0       	rjmp	.+44     	; 0x6e8 <vfprintf+0x192>
 6bc:	38 01       	movw	r6, r16
 6be:	f2 e0       	ldi	r31, 0x02	; 2
 6c0:	6f 0e       	add	r6, r31
 6c2:	71 1c       	adc	r7, r1
 6c4:	f8 01       	movw	r30, r16
 6c6:	a0 80       	ld	r10, Z
 6c8:	b1 80       	ldd	r11, Z+1	; 0x01
 6ca:	26 ff       	sbrs	r18, 6
 6cc:	03 c0       	rjmp	.+6      	; 0x6d4 <vfprintf+0x17e>
 6ce:	65 2d       	mov	r22, r5
 6d0:	70 e0       	ldi	r23, 0x00	; 0
 6d2:	02 c0       	rjmp	.+4      	; 0x6d8 <vfprintf+0x182>
 6d4:	6f ef       	ldi	r22, 0xFF	; 255
 6d6:	7f ef       	ldi	r23, 0xFF	; 255
 6d8:	c5 01       	movw	r24, r10
 6da:	2c 87       	std	Y+12, r18	; 0x0c
 6dc:	6b d2       	rcall	.+1238   	; 0xbb4 <strnlen_P>
 6de:	2c 01       	movw	r4, r24
 6e0:	2c 85       	ldd	r18, Y+12	; 0x0c
 6e2:	20 68       	ori	r18, 0x80	; 128
 6e4:	22 2e       	mov	r2, r18
 6e6:	83 01       	movw	r16, r6
 6e8:	23 fc       	sbrc	r2, 3
 6ea:	19 c0       	rjmp	.+50     	; 0x71e <vfprintf+0x1c8>
 6ec:	83 2d       	mov	r24, r3
 6ee:	90 e0       	ldi	r25, 0x00	; 0
 6f0:	48 16       	cp	r4, r24
 6f2:	59 06       	cpc	r5, r25
 6f4:	a0 f4       	brcc	.+40     	; 0x71e <vfprintf+0x1c8>
 6f6:	b7 01       	movw	r22, r14
 6f8:	80 e2       	ldi	r24, 0x20	; 32
 6fa:	90 e0       	ldi	r25, 0x00	; 0
 6fc:	78 d2       	rcall	.+1264   	; 0xbee <fputc>
 6fe:	3a 94       	dec	r3
 700:	f5 cf       	rjmp	.-22     	; 0x6ec <vfprintf+0x196>
 702:	f5 01       	movw	r30, r10
 704:	27 fc       	sbrc	r2, 7
 706:	85 91       	lpm	r24, Z+
 708:	27 fe       	sbrs	r2, 7
 70a:	81 91       	ld	r24, Z+
 70c:	5f 01       	movw	r10, r30
 70e:	b7 01       	movw	r22, r14
 710:	90 e0       	ldi	r25, 0x00	; 0
 712:	6d d2       	rcall	.+1242   	; 0xbee <fputc>
 714:	31 10       	cpse	r3, r1
 716:	3a 94       	dec	r3
 718:	f1 e0       	ldi	r31, 0x01	; 1
 71a:	4f 1a       	sub	r4, r31
 71c:	51 08       	sbc	r5, r1
 71e:	41 14       	cp	r4, r1
 720:	51 04       	cpc	r5, r1
 722:	79 f7       	brne	.-34     	; 0x702 <vfprintf+0x1ac>
 724:	de c0       	rjmp	.+444    	; 0x8e2 <vfprintf+0x38c>
 726:	84 36       	cpi	r24, 0x64	; 100
 728:	11 f0       	breq	.+4      	; 0x72e <vfprintf+0x1d8>
 72a:	89 36       	cpi	r24, 0x69	; 105
 72c:	31 f5       	brne	.+76     	; 0x77a <vfprintf+0x224>
 72e:	f8 01       	movw	r30, r16
 730:	27 ff       	sbrs	r18, 7
 732:	07 c0       	rjmp	.+14     	; 0x742 <vfprintf+0x1ec>
 734:	60 81       	ld	r22, Z
 736:	71 81       	ldd	r23, Z+1	; 0x01
 738:	82 81       	ldd	r24, Z+2	; 0x02
 73a:	93 81       	ldd	r25, Z+3	; 0x03
 73c:	0c 5f       	subi	r16, 0xFC	; 252
 73e:	1f 4f       	sbci	r17, 0xFF	; 255
 740:	08 c0       	rjmp	.+16     	; 0x752 <vfprintf+0x1fc>
 742:	60 81       	ld	r22, Z
 744:	71 81       	ldd	r23, Z+1	; 0x01
 746:	88 27       	eor	r24, r24
 748:	77 fd       	sbrc	r23, 7
 74a:	80 95       	com	r24
 74c:	98 2f       	mov	r25, r24
 74e:	0e 5f       	subi	r16, 0xFE	; 254
 750:	1f 4f       	sbci	r17, 0xFF	; 255
 752:	2f 76       	andi	r18, 0x6F	; 111
 754:	b2 2e       	mov	r11, r18
 756:	97 ff       	sbrs	r25, 7
 758:	09 c0       	rjmp	.+18     	; 0x76c <vfprintf+0x216>
 75a:	90 95       	com	r25
 75c:	80 95       	com	r24
 75e:	70 95       	com	r23
 760:	61 95       	neg	r22
 762:	7f 4f       	sbci	r23, 0xFF	; 255
 764:	8f 4f       	sbci	r24, 0xFF	; 255
 766:	9f 4f       	sbci	r25, 0xFF	; 255
 768:	20 68       	ori	r18, 0x80	; 128
 76a:	b2 2e       	mov	r11, r18
 76c:	2a e0       	ldi	r18, 0x0A	; 10
 76e:	30 e0       	ldi	r19, 0x00	; 0
 770:	a4 01       	movw	r20, r8
 772:	6f d2       	rcall	.+1246   	; 0xc52 <__ultoa_invert>
 774:	a8 2e       	mov	r10, r24
 776:	a8 18       	sub	r10, r8
 778:	43 c0       	rjmp	.+134    	; 0x800 <vfprintf+0x2aa>
 77a:	85 37       	cpi	r24, 0x75	; 117
 77c:	29 f4       	brne	.+10     	; 0x788 <vfprintf+0x232>
 77e:	2f 7e       	andi	r18, 0xEF	; 239
 780:	b2 2e       	mov	r11, r18
 782:	2a e0       	ldi	r18, 0x0A	; 10
 784:	30 e0       	ldi	r19, 0x00	; 0
 786:	25 c0       	rjmp	.+74     	; 0x7d2 <vfprintf+0x27c>
 788:	f2 2f       	mov	r31, r18
 78a:	f9 7f       	andi	r31, 0xF9	; 249
 78c:	bf 2e       	mov	r11, r31
 78e:	8f 36       	cpi	r24, 0x6F	; 111
 790:	c1 f0       	breq	.+48     	; 0x7c2 <vfprintf+0x26c>
 792:	18 f4       	brcc	.+6      	; 0x79a <vfprintf+0x244>
 794:	88 35       	cpi	r24, 0x58	; 88
 796:	79 f0       	breq	.+30     	; 0x7b6 <vfprintf+0x260>
 798:	ad c0       	rjmp	.+346    	; 0x8f4 <vfprintf+0x39e>
 79a:	80 37       	cpi	r24, 0x70	; 112
 79c:	19 f0       	breq	.+6      	; 0x7a4 <vfprintf+0x24e>
 79e:	88 37       	cpi	r24, 0x78	; 120
 7a0:	21 f0       	breq	.+8      	; 0x7aa <vfprintf+0x254>
 7a2:	a8 c0       	rjmp	.+336    	; 0x8f4 <vfprintf+0x39e>
 7a4:	2f 2f       	mov	r18, r31
 7a6:	20 61       	ori	r18, 0x10	; 16
 7a8:	b2 2e       	mov	r11, r18
 7aa:	b4 fe       	sbrs	r11, 4
 7ac:	0d c0       	rjmp	.+26     	; 0x7c8 <vfprintf+0x272>
 7ae:	8b 2d       	mov	r24, r11
 7b0:	84 60       	ori	r24, 0x04	; 4
 7b2:	b8 2e       	mov	r11, r24
 7b4:	09 c0       	rjmp	.+18     	; 0x7c8 <vfprintf+0x272>
 7b6:	24 ff       	sbrs	r18, 4
 7b8:	0a c0       	rjmp	.+20     	; 0x7ce <vfprintf+0x278>
 7ba:	9f 2f       	mov	r25, r31
 7bc:	96 60       	ori	r25, 0x06	; 6
 7be:	b9 2e       	mov	r11, r25
 7c0:	06 c0       	rjmp	.+12     	; 0x7ce <vfprintf+0x278>
 7c2:	28 e0       	ldi	r18, 0x08	; 8
 7c4:	30 e0       	ldi	r19, 0x00	; 0
 7c6:	05 c0       	rjmp	.+10     	; 0x7d2 <vfprintf+0x27c>
 7c8:	20 e1       	ldi	r18, 0x10	; 16
 7ca:	30 e0       	ldi	r19, 0x00	; 0
 7cc:	02 c0       	rjmp	.+4      	; 0x7d2 <vfprintf+0x27c>
 7ce:	20 e1       	ldi	r18, 0x10	; 16
 7d0:	32 e0       	ldi	r19, 0x02	; 2
 7d2:	f8 01       	movw	r30, r16
 7d4:	b7 fe       	sbrs	r11, 7
 7d6:	07 c0       	rjmp	.+14     	; 0x7e6 <vfprintf+0x290>
 7d8:	60 81       	ld	r22, Z
 7da:	71 81       	ldd	r23, Z+1	; 0x01
 7dc:	82 81       	ldd	r24, Z+2	; 0x02
 7de:	93 81       	ldd	r25, Z+3	; 0x03
 7e0:	0c 5f       	subi	r16, 0xFC	; 252
 7e2:	1f 4f       	sbci	r17, 0xFF	; 255
 7e4:	06 c0       	rjmp	.+12     	; 0x7f2 <vfprintf+0x29c>
 7e6:	60 81       	ld	r22, Z
 7e8:	71 81       	ldd	r23, Z+1	; 0x01
 7ea:	80 e0       	ldi	r24, 0x00	; 0
 7ec:	90 e0       	ldi	r25, 0x00	; 0
 7ee:	0e 5f       	subi	r16, 0xFE	; 254
 7f0:	1f 4f       	sbci	r17, 0xFF	; 255
 7f2:	a4 01       	movw	r20, r8
 7f4:	2e d2       	rcall	.+1116   	; 0xc52 <__ultoa_invert>
 7f6:	a8 2e       	mov	r10, r24
 7f8:	a8 18       	sub	r10, r8
 7fa:	fb 2d       	mov	r31, r11
 7fc:	ff 77       	andi	r31, 0x7F	; 127
 7fe:	bf 2e       	mov	r11, r31
 800:	b6 fe       	sbrs	r11, 6
 802:	0b c0       	rjmp	.+22     	; 0x81a <vfprintf+0x2c4>
 804:	2b 2d       	mov	r18, r11
 806:	2e 7f       	andi	r18, 0xFE	; 254
 808:	a5 14       	cp	r10, r5
 80a:	50 f4       	brcc	.+20     	; 0x820 <vfprintf+0x2ca>
 80c:	b4 fe       	sbrs	r11, 4
 80e:	0a c0       	rjmp	.+20     	; 0x824 <vfprintf+0x2ce>
 810:	b2 fc       	sbrc	r11, 2
 812:	08 c0       	rjmp	.+16     	; 0x824 <vfprintf+0x2ce>
 814:	2b 2d       	mov	r18, r11
 816:	2e 7e       	andi	r18, 0xEE	; 238
 818:	05 c0       	rjmp	.+10     	; 0x824 <vfprintf+0x2ce>
 81a:	7a 2c       	mov	r7, r10
 81c:	2b 2d       	mov	r18, r11
 81e:	03 c0       	rjmp	.+6      	; 0x826 <vfprintf+0x2d0>
 820:	7a 2c       	mov	r7, r10
 822:	01 c0       	rjmp	.+2      	; 0x826 <vfprintf+0x2d0>
 824:	75 2c       	mov	r7, r5
 826:	24 ff       	sbrs	r18, 4
 828:	0d c0       	rjmp	.+26     	; 0x844 <vfprintf+0x2ee>
 82a:	fe 01       	movw	r30, r28
 82c:	ea 0d       	add	r30, r10
 82e:	f1 1d       	adc	r31, r1
 830:	80 81       	ld	r24, Z
 832:	80 33       	cpi	r24, 0x30	; 48
 834:	11 f4       	brne	.+4      	; 0x83a <vfprintf+0x2e4>
 836:	29 7e       	andi	r18, 0xE9	; 233
 838:	09 c0       	rjmp	.+18     	; 0x84c <vfprintf+0x2f6>
 83a:	22 ff       	sbrs	r18, 2
 83c:	06 c0       	rjmp	.+12     	; 0x84a <vfprintf+0x2f4>
 83e:	73 94       	inc	r7
 840:	73 94       	inc	r7
 842:	04 c0       	rjmp	.+8      	; 0x84c <vfprintf+0x2f6>
 844:	82 2f       	mov	r24, r18
 846:	86 78       	andi	r24, 0x86	; 134
 848:	09 f0       	breq	.+2      	; 0x84c <vfprintf+0x2f6>
 84a:	73 94       	inc	r7
 84c:	23 fd       	sbrc	r18, 3
 84e:	12 c0       	rjmp	.+36     	; 0x874 <vfprintf+0x31e>
 850:	20 ff       	sbrs	r18, 0
 852:	06 c0       	rjmp	.+12     	; 0x860 <vfprintf+0x30a>
 854:	5a 2c       	mov	r5, r10
 856:	73 14       	cp	r7, r3
 858:	18 f4       	brcc	.+6      	; 0x860 <vfprintf+0x30a>
 85a:	53 0c       	add	r5, r3
 85c:	57 18       	sub	r5, r7
 85e:	73 2c       	mov	r7, r3
 860:	73 14       	cp	r7, r3
 862:	60 f4       	brcc	.+24     	; 0x87c <vfprintf+0x326>
 864:	b7 01       	movw	r22, r14
 866:	80 e2       	ldi	r24, 0x20	; 32
 868:	90 e0       	ldi	r25, 0x00	; 0
 86a:	2c 87       	std	Y+12, r18	; 0x0c
 86c:	c0 d1       	rcall	.+896    	; 0xbee <fputc>
 86e:	73 94       	inc	r7
 870:	2c 85       	ldd	r18, Y+12	; 0x0c
 872:	f6 cf       	rjmp	.-20     	; 0x860 <vfprintf+0x30a>
 874:	73 14       	cp	r7, r3
 876:	10 f4       	brcc	.+4      	; 0x87c <vfprintf+0x326>
 878:	37 18       	sub	r3, r7
 87a:	01 c0       	rjmp	.+2      	; 0x87e <vfprintf+0x328>
 87c:	31 2c       	mov	r3, r1
 87e:	24 ff       	sbrs	r18, 4
 880:	11 c0       	rjmp	.+34     	; 0x8a4 <vfprintf+0x34e>
 882:	b7 01       	movw	r22, r14
 884:	80 e3       	ldi	r24, 0x30	; 48
 886:	90 e0       	ldi	r25, 0x00	; 0
 888:	2c 87       	std	Y+12, r18	; 0x0c
 88a:	b1 d1       	rcall	.+866    	; 0xbee <fputc>
 88c:	2c 85       	ldd	r18, Y+12	; 0x0c
 88e:	22 ff       	sbrs	r18, 2
 890:	16 c0       	rjmp	.+44     	; 0x8be <vfprintf+0x368>
 892:	21 ff       	sbrs	r18, 1
 894:	03 c0       	rjmp	.+6      	; 0x89c <vfprintf+0x346>
 896:	88 e5       	ldi	r24, 0x58	; 88
 898:	90 e0       	ldi	r25, 0x00	; 0
 89a:	02 c0       	rjmp	.+4      	; 0x8a0 <vfprintf+0x34a>
 89c:	88 e7       	ldi	r24, 0x78	; 120
 89e:	90 e0       	ldi	r25, 0x00	; 0
 8a0:	b7 01       	movw	r22, r14
 8a2:	0c c0       	rjmp	.+24     	; 0x8bc <vfprintf+0x366>
 8a4:	82 2f       	mov	r24, r18
 8a6:	86 78       	andi	r24, 0x86	; 134
 8a8:	51 f0       	breq	.+20     	; 0x8be <vfprintf+0x368>
 8aa:	21 fd       	sbrc	r18, 1
 8ac:	02 c0       	rjmp	.+4      	; 0x8b2 <vfprintf+0x35c>
 8ae:	80 e2       	ldi	r24, 0x20	; 32
 8b0:	01 c0       	rjmp	.+2      	; 0x8b4 <vfprintf+0x35e>
 8b2:	8b e2       	ldi	r24, 0x2B	; 43
 8b4:	27 fd       	sbrc	r18, 7
 8b6:	8d e2       	ldi	r24, 0x2D	; 45
 8b8:	b7 01       	movw	r22, r14
 8ba:	90 e0       	ldi	r25, 0x00	; 0
 8bc:	98 d1       	rcall	.+816    	; 0xbee <fputc>
 8be:	a5 14       	cp	r10, r5
 8c0:	30 f4       	brcc	.+12     	; 0x8ce <vfprintf+0x378>
 8c2:	b7 01       	movw	r22, r14
 8c4:	80 e3       	ldi	r24, 0x30	; 48
 8c6:	90 e0       	ldi	r25, 0x00	; 0
 8c8:	92 d1       	rcall	.+804    	; 0xbee <fputc>
 8ca:	5a 94       	dec	r5
 8cc:	f8 cf       	rjmp	.-16     	; 0x8be <vfprintf+0x368>
 8ce:	aa 94       	dec	r10
 8d0:	f4 01       	movw	r30, r8
 8d2:	ea 0d       	add	r30, r10
 8d4:	f1 1d       	adc	r31, r1
 8d6:	80 81       	ld	r24, Z
 8d8:	b7 01       	movw	r22, r14
 8da:	90 e0       	ldi	r25, 0x00	; 0
 8dc:	88 d1       	rcall	.+784    	; 0xbee <fputc>
 8de:	a1 10       	cpse	r10, r1
 8e0:	f6 cf       	rjmp	.-20     	; 0x8ce <vfprintf+0x378>
 8e2:	33 20       	and	r3, r3
 8e4:	09 f4       	brne	.+2      	; 0x8e8 <vfprintf+0x392>
 8e6:	5d ce       	rjmp	.-838    	; 0x5a2 <vfprintf+0x4c>
 8e8:	b7 01       	movw	r22, r14
 8ea:	80 e2       	ldi	r24, 0x20	; 32
 8ec:	90 e0       	ldi	r25, 0x00	; 0
 8ee:	7f d1       	rcall	.+766    	; 0xbee <fputc>
 8f0:	3a 94       	dec	r3
 8f2:	f7 cf       	rjmp	.-18     	; 0x8e2 <vfprintf+0x38c>
 8f4:	f7 01       	movw	r30, r14
 8f6:	86 81       	ldd	r24, Z+6	; 0x06
 8f8:	97 81       	ldd	r25, Z+7	; 0x07
 8fa:	02 c0       	rjmp	.+4      	; 0x900 <vfprintf+0x3aa>
 8fc:	8f ef       	ldi	r24, 0xFF	; 255
 8fe:	9f ef       	ldi	r25, 0xFF	; 255
 900:	2c 96       	adiw	r28, 0x0c	; 12
 902:	0f b6       	in	r0, 0x3f	; 63
 904:	f8 94       	cli
 906:	de bf       	out	0x3e, r29	; 62
 908:	0f be       	out	0x3f, r0	; 63
 90a:	cd bf       	out	0x3d, r28	; 61
 90c:	df 91       	pop	r29
 90e:	cf 91       	pop	r28
 910:	1f 91       	pop	r17
 912:	0f 91       	pop	r16
 914:	ff 90       	pop	r15
 916:	ef 90       	pop	r14
 918:	df 90       	pop	r13
 91a:	cf 90       	pop	r12
 91c:	bf 90       	pop	r11
 91e:	af 90       	pop	r10
 920:	9f 90       	pop	r9
 922:	8f 90       	pop	r8
 924:	7f 90       	pop	r7
 926:	6f 90       	pop	r6
 928:	5f 90       	pop	r5
 92a:	4f 90       	pop	r4
 92c:	3f 90       	pop	r3
 92e:	2f 90       	pop	r2
 930:	08 95       	ret

00000932 <calloc>:
 932:	0f 93       	push	r16
 934:	1f 93       	push	r17
 936:	cf 93       	push	r28
 938:	df 93       	push	r29
 93a:	86 9f       	mul	r24, r22
 93c:	80 01       	movw	r16, r0
 93e:	87 9f       	mul	r24, r23
 940:	10 0d       	add	r17, r0
 942:	96 9f       	mul	r25, r22
 944:	10 0d       	add	r17, r0
 946:	11 24       	eor	r1, r1
 948:	c8 01       	movw	r24, r16
 94a:	0d d0       	rcall	.+26     	; 0x966 <malloc>
 94c:	ec 01       	movw	r28, r24
 94e:	00 97       	sbiw	r24, 0x00	; 0
 950:	21 f0       	breq	.+8      	; 0x95a <calloc+0x28>
 952:	a8 01       	movw	r20, r16
 954:	60 e0       	ldi	r22, 0x00	; 0
 956:	70 e0       	ldi	r23, 0x00	; 0
 958:	38 d1       	rcall	.+624    	; 0xbca <memset>
 95a:	ce 01       	movw	r24, r28
 95c:	df 91       	pop	r29
 95e:	cf 91       	pop	r28
 960:	1f 91       	pop	r17
 962:	0f 91       	pop	r16
 964:	08 95       	ret

00000966 <malloc>:
 966:	cf 93       	push	r28
 968:	df 93       	push	r29
 96a:	82 30       	cpi	r24, 0x02	; 2
 96c:	91 05       	cpc	r25, r1
 96e:	10 f4       	brcc	.+4      	; 0x974 <malloc+0xe>
 970:	82 e0       	ldi	r24, 0x02	; 2
 972:	90 e0       	ldi	r25, 0x00	; 0
 974:	e0 91 36 02 	lds	r30, 0x0236
 978:	f0 91 37 02 	lds	r31, 0x0237
 97c:	20 e0       	ldi	r18, 0x00	; 0
 97e:	30 e0       	ldi	r19, 0x00	; 0
 980:	a0 e0       	ldi	r26, 0x00	; 0
 982:	b0 e0       	ldi	r27, 0x00	; 0
 984:	30 97       	sbiw	r30, 0x00	; 0
 986:	39 f1       	breq	.+78     	; 0x9d6 <malloc+0x70>
 988:	40 81       	ld	r20, Z
 98a:	51 81       	ldd	r21, Z+1	; 0x01
 98c:	48 17       	cp	r20, r24
 98e:	59 07       	cpc	r21, r25
 990:	b8 f0       	brcs	.+46     	; 0x9c0 <malloc+0x5a>
 992:	48 17       	cp	r20, r24
 994:	59 07       	cpc	r21, r25
 996:	71 f4       	brne	.+28     	; 0x9b4 <malloc+0x4e>
 998:	82 81       	ldd	r24, Z+2	; 0x02
 99a:	93 81       	ldd	r25, Z+3	; 0x03
 99c:	10 97       	sbiw	r26, 0x00	; 0
 99e:	29 f0       	breq	.+10     	; 0x9aa <malloc+0x44>
 9a0:	13 96       	adiw	r26, 0x03	; 3
 9a2:	9c 93       	st	X, r25
 9a4:	8e 93       	st	-X, r24
 9a6:	12 97       	sbiw	r26, 0x02	; 2
 9a8:	2c c0       	rjmp	.+88     	; 0xa02 <malloc+0x9c>
 9aa:	90 93 37 02 	sts	0x0237, r25
 9ae:	80 93 36 02 	sts	0x0236, r24
 9b2:	27 c0       	rjmp	.+78     	; 0xa02 <malloc+0x9c>
 9b4:	21 15       	cp	r18, r1
 9b6:	31 05       	cpc	r19, r1
 9b8:	31 f0       	breq	.+12     	; 0x9c6 <malloc+0x60>
 9ba:	42 17       	cp	r20, r18
 9bc:	53 07       	cpc	r21, r19
 9be:	18 f0       	brcs	.+6      	; 0x9c6 <malloc+0x60>
 9c0:	a9 01       	movw	r20, r18
 9c2:	db 01       	movw	r26, r22
 9c4:	01 c0       	rjmp	.+2      	; 0x9c8 <malloc+0x62>
 9c6:	ef 01       	movw	r28, r30
 9c8:	9a 01       	movw	r18, r20
 9ca:	bd 01       	movw	r22, r26
 9cc:	df 01       	movw	r26, r30
 9ce:	02 80       	ldd	r0, Z+2	; 0x02
 9d0:	f3 81       	ldd	r31, Z+3	; 0x03
 9d2:	e0 2d       	mov	r30, r0
 9d4:	d7 cf       	rjmp	.-82     	; 0x984 <malloc+0x1e>
 9d6:	21 15       	cp	r18, r1
 9d8:	31 05       	cpc	r19, r1
 9da:	f9 f0       	breq	.+62     	; 0xa1a <malloc+0xb4>
 9dc:	28 1b       	sub	r18, r24
 9de:	39 0b       	sbc	r19, r25
 9e0:	24 30       	cpi	r18, 0x04	; 4
 9e2:	31 05       	cpc	r19, r1
 9e4:	80 f4       	brcc	.+32     	; 0xa06 <malloc+0xa0>
 9e6:	8a 81       	ldd	r24, Y+2	; 0x02
 9e8:	9b 81       	ldd	r25, Y+3	; 0x03
 9ea:	61 15       	cp	r22, r1
 9ec:	71 05       	cpc	r23, r1
 9ee:	21 f0       	breq	.+8      	; 0x9f8 <malloc+0x92>
 9f0:	fb 01       	movw	r30, r22
 9f2:	93 83       	std	Z+3, r25	; 0x03
 9f4:	82 83       	std	Z+2, r24	; 0x02
 9f6:	04 c0       	rjmp	.+8      	; 0xa00 <malloc+0x9a>
 9f8:	90 93 37 02 	sts	0x0237, r25
 9fc:	80 93 36 02 	sts	0x0236, r24
 a00:	fe 01       	movw	r30, r28
 a02:	32 96       	adiw	r30, 0x02	; 2
 a04:	44 c0       	rjmp	.+136    	; 0xa8e <malloc+0x128>
 a06:	fe 01       	movw	r30, r28
 a08:	e2 0f       	add	r30, r18
 a0a:	f3 1f       	adc	r31, r19
 a0c:	81 93       	st	Z+, r24
 a0e:	91 93       	st	Z+, r25
 a10:	22 50       	subi	r18, 0x02	; 2
 a12:	31 09       	sbc	r19, r1
 a14:	39 83       	std	Y+1, r19	; 0x01
 a16:	28 83       	st	Y, r18
 a18:	3a c0       	rjmp	.+116    	; 0xa8e <malloc+0x128>
 a1a:	20 91 34 02 	lds	r18, 0x0234
 a1e:	30 91 35 02 	lds	r19, 0x0235
 a22:	23 2b       	or	r18, r19
 a24:	41 f4       	brne	.+16     	; 0xa36 <malloc+0xd0>
 a26:	20 91 02 02 	lds	r18, 0x0202
 a2a:	30 91 03 02 	lds	r19, 0x0203
 a2e:	30 93 35 02 	sts	0x0235, r19
 a32:	20 93 34 02 	sts	0x0234, r18
 a36:	20 91 00 02 	lds	r18, 0x0200
 a3a:	30 91 01 02 	lds	r19, 0x0201
 a3e:	21 15       	cp	r18, r1
 a40:	31 05       	cpc	r19, r1
 a42:	41 f4       	brne	.+16     	; 0xa54 <malloc+0xee>
 a44:	2d b7       	in	r18, 0x3d	; 61
 a46:	3e b7       	in	r19, 0x3e	; 62
 a48:	40 91 04 02 	lds	r20, 0x0204
 a4c:	50 91 05 02 	lds	r21, 0x0205
 a50:	24 1b       	sub	r18, r20
 a52:	35 0b       	sbc	r19, r21
 a54:	e0 91 34 02 	lds	r30, 0x0234
 a58:	f0 91 35 02 	lds	r31, 0x0235
 a5c:	e2 17       	cp	r30, r18
 a5e:	f3 07       	cpc	r31, r19
 a60:	a0 f4       	brcc	.+40     	; 0xa8a <malloc+0x124>
 a62:	2e 1b       	sub	r18, r30
 a64:	3f 0b       	sbc	r19, r31
 a66:	28 17       	cp	r18, r24
 a68:	39 07       	cpc	r19, r25
 a6a:	78 f0       	brcs	.+30     	; 0xa8a <malloc+0x124>
 a6c:	ac 01       	movw	r20, r24
 a6e:	4e 5f       	subi	r20, 0xFE	; 254
 a70:	5f 4f       	sbci	r21, 0xFF	; 255
 a72:	24 17       	cp	r18, r20
 a74:	35 07       	cpc	r19, r21
 a76:	48 f0       	brcs	.+18     	; 0xa8a <malloc+0x124>
 a78:	4e 0f       	add	r20, r30
 a7a:	5f 1f       	adc	r21, r31
 a7c:	50 93 35 02 	sts	0x0235, r21
 a80:	40 93 34 02 	sts	0x0234, r20
 a84:	81 93       	st	Z+, r24
 a86:	91 93       	st	Z+, r25
 a88:	02 c0       	rjmp	.+4      	; 0xa8e <malloc+0x128>
 a8a:	e0 e0       	ldi	r30, 0x00	; 0
 a8c:	f0 e0       	ldi	r31, 0x00	; 0
 a8e:	cf 01       	movw	r24, r30
 a90:	df 91       	pop	r29
 a92:	cf 91       	pop	r28
 a94:	08 95       	ret

00000a96 <free>:
 a96:	cf 93       	push	r28
 a98:	df 93       	push	r29
 a9a:	00 97       	sbiw	r24, 0x00	; 0
 a9c:	09 f4       	brne	.+2      	; 0xaa0 <free+0xa>
 a9e:	87 c0       	rjmp	.+270    	; 0xbae <free+0x118>
 aa0:	fc 01       	movw	r30, r24
 aa2:	32 97       	sbiw	r30, 0x02	; 2
 aa4:	13 82       	std	Z+3, r1	; 0x03
 aa6:	12 82       	std	Z+2, r1	; 0x02
 aa8:	c0 91 36 02 	lds	r28, 0x0236
 aac:	d0 91 37 02 	lds	r29, 0x0237
 ab0:	20 97       	sbiw	r28, 0x00	; 0
 ab2:	81 f4       	brne	.+32     	; 0xad4 <free+0x3e>
 ab4:	20 81       	ld	r18, Z
 ab6:	31 81       	ldd	r19, Z+1	; 0x01
 ab8:	28 0f       	add	r18, r24
 aba:	39 1f       	adc	r19, r25
 abc:	80 91 34 02 	lds	r24, 0x0234
 ac0:	90 91 35 02 	lds	r25, 0x0235
 ac4:	82 17       	cp	r24, r18
 ac6:	93 07       	cpc	r25, r19
 ac8:	79 f5       	brne	.+94     	; 0xb28 <free+0x92>
 aca:	f0 93 35 02 	sts	0x0235, r31
 ace:	e0 93 34 02 	sts	0x0234, r30
 ad2:	6d c0       	rjmp	.+218    	; 0xbae <free+0x118>
 ad4:	de 01       	movw	r26, r28
 ad6:	20 e0       	ldi	r18, 0x00	; 0
 ad8:	30 e0       	ldi	r19, 0x00	; 0
 ada:	ae 17       	cp	r26, r30
 adc:	bf 07       	cpc	r27, r31
 ade:	50 f4       	brcc	.+20     	; 0xaf4 <free+0x5e>
 ae0:	12 96       	adiw	r26, 0x02	; 2
 ae2:	4d 91       	ld	r20, X+
 ae4:	5c 91       	ld	r21, X
 ae6:	13 97       	sbiw	r26, 0x03	; 3
 ae8:	9d 01       	movw	r18, r26
 aea:	41 15       	cp	r20, r1
 aec:	51 05       	cpc	r21, r1
 aee:	09 f1       	breq	.+66     	; 0xb32 <free+0x9c>
 af0:	da 01       	movw	r26, r20
 af2:	f3 cf       	rjmp	.-26     	; 0xada <free+0x44>
 af4:	b3 83       	std	Z+3, r27	; 0x03
 af6:	a2 83       	std	Z+2, r26	; 0x02
 af8:	40 81       	ld	r20, Z
 afa:	51 81       	ldd	r21, Z+1	; 0x01
 afc:	84 0f       	add	r24, r20
 afe:	95 1f       	adc	r25, r21
 b00:	8a 17       	cp	r24, r26
 b02:	9b 07       	cpc	r25, r27
 b04:	71 f4       	brne	.+28     	; 0xb22 <free+0x8c>
 b06:	8d 91       	ld	r24, X+
 b08:	9c 91       	ld	r25, X
 b0a:	11 97       	sbiw	r26, 0x01	; 1
 b0c:	84 0f       	add	r24, r20
 b0e:	95 1f       	adc	r25, r21
 b10:	02 96       	adiw	r24, 0x02	; 2
 b12:	91 83       	std	Z+1, r25	; 0x01
 b14:	80 83       	st	Z, r24
 b16:	12 96       	adiw	r26, 0x02	; 2
 b18:	8d 91       	ld	r24, X+
 b1a:	9c 91       	ld	r25, X
 b1c:	13 97       	sbiw	r26, 0x03	; 3
 b1e:	93 83       	std	Z+3, r25	; 0x03
 b20:	82 83       	std	Z+2, r24	; 0x02
 b22:	21 15       	cp	r18, r1
 b24:	31 05       	cpc	r19, r1
 b26:	29 f4       	brne	.+10     	; 0xb32 <free+0x9c>
 b28:	f0 93 37 02 	sts	0x0237, r31
 b2c:	e0 93 36 02 	sts	0x0236, r30
 b30:	3e c0       	rjmp	.+124    	; 0xbae <free+0x118>
 b32:	d9 01       	movw	r26, r18
 b34:	13 96       	adiw	r26, 0x03	; 3
 b36:	fc 93       	st	X, r31
 b38:	ee 93       	st	-X, r30
 b3a:	12 97       	sbiw	r26, 0x02	; 2
 b3c:	4d 91       	ld	r20, X+
 b3e:	5d 91       	ld	r21, X+
 b40:	a4 0f       	add	r26, r20
 b42:	b5 1f       	adc	r27, r21
 b44:	ea 17       	cp	r30, r26
 b46:	fb 07       	cpc	r31, r27
 b48:	79 f4       	brne	.+30     	; 0xb68 <free+0xd2>
 b4a:	80 81       	ld	r24, Z
 b4c:	91 81       	ldd	r25, Z+1	; 0x01
 b4e:	84 0f       	add	r24, r20
 b50:	95 1f       	adc	r25, r21
 b52:	02 96       	adiw	r24, 0x02	; 2
 b54:	d9 01       	movw	r26, r18
 b56:	11 96       	adiw	r26, 0x01	; 1
 b58:	9c 93       	st	X, r25
 b5a:	8e 93       	st	-X, r24
 b5c:	82 81       	ldd	r24, Z+2	; 0x02
 b5e:	93 81       	ldd	r25, Z+3	; 0x03
 b60:	13 96       	adiw	r26, 0x03	; 3
 b62:	9c 93       	st	X, r25
 b64:	8e 93       	st	-X, r24
 b66:	12 97       	sbiw	r26, 0x02	; 2
 b68:	e0 e0       	ldi	r30, 0x00	; 0
 b6a:	f0 e0       	ldi	r31, 0x00	; 0
 b6c:	8a 81       	ldd	r24, Y+2	; 0x02
 b6e:	9b 81       	ldd	r25, Y+3	; 0x03
 b70:	00 97       	sbiw	r24, 0x00	; 0
 b72:	19 f0       	breq	.+6      	; 0xb7a <free+0xe4>
 b74:	fe 01       	movw	r30, r28
 b76:	ec 01       	movw	r28, r24
 b78:	f9 cf       	rjmp	.-14     	; 0xb6c <free+0xd6>
 b7a:	ce 01       	movw	r24, r28
 b7c:	02 96       	adiw	r24, 0x02	; 2
 b7e:	28 81       	ld	r18, Y
 b80:	39 81       	ldd	r19, Y+1	; 0x01
 b82:	82 0f       	add	r24, r18
 b84:	93 1f       	adc	r25, r19
 b86:	20 91 34 02 	lds	r18, 0x0234
 b8a:	30 91 35 02 	lds	r19, 0x0235
 b8e:	28 17       	cp	r18, r24
 b90:	39 07       	cpc	r19, r25
 b92:	69 f4       	brne	.+26     	; 0xbae <free+0x118>
 b94:	30 97       	sbiw	r30, 0x00	; 0
 b96:	29 f4       	brne	.+10     	; 0xba2 <free+0x10c>
 b98:	10 92 37 02 	sts	0x0237, r1
 b9c:	10 92 36 02 	sts	0x0236, r1
 ba0:	02 c0       	rjmp	.+4      	; 0xba6 <free+0x110>
 ba2:	13 82       	std	Z+3, r1	; 0x03
 ba4:	12 82       	std	Z+2, r1	; 0x02
 ba6:	d0 93 35 02 	sts	0x0235, r29
 baa:	c0 93 34 02 	sts	0x0234, r28
 bae:	df 91       	pop	r29
 bb0:	cf 91       	pop	r28
 bb2:	08 95       	ret

00000bb4 <strnlen_P>:
 bb4:	fc 01       	movw	r30, r24
 bb6:	05 90       	lpm	r0, Z+
 bb8:	61 50       	subi	r22, 0x01	; 1
 bba:	70 40       	sbci	r23, 0x00	; 0
 bbc:	01 10       	cpse	r0, r1
 bbe:	d8 f7       	brcc	.-10     	; 0xbb6 <strnlen_P+0x2>
 bc0:	80 95       	com	r24
 bc2:	90 95       	com	r25
 bc4:	8e 0f       	add	r24, r30
 bc6:	9f 1f       	adc	r25, r31
 bc8:	08 95       	ret

00000bca <memset>:
 bca:	dc 01       	movw	r26, r24
 bcc:	01 c0       	rjmp	.+2      	; 0xbd0 <memset+0x6>
 bce:	6d 93       	st	X+, r22
 bd0:	41 50       	subi	r20, 0x01	; 1
 bd2:	50 40       	sbci	r21, 0x00	; 0
 bd4:	e0 f7       	brcc	.-8      	; 0xbce <memset+0x4>
 bd6:	08 95       	ret

00000bd8 <strnlen>:
 bd8:	fc 01       	movw	r30, r24
 bda:	61 50       	subi	r22, 0x01	; 1
 bdc:	70 40       	sbci	r23, 0x00	; 0
 bde:	01 90       	ld	r0, Z+
 be0:	01 10       	cpse	r0, r1
 be2:	d8 f7       	brcc	.-10     	; 0xbda <strnlen+0x2>
 be4:	80 95       	com	r24
 be6:	90 95       	com	r25
 be8:	8e 0f       	add	r24, r30
 bea:	9f 1f       	adc	r25, r31
 bec:	08 95       	ret

00000bee <fputc>:
 bee:	0f 93       	push	r16
 bf0:	1f 93       	push	r17
 bf2:	cf 93       	push	r28
 bf4:	df 93       	push	r29
 bf6:	18 2f       	mov	r17, r24
 bf8:	09 2f       	mov	r16, r25
 bfa:	eb 01       	movw	r28, r22
 bfc:	8b 81       	ldd	r24, Y+3	; 0x03
 bfe:	81 fd       	sbrc	r24, 1
 c00:	03 c0       	rjmp	.+6      	; 0xc08 <fputc+0x1a>
 c02:	8f ef       	ldi	r24, 0xFF	; 255
 c04:	9f ef       	ldi	r25, 0xFF	; 255
 c06:	20 c0       	rjmp	.+64     	; 0xc48 <fputc+0x5a>
 c08:	82 ff       	sbrs	r24, 2
 c0a:	10 c0       	rjmp	.+32     	; 0xc2c <fputc+0x3e>
 c0c:	4e 81       	ldd	r20, Y+6	; 0x06
 c0e:	5f 81       	ldd	r21, Y+7	; 0x07
 c10:	2c 81       	ldd	r18, Y+4	; 0x04
 c12:	3d 81       	ldd	r19, Y+5	; 0x05
 c14:	42 17       	cp	r20, r18
 c16:	53 07       	cpc	r21, r19
 c18:	7c f4       	brge	.+30     	; 0xc38 <fputc+0x4a>
 c1a:	e8 81       	ld	r30, Y
 c1c:	f9 81       	ldd	r31, Y+1	; 0x01
 c1e:	9f 01       	movw	r18, r30
 c20:	2f 5f       	subi	r18, 0xFF	; 255
 c22:	3f 4f       	sbci	r19, 0xFF	; 255
 c24:	39 83       	std	Y+1, r19	; 0x01
 c26:	28 83       	st	Y, r18
 c28:	10 83       	st	Z, r17
 c2a:	06 c0       	rjmp	.+12     	; 0xc38 <fputc+0x4a>
 c2c:	e8 85       	ldd	r30, Y+8	; 0x08
 c2e:	f9 85       	ldd	r31, Y+9	; 0x09
 c30:	81 2f       	mov	r24, r17
 c32:	19 95       	eicall
 c34:	89 2b       	or	r24, r25
 c36:	29 f7       	brne	.-54     	; 0xc02 <fputc+0x14>
 c38:	2e 81       	ldd	r18, Y+6	; 0x06
 c3a:	3f 81       	ldd	r19, Y+7	; 0x07
 c3c:	2f 5f       	subi	r18, 0xFF	; 255
 c3e:	3f 4f       	sbci	r19, 0xFF	; 255
 c40:	3f 83       	std	Y+7, r19	; 0x07
 c42:	2e 83       	std	Y+6, r18	; 0x06
 c44:	81 2f       	mov	r24, r17
 c46:	90 2f       	mov	r25, r16
 c48:	df 91       	pop	r29
 c4a:	cf 91       	pop	r28
 c4c:	1f 91       	pop	r17
 c4e:	0f 91       	pop	r16
 c50:	08 95       	ret

00000c52 <__ultoa_invert>:
 c52:	fa 01       	movw	r30, r20
 c54:	aa 27       	eor	r26, r26
 c56:	28 30       	cpi	r18, 0x08	; 8
 c58:	51 f1       	breq	.+84     	; 0xcae <__ultoa_invert+0x5c>
 c5a:	20 31       	cpi	r18, 0x10	; 16
 c5c:	81 f1       	breq	.+96     	; 0xcbe <__ultoa_invert+0x6c>
 c5e:	e8 94       	clt
 c60:	6f 93       	push	r22
 c62:	6e 7f       	andi	r22, 0xFE	; 254
 c64:	6e 5f       	subi	r22, 0xFE	; 254
 c66:	7f 4f       	sbci	r23, 0xFF	; 255
 c68:	8f 4f       	sbci	r24, 0xFF	; 255
 c6a:	9f 4f       	sbci	r25, 0xFF	; 255
 c6c:	af 4f       	sbci	r26, 0xFF	; 255
 c6e:	b1 e0       	ldi	r27, 0x01	; 1
 c70:	3e d0       	rcall	.+124    	; 0xcee <__ultoa_invert+0x9c>
 c72:	b4 e0       	ldi	r27, 0x04	; 4
 c74:	3c d0       	rcall	.+120    	; 0xcee <__ultoa_invert+0x9c>
 c76:	67 0f       	add	r22, r23
 c78:	78 1f       	adc	r23, r24
 c7a:	89 1f       	adc	r24, r25
 c7c:	9a 1f       	adc	r25, r26
 c7e:	a1 1d       	adc	r26, r1
 c80:	68 0f       	add	r22, r24
 c82:	79 1f       	adc	r23, r25
 c84:	8a 1f       	adc	r24, r26
 c86:	91 1d       	adc	r25, r1
 c88:	a1 1d       	adc	r26, r1
 c8a:	6a 0f       	add	r22, r26
 c8c:	71 1d       	adc	r23, r1
 c8e:	81 1d       	adc	r24, r1
 c90:	91 1d       	adc	r25, r1
 c92:	a1 1d       	adc	r26, r1
 c94:	20 d0       	rcall	.+64     	; 0xcd6 <__ultoa_invert+0x84>
 c96:	09 f4       	brne	.+2      	; 0xc9a <__ultoa_invert+0x48>
 c98:	68 94       	set
 c9a:	3f 91       	pop	r19
 c9c:	2a e0       	ldi	r18, 0x0A	; 10
 c9e:	26 9f       	mul	r18, r22
 ca0:	11 24       	eor	r1, r1
 ca2:	30 19       	sub	r19, r0
 ca4:	30 5d       	subi	r19, 0xD0	; 208
 ca6:	31 93       	st	Z+, r19
 ca8:	de f6       	brtc	.-74     	; 0xc60 <__ultoa_invert+0xe>
 caa:	cf 01       	movw	r24, r30
 cac:	08 95       	ret
 cae:	46 2f       	mov	r20, r22
 cb0:	47 70       	andi	r20, 0x07	; 7
 cb2:	40 5d       	subi	r20, 0xD0	; 208
 cb4:	41 93       	st	Z+, r20
 cb6:	b3 e0       	ldi	r27, 0x03	; 3
 cb8:	0f d0       	rcall	.+30     	; 0xcd8 <__ultoa_invert+0x86>
 cba:	c9 f7       	brne	.-14     	; 0xcae <__ultoa_invert+0x5c>
 cbc:	f6 cf       	rjmp	.-20     	; 0xcaa <__ultoa_invert+0x58>
 cbe:	46 2f       	mov	r20, r22
 cc0:	4f 70       	andi	r20, 0x0F	; 15
 cc2:	40 5d       	subi	r20, 0xD0	; 208
 cc4:	4a 33       	cpi	r20, 0x3A	; 58
 cc6:	18 f0       	brcs	.+6      	; 0xcce <__ultoa_invert+0x7c>
 cc8:	49 5d       	subi	r20, 0xD9	; 217
 cca:	31 fd       	sbrc	r19, 1
 ccc:	40 52       	subi	r20, 0x20	; 32
 cce:	41 93       	st	Z+, r20
 cd0:	02 d0       	rcall	.+4      	; 0xcd6 <__ultoa_invert+0x84>
 cd2:	a9 f7       	brne	.-22     	; 0xcbe <__ultoa_invert+0x6c>
 cd4:	ea cf       	rjmp	.-44     	; 0xcaa <__ultoa_invert+0x58>
 cd6:	b4 e0       	ldi	r27, 0x04	; 4
 cd8:	a6 95       	lsr	r26
 cda:	97 95       	ror	r25
 cdc:	87 95       	ror	r24
 cde:	77 95       	ror	r23
 ce0:	67 95       	ror	r22
 ce2:	ba 95       	dec	r27
 ce4:	c9 f7       	brne	.-14     	; 0xcd8 <__ultoa_invert+0x86>
 ce6:	00 97       	sbiw	r24, 0x00	; 0
 ce8:	61 05       	cpc	r22, r1
 cea:	71 05       	cpc	r23, r1
 cec:	08 95       	ret
 cee:	9b 01       	movw	r18, r22
 cf0:	ac 01       	movw	r20, r24
 cf2:	0a 2e       	mov	r0, r26
 cf4:	06 94       	lsr	r0
 cf6:	57 95       	ror	r21
 cf8:	47 95       	ror	r20
 cfa:	37 95       	ror	r19
 cfc:	27 95       	ror	r18
 cfe:	ba 95       	dec	r27
 d00:	c9 f7       	brne	.-14     	; 0xcf4 <__ultoa_invert+0xa2>
 d02:	62 0f       	add	r22, r18
 d04:	73 1f       	adc	r23, r19
 d06:	84 1f       	adc	r24, r20
 d08:	95 1f       	adc	r25, r21
 d0a:	a0 1d       	adc	r26, r0
 d0c:	08 95       	ret

00000d0e <_exit>:
 d0e:	f8 94       	cli

00000d10 <__stop_program>:
 d10:	ff cf       	rjmp	.-2      	; 0xd10 <__stop_program>
