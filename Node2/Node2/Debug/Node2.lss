
Node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000044  00800200  00000c50  00000ce4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c50  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800244  00800244  00000d28  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d28  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000108  00000000  00000000  00000d84  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000cb8  00000000  00000000  00000e8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006dc  00000000  00000000  00001b44  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000ea7  00000000  00000000  00002220  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000234  00000000  00000000  000030c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00009b94  00000000  00000000  000032fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000057c  00000000  00000000  0000ce90  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b8  00000000  00000000  0000d40c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000042e3  00000000  00000000  0000d4c4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e0 e5       	ldi	r30, 0x50	; 80
  fc:	fc e0       	ldi	r31, 0x0C	; 12
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 34       	cpi	r26, 0x44	; 68
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e4       	ldi	r26, 0x44	; 68
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ae 34       	cpi	r26, 0x4E	; 78
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	c0 d0       	rcall	.+384    	; 0x2a0 <main>
 120:	95 c5       	rjmp	.+2858   	; 0xc4c <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <CAN_init>:
	{
		MCP2515_WRITE(MCP_TXB0D0+i,message->data[i]);
	}
	
	MCP2515_REQUEST_TO_SEND();
}
 124:	fb d0       	rcall	.+502    	; 0x31c <SPI_Init>
 126:	96 d0       	rcall	.+300    	; 0x254 <MCP2515_RESET>
 128:	87 ea       	ldi	r24, 0xA7	; 167
 12a:	91 e6       	ldi	r25, 0x61	; 97
 12c:	01 97       	sbiw	r24, 0x01	; 1
 12e:	f1 f7       	brne	.-4      	; 0x12c <CAN_init+0x8>
 130:	00 c0       	rjmp	.+0      	; 0x132 <CAN_init+0xe>
 132:	00 00       	nop
 134:	40 e0       	ldi	r20, 0x00	; 0
 136:	60 ee       	ldi	r22, 0xE0	; 224
 138:	8f e0       	ldi	r24, 0x0F	; 15
 13a:	9e d0       	rcall	.+316    	; 0x278 <MCP2515_BIT_MODIFY>
 13c:	8e e0       	ldi	r24, 0x0E	; 14
 13e:	8f d0       	rcall	.+286    	; 0x25e <MCP2515_READ>
 140:	28 2f       	mov	r18, r24
 142:	33 27       	eor	r19, r19
 144:	27 fd       	sbrc	r18, 7
 146:	30 95       	com	r19
 148:	3f 93       	push	r19
 14a:	8f 93       	push	r24
 14c:	86 e0       	ldi	r24, 0x06	; 6
 14e:	92 e0       	ldi	r25, 0x02	; 2
 150:	9f 93       	push	r25
 152:	8f 93       	push	r24
 154:	61 d1       	rcall	.+706    	; 0x418 <printf>
 156:	41 e0       	ldi	r20, 0x01	; 1
 158:	61 e0       	ldi	r22, 0x01	; 1
 15a:	8b e2       	ldi	r24, 0x2B	; 43
 15c:	8d d0       	rcall	.+282    	; 0x278 <MCP2515_BIT_MODIFY>
 15e:	0f 90       	pop	r0
 160:	0f 90       	pop	r0
 162:	0f 90       	pop	r0
 164:	0f 90       	pop	r0
 166:	08 95       	ret

00000168 <CAN_receive>:

MSG CAN_receive()
{
 168:	8f 92       	push	r8
 16a:	9f 92       	push	r9
 16c:	af 92       	push	r10
 16e:	bf 92       	push	r11
 170:	cf 92       	push	r12
 172:	df 92       	push	r13
 174:	ef 92       	push	r14
 176:	ff 92       	push	r15
 178:	0f 93       	push	r16
 17a:	1f 93       	push	r17
 17c:	cf 93       	push	r28
 17e:	df 93       	push	r29
 180:	cd b7       	in	r28, 0x3d	; 61
 182:	de b7       	in	r29, 0x3e	; 62
 184:	2c 97       	sbiw	r28, 0x0c	; 12
 186:	0f b6       	in	r0, 0x3f	; 63
 188:	f8 94       	cli
 18a:	de bf       	out	0x3e, r29	; 62
 18c:	0f be       	out	0x3f, r0	; 63
 18e:	cd bf       	out	0x3d, r28	; 61
 190:	5c 01       	movw	r10, r24
	/*check if there is a message*/
	if(MCP2515_READ(MCP_CANINTF) & 0x01 == 0x1){
 192:	8c e2       	ldi	r24, 0x2C	; 44
 194:	64 d0       	rcall	.+200    	; 0x25e <MCP2515_READ>
 196:	80 ff       	sbrs	r24, 0
 198:	49 c0       	rjmp	.+146    	; 0x22c <CAN_receive+0xc4>
		MSG message;
		
		int ID_l = MCP2515_READ(MCP_RXB0SIDL);
 19a:	82 e6       	ldi	r24, 0x62	; 98
 19c:	60 d0       	rcall	.+192    	; 0x25e <MCP2515_READ>
 19e:	18 2f       	mov	r17, r24
		int ID_h = MCP2515_READ(MCP_RXB0SIDH);
 1a0:	81 e6       	ldi	r24, 0x61	; 97
 1a2:	5d d0       	rcall	.+186    	; 0x25e <MCP2515_READ>
{
	/*check if there is a message*/
	if(MCP2515_READ(MCP_CANINTF) & 0x01 == 0x1){
		MSG message;
		
		int ID_l = MCP2515_READ(MCP_RXB0SIDL);
 1a4:	21 2f       	mov	r18, r17
 1a6:	33 27       	eor	r19, r19
 1a8:	27 fd       	sbrc	r18, 7
 1aa:	30 95       	com	r19
		int ID_h = MCP2515_READ(MCP_RXB0SIDH);
		message.ID = ((ID_h << 3) + ((ID_l >> 5) & 0x7)) & 0xFF;
 1ac:	35 95       	asr	r19
 1ae:	27 95       	ror	r18
 1b0:	35 95       	asr	r19
 1b2:	27 95       	ror	r18
 1b4:	35 95       	asr	r19
 1b6:	27 95       	ror	r18
 1b8:	35 95       	asr	r19
 1ba:	27 95       	ror	r18
 1bc:	35 95       	asr	r19
 1be:	27 95       	ror	r18
 1c0:	27 70       	andi	r18, 0x07	; 7
 1c2:	33 27       	eor	r19, r19
 1c4:	98 e0       	ldi	r25, 0x08	; 8
 1c6:	89 02       	muls	r24, r25
 1c8:	20 0d       	add	r18, r0
 1ca:	31 1d       	adc	r19, r1
 1cc:	11 24       	eor	r1, r1
 1ce:	49 01       	movw	r8, r18
 1d0:	99 24       	eor	r9, r9
		
		int length = MCP2515_READ(MCP_RXB0DLC) & 0x0F;
 1d2:	85 e6       	ldi	r24, 0x65	; 101
 1d4:	44 d0       	rcall	.+136    	; 0x25e <MCP2515_READ>
 1d6:	8f 70       	andi	r24, 0x0F	; 15
 1d8:	c8 2e       	mov	r12, r24
 1da:	dd 24       	eor	r13, r13
 1dc:	c7 fc       	sbrc	r12, 7
 1de:	d0 94       	com	r13
 1e0:	7e 01       	movw	r14, r28
 1e2:	e5 e0       	ldi	r30, 0x05	; 5
 1e4:	ee 0e       	add	r14, r30
 1e6:	f1 1c       	adc	r15, r1
		message.length = length;
		
		for (int i=0; i < length || i < 8; i++)
 1e8:	00 e0       	ldi	r16, 0x00	; 0
 1ea:	10 e0       	ldi	r17, 0x00	; 0
 1ec:	08 c0       	rjmp	.+16     	; 0x1fe <CAN_receive+0x96>
		{
			message.data[i] = MCP2515_READ(MCP_RXB0D0+i);
 1ee:	86 e6       	ldi	r24, 0x66	; 102
 1f0:	80 0f       	add	r24, r16
 1f2:	35 d0       	rcall	.+106    	; 0x25e <MCP2515_READ>
 1f4:	f7 01       	movw	r30, r14
 1f6:	81 93       	st	Z+, r24
 1f8:	7f 01       	movw	r14, r30
		message.ID = ((ID_h << 3) + ((ID_l >> 5) & 0x7)) & 0xFF;
		
		int length = MCP2515_READ(MCP_RXB0DLC) & 0x0F;
		message.length = length;
		
		for (int i=0; i < length || i < 8; i++)
 1fa:	0f 5f       	subi	r16, 0xFF	; 255
 1fc:	1f 4f       	sbci	r17, 0xFF	; 255
 1fe:	0c 15       	cp	r16, r12
 200:	1d 05       	cpc	r17, r13
 202:	ac f3       	brlt	.-22     	; 0x1ee <CAN_receive+0x86>
 204:	08 30       	cpi	r16, 0x08	; 8
 206:	11 05       	cpc	r17, r1
 208:	94 f3       	brlt	.-28     	; 0x1ee <CAN_receive+0x86>
		{
			message.data[i] = MCP2515_READ(MCP_RXB0D0+i);
		}
		
		MCP2515_BIT_MODIFY(MCP_CANINTF,0b00000001,0b00000000);
 20a:	40 e0       	ldi	r20, 0x00	; 0
 20c:	61 e0       	ldi	r22, 0x01	; 1
 20e:	8c e2       	ldi	r24, 0x2C	; 44
 210:	33 d0       	rcall	.+102    	; 0x278 <MCP2515_BIT_MODIFY>
		
		return message;
 212:	9a 82       	std	Y+2, r9	; 0x02
 214:	89 82       	std	Y+1, r8	; 0x01
 216:	dc 82       	std	Y+4, r13	; 0x04
 218:	cb 82       	std	Y+3, r12	; 0x03
 21a:	8c e0       	ldi	r24, 0x0C	; 12
 21c:	fe 01       	movw	r30, r28
 21e:	31 96       	adiw	r30, 0x01	; 1
 220:	d5 01       	movw	r26, r10
 222:	01 90       	ld	r0, Z+
 224:	0d 92       	st	X+, r0
 226:	8a 95       	dec	r24
 228:	e1 f7       	brne	.-8      	; 0x222 <CAN_receive+0xba>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <CAN_receive+0xc4>
	}
	else return;
 22c:	c5 01       	movw	r24, r10
 22e:	2c 96       	adiw	r28, 0x0c	; 12
 230:	0f b6       	in	r0, 0x3f	; 63
 232:	f8 94       	cli
 234:	de bf       	out	0x3e, r29	; 62
 236:	0f be       	out	0x3f, r0	; 63
 238:	cd bf       	out	0x3d, r28	; 61
 23a:	df 91       	pop	r29
 23c:	cf 91       	pop	r28
 23e:	1f 91       	pop	r17
 240:	0f 91       	pop	r16
 242:	ff 90       	pop	r15
 244:	ef 90       	pop	r14
 246:	df 90       	pop	r13
 248:	cf 90       	pop	r12
 24a:	bf 90       	pop	r11
 24c:	af 90       	pop	r10
 24e:	9f 90       	pop	r9
 250:	8f 90       	pop	r8
 252:	08 95       	ret

00000254 <MCP2515_RESET>:
	SPI_on();
	SPI_write(MCP_READ_STATUS);
	char data = SPI_read();
	SPI_off();
	return data;
}
 254:	76 d0       	rcall	.+236    	; 0x342 <SPI_on>
 256:	80 ec       	ldi	r24, 0xC0	; 192
 258:	69 d0       	rcall	.+210    	; 0x32c <SPI_write>
 25a:	77 c0       	rjmp	.+238    	; 0x34a <SPI_off>
 25c:	08 95       	ret

0000025e <MCP2515_READ>:
 25e:	cf 93       	push	r28
 260:	c8 2f       	mov	r28, r24
 262:	6f d0       	rcall	.+222    	; 0x342 <SPI_on>
 264:	83 e0       	ldi	r24, 0x03	; 3
 266:	62 d0       	rcall	.+196    	; 0x32c <SPI_write>
 268:	8c 2f       	mov	r24, r28
 26a:	60 d0       	rcall	.+192    	; 0x32c <SPI_write>
 26c:	64 d0       	rcall	.+200    	; 0x336 <SPI_read>
 26e:	c8 2f       	mov	r28, r24
 270:	6c d0       	rcall	.+216    	; 0x34a <SPI_off>
 272:	8c 2f       	mov	r24, r28
 274:	cf 91       	pop	r28
 276:	08 95       	ret

00000278 <MCP2515_BIT_MODIFY>:

void MCP2515_BIT_MODIFY(uint8_t address, uint8_t mask, uint8_t data)
{
 278:	1f 93       	push	r17
 27a:	cf 93       	push	r28
 27c:	df 93       	push	r29
 27e:	18 2f       	mov	r17, r24
 280:	d6 2f       	mov	r29, r22
 282:	c4 2f       	mov	r28, r20
	SPI_on();
 284:	5e d0       	rcall	.+188    	; 0x342 <SPI_on>
	SPI_write(MCP_BITMOD);
 286:	85 e0       	ldi	r24, 0x05	; 5
 288:	51 d0       	rcall	.+162    	; 0x32c <SPI_write>
	SPI_write(address);
 28a:	81 2f       	mov	r24, r17
 28c:	4f d0       	rcall	.+158    	; 0x32c <SPI_write>
	SPI_write(mask);
 28e:	8d 2f       	mov	r24, r29
 290:	4d d0       	rcall	.+154    	; 0x32c <SPI_write>
	SPI_write(data);
 292:	8c 2f       	mov	r24, r28
 294:	4b d0       	rcall	.+150    	; 0x32c <SPI_write>
	SPI_off();	
 296:	59 d0       	rcall	.+178    	; 0x34a <SPI_off>
 298:	df 91       	pop	r29
 29a:	cf 91       	pop	r28
 29c:	1f 91       	pop	r17
 29e:	08 95       	ret

000002a0 <main>:
#define FOSC 16000000
#define BAUD 9600
#define UART_BAUD FOSC/16/BAUD-1

int main(void)
{
 2a0:	cf 93       	push	r28
 2a2:	df 93       	push	r29
 2a4:	cd b7       	in	r28, 0x3d	; 61
 2a6:	de b7       	in	r29, 0x3e	; 62
 2a8:	2c 97       	sbiw	r28, 0x0c	; 12
 2aa:	0f b6       	in	r0, 0x3f	; 63
 2ac:	f8 94       	cli
 2ae:	de bf       	out	0x3e, r29	; 62
 2b0:	0f be       	out	0x3f, r0	; 63
 2b2:	cd bf       	out	0x3d, r28	; 61
	/* Initialize UART */
	UART_Init(UART_BAUD);
 2b4:	87 e6       	ldi	r24, 0x67	; 103
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	5a d0       	rcall	.+180    	; 0x36e <UART_Init>
	printf("Reset\n");
 2ba:	81 e1       	ldi	r24, 0x11	; 17
 2bc:	92 e0       	ldi	r25, 0x02	; 2
 2be:	bd d0       	rcall	.+378    	; 0x43a <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2c0:	2f e3       	ldi	r18, 0x3F	; 63
 2c2:	8d e0       	ldi	r24, 0x0D	; 13
 2c4:	93 e0       	ldi	r25, 0x03	; 3
 2c6:	21 50       	subi	r18, 0x01	; 1
 2c8:	80 40       	sbci	r24, 0x00	; 0
 2ca:	90 40       	sbci	r25, 0x00	; 0
 2cc:	e1 f7       	brne	.-8      	; 0x2c6 <main+0x26>
 2ce:	00 c0       	rjmp	.+0      	; 0x2d0 <main+0x30>
 2d0:	00 00       	nop
	_delay_ms(1000);
	
	/* Initialize CAN */
	CAN_init();
 2d2:	28 df       	rcall	.-432    	; 0x124 <CAN_init>
	while(1){
		/*CAN_send(&test_message);
		printf("Sending: ID: %d, length: %d, data: %d\n", test_message.ID, test_message.length, test_message.data[0]);
		_delay_ms(1000);*/
		received_test = CAN_receive();
		printf("Receiving: ID: %d, length: %d, x: %i, y:%i\n", received_test.ID, received_test.length, received_test.data[0], received_test.data[1]);
 2d4:	07 e1       	ldi	r16, 0x17	; 23
 2d6:	12 e0       	ldi	r17, 0x02	; 2
	MSG received_test;
	while(1){
		/*CAN_send(&test_message);
		printf("Sending: ID: %d, length: %d, data: %d\n", test_message.ID, test_message.length, test_message.data[0]);
		_delay_ms(1000);*/
		received_test = CAN_receive();
 2d8:	ce 01       	movw	r24, r28
 2da:	01 96       	adiw	r24, 0x01	; 1
 2dc:	45 df       	rcall	.-374    	; 0x168 <CAN_receive>
		printf("Receiving: ID: %d, length: %d, x: %i, y:%i\n", received_test.ID, received_test.length, received_test.data[0], received_test.data[1]);
 2de:	2e 81       	ldd	r18, Y+6	; 0x06
 2e0:	82 2f       	mov	r24, r18
 2e2:	99 27       	eor	r25, r25
 2e4:	87 fd       	sbrc	r24, 7
 2e6:	90 95       	com	r25
 2e8:	9f 93       	push	r25
 2ea:	2f 93       	push	r18
 2ec:	2d 81       	ldd	r18, Y+5	; 0x05
 2ee:	82 2f       	mov	r24, r18
 2f0:	99 27       	eor	r25, r25
 2f2:	87 fd       	sbrc	r24, 7
 2f4:	90 95       	com	r25
 2f6:	9f 93       	push	r25
 2f8:	2f 93       	push	r18
 2fa:	8c 81       	ldd	r24, Y+4	; 0x04
 2fc:	8f 93       	push	r24
 2fe:	8b 81       	ldd	r24, Y+3	; 0x03
 300:	8f 93       	push	r24
 302:	8a 81       	ldd	r24, Y+2	; 0x02
 304:	8f 93       	push	r24
 306:	89 81       	ldd	r24, Y+1	; 0x01
 308:	8f 93       	push	r24
 30a:	1f 93       	push	r17
 30c:	0f 93       	push	r16
 30e:	84 d0       	rcall	.+264    	; 0x418 <printf>
 310:	0f b6       	in	r0, 0x3f	; 63
 312:	f8 94       	cli
 314:	de bf       	out	0x3e, r29	; 62
 316:	0f be       	out	0x3f, r0	; 63
 318:	cd bf       	out	0x3d, r28	; 61
 31a:	de cf       	rjmp	.-68     	; 0x2d8 <main+0x38>

0000031c <SPI_Init>:
#include <avr/io.h>

void SPI_Init(void)
{
	/* Set CS, MOSI and SCK output, MISO input */
	DDRB |= (1<<PB7)| (1<<PB1)|(1<<PB2);
 31c:	84 b1       	in	r24, 0x04	; 4
 31e:	86 68       	ori	r24, 0x86	; 134
 320:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1<<PB3);
 322:	23 98       	cbi	0x04, 3	; 4
	DDRB |= 1;
 324:	20 9a       	sbi	0x04, 0	; 4
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
 326:	81 e5       	ldi	r24, 0x51	; 81
 328:	8c bd       	out	0x2c, r24	; 44
 32a:	08 95       	ret

0000032c <SPI_write>:
}

void SPI_write(char cData)
{
	/* Start transmission */
	SPDR = cData;
 32c:	8e bd       	out	0x2e, r24	; 46
	/* Wait for transmission complete */
	while (!(SPSR & (1<<SPIF)))
 32e:	0d b4       	in	r0, 0x2d	; 45
 330:	07 fe       	sbrs	r0, 7
 332:	fd cf       	rjmp	.-6      	; 0x32e <SPI_write+0x2>
		;
}
 334:	08 95       	ret

00000336 <SPI_read>:

char SPI_read(void)
{
	/* Start transmission */
	SPDR = 0x00;
 336:	1e bc       	out	0x2e, r1	; 46
	/* Wait for transmission complete */
	while (!(SPSR & (1<<SPIF)))
 338:	0d b4       	in	r0, 0x2d	; 45
 33a:	07 fe       	sbrs	r0, 7
 33c:	fd cf       	rjmp	.-6      	; 0x338 <SPI_read+0x2>
		;
	return SPDR;
 33e:	8e b5       	in	r24, 0x2e	; 46
}
 340:	08 95       	ret

00000342 <SPI_on>:

void SPI_on(void)
{
	PORTB &= 0x38;
 342:	85 b1       	in	r24, 0x05	; 5
 344:	88 73       	andi	r24, 0x38	; 56
 346:	85 b9       	out	0x05, r24	; 5
 348:	08 95       	ret

0000034a <SPI_off>:
}

void SPI_off(void)
{
	PORTB |= (1 << PB7);
 34a:	2f 9a       	sbi	0x05, 7	; 5
 34c:	08 95       	ret

0000034e <UART_Transmit>:
#include <stdio.h>
#include <avr/io.h>

void UART_Transmit(unsigned char data){
	/* Wait for empty transmit buffer */
	while(!(UCSR0A&(1<<UDRE0)))
 34e:	e0 ec       	ldi	r30, 0xC0	; 192
 350:	f0 e0       	ldi	r31, 0x00	; 0
 352:	90 81       	ld	r25, Z
 354:	95 ff       	sbrs	r25, 5
 356:	fd cf       	rjmp	.-6      	; 0x352 <UART_Transmit+0x4>
		;
	/* Put data into buffer */
	UDR0 = data;
 358:	80 93 c6 00 	sts	0x00C6, r24
 35c:	08 95       	ret

0000035e <UART_Receive>:
}

unsigned char UART_Receive(void){
	/* Wait for data to be received */
	while(!(UCSR0A&(1<<RXC0)))
 35e:	e0 ec       	ldi	r30, 0xC0	; 192
 360:	f0 e0       	ldi	r31, 0x00	; 0
 362:	80 81       	ld	r24, Z
 364:	88 23       	and	r24, r24
 366:	ec f7       	brge	.-6      	; 0x362 <UART_Receive+0x4>
		;
	/* Get and return received data from buffer */
	return UDR0;
 368:	80 91 c6 00 	lds	r24, 0x00C6
}
 36c:	08 95       	ret

0000036e <UART_Init>:

void UART_Init(unsigned int ubrr){
	/* Set baud rate */
	UBRR0L = (unsigned char) ubrr;
 36e:	80 93 c4 00 	sts	0x00C4, r24
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 372:	88 e1       	ldi	r24, 0x18	; 24
 374:	80 93 c1 00 	sts	0x00C1, r24
	/* Link printf to UART transmissions */	
	fdevopen(UART_Transmit,UART_Receive);
 378:	6f ea       	ldi	r22, 0xAF	; 175
 37a:	71 e0       	ldi	r23, 0x01	; 1
 37c:	87 ea       	ldi	r24, 0xA7	; 167
 37e:	91 e0       	ldi	r25, 0x01	; 1
 380:	01 c0       	rjmp	.+2      	; 0x384 <fdevopen>
 382:	08 95       	ret

00000384 <fdevopen>:
 384:	0f 93       	push	r16
 386:	1f 93       	push	r17
 388:	cf 93       	push	r28
 38a:	df 93       	push	r29
 38c:	ec 01       	movw	r28, r24
 38e:	8b 01       	movw	r16, r22
 390:	00 97       	sbiw	r24, 0x00	; 0
 392:	31 f4       	brne	.+12     	; 0x3a0 <fdevopen+0x1c>
 394:	61 15       	cp	r22, r1
 396:	71 05       	cpc	r23, r1
 398:	19 f4       	brne	.+6      	; 0x3a0 <fdevopen+0x1c>
 39a:	80 e0       	ldi	r24, 0x00	; 0
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	37 c0       	rjmp	.+110    	; 0x40e <fdevopen+0x8a>
 3a0:	6e e0       	ldi	r22, 0x0E	; 14
 3a2:	70 e0       	ldi	r23, 0x00	; 0
 3a4:	81 e0       	ldi	r24, 0x01	; 1
 3a6:	90 e0       	ldi	r25, 0x00	; 0
 3a8:	63 d2       	rcall	.+1222   	; 0x870 <calloc>
 3aa:	fc 01       	movw	r30, r24
 3ac:	00 97       	sbiw	r24, 0x00	; 0
 3ae:	a9 f3       	breq	.-22     	; 0x39a <fdevopen+0x16>
 3b0:	80 e8       	ldi	r24, 0x80	; 128
 3b2:	83 83       	std	Z+3, r24	; 0x03
 3b4:	01 15       	cp	r16, r1
 3b6:	11 05       	cpc	r17, r1
 3b8:	71 f0       	breq	.+28     	; 0x3d6 <fdevopen+0x52>
 3ba:	13 87       	std	Z+11, r17	; 0x0b
 3bc:	02 87       	std	Z+10, r16	; 0x0a
 3be:	81 e8       	ldi	r24, 0x81	; 129
 3c0:	83 83       	std	Z+3, r24	; 0x03
 3c2:	80 91 44 02 	lds	r24, 0x0244
 3c6:	90 91 45 02 	lds	r25, 0x0245
 3ca:	89 2b       	or	r24, r25
 3cc:	21 f4       	brne	.+8      	; 0x3d6 <fdevopen+0x52>
 3ce:	f0 93 45 02 	sts	0x0245, r31
 3d2:	e0 93 44 02 	sts	0x0244, r30
 3d6:	20 97       	sbiw	r28, 0x00	; 0
 3d8:	c9 f0       	breq	.+50     	; 0x40c <fdevopen+0x88>
 3da:	d1 87       	std	Z+9, r29	; 0x09
 3dc:	c0 87       	std	Z+8, r28	; 0x08
 3de:	83 81       	ldd	r24, Z+3	; 0x03
 3e0:	82 60       	ori	r24, 0x02	; 2
 3e2:	83 83       	std	Z+3, r24	; 0x03
 3e4:	80 91 46 02 	lds	r24, 0x0246
 3e8:	90 91 47 02 	lds	r25, 0x0247
 3ec:	89 2b       	or	r24, r25
 3ee:	71 f4       	brne	.+28     	; 0x40c <fdevopen+0x88>
 3f0:	f0 93 47 02 	sts	0x0247, r31
 3f4:	e0 93 46 02 	sts	0x0246, r30
 3f8:	80 91 48 02 	lds	r24, 0x0248
 3fc:	90 91 49 02 	lds	r25, 0x0249
 400:	89 2b       	or	r24, r25
 402:	21 f4       	brne	.+8      	; 0x40c <fdevopen+0x88>
 404:	f0 93 49 02 	sts	0x0249, r31
 408:	e0 93 48 02 	sts	0x0248, r30
 40c:	cf 01       	movw	r24, r30
 40e:	df 91       	pop	r29
 410:	cf 91       	pop	r28
 412:	1f 91       	pop	r17
 414:	0f 91       	pop	r16
 416:	08 95       	ret

00000418 <printf>:
 418:	cf 93       	push	r28
 41a:	df 93       	push	r29
 41c:	cd b7       	in	r28, 0x3d	; 61
 41e:	de b7       	in	r29, 0x3e	; 62
 420:	fe 01       	movw	r30, r28
 422:	36 96       	adiw	r30, 0x06	; 6
 424:	61 91       	ld	r22, Z+
 426:	71 91       	ld	r23, Z+
 428:	af 01       	movw	r20, r30
 42a:	80 91 46 02 	lds	r24, 0x0246
 42e:	90 91 47 02 	lds	r25, 0x0247
 432:	30 d0       	rcall	.+96     	; 0x494 <vfprintf>
 434:	df 91       	pop	r29
 436:	cf 91       	pop	r28
 438:	08 95       	ret

0000043a <puts>:
 43a:	0f 93       	push	r16
 43c:	1f 93       	push	r17
 43e:	cf 93       	push	r28
 440:	df 93       	push	r29
 442:	e0 91 46 02 	lds	r30, 0x0246
 446:	f0 91 47 02 	lds	r31, 0x0247
 44a:	23 81       	ldd	r18, Z+3	; 0x03
 44c:	21 ff       	sbrs	r18, 1
 44e:	1b c0       	rjmp	.+54     	; 0x486 <puts+0x4c>
 450:	ec 01       	movw	r28, r24
 452:	00 e0       	ldi	r16, 0x00	; 0
 454:	10 e0       	ldi	r17, 0x00	; 0
 456:	89 91       	ld	r24, Y+
 458:	60 91 46 02 	lds	r22, 0x0246
 45c:	70 91 47 02 	lds	r23, 0x0247
 460:	db 01       	movw	r26, r22
 462:	18 96       	adiw	r26, 0x08	; 8
 464:	ed 91       	ld	r30, X+
 466:	fc 91       	ld	r31, X
 468:	19 97       	sbiw	r26, 0x09	; 9
 46a:	88 23       	and	r24, r24
 46c:	31 f0       	breq	.+12     	; 0x47a <puts+0x40>
 46e:	19 95       	eicall
 470:	89 2b       	or	r24, r25
 472:	89 f3       	breq	.-30     	; 0x456 <puts+0x1c>
 474:	0f ef       	ldi	r16, 0xFF	; 255
 476:	1f ef       	ldi	r17, 0xFF	; 255
 478:	ee cf       	rjmp	.-36     	; 0x456 <puts+0x1c>
 47a:	8a e0       	ldi	r24, 0x0A	; 10
 47c:	19 95       	eicall
 47e:	89 2b       	or	r24, r25
 480:	11 f4       	brne	.+4      	; 0x486 <puts+0x4c>
 482:	c8 01       	movw	r24, r16
 484:	02 c0       	rjmp	.+4      	; 0x48a <puts+0x50>
 486:	8f ef       	ldi	r24, 0xFF	; 255
 488:	9f ef       	ldi	r25, 0xFF	; 255
 48a:	df 91       	pop	r29
 48c:	cf 91       	pop	r28
 48e:	1f 91       	pop	r17
 490:	0f 91       	pop	r16
 492:	08 95       	ret

00000494 <vfprintf>:
 494:	2f 92       	push	r2
 496:	3f 92       	push	r3
 498:	4f 92       	push	r4
 49a:	5f 92       	push	r5
 49c:	6f 92       	push	r6
 49e:	7f 92       	push	r7
 4a0:	8f 92       	push	r8
 4a2:	9f 92       	push	r9
 4a4:	af 92       	push	r10
 4a6:	bf 92       	push	r11
 4a8:	cf 92       	push	r12
 4aa:	df 92       	push	r13
 4ac:	ef 92       	push	r14
 4ae:	ff 92       	push	r15
 4b0:	0f 93       	push	r16
 4b2:	1f 93       	push	r17
 4b4:	cf 93       	push	r28
 4b6:	df 93       	push	r29
 4b8:	cd b7       	in	r28, 0x3d	; 61
 4ba:	de b7       	in	r29, 0x3e	; 62
 4bc:	2c 97       	sbiw	r28, 0x0c	; 12
 4be:	0f b6       	in	r0, 0x3f	; 63
 4c0:	f8 94       	cli
 4c2:	de bf       	out	0x3e, r29	; 62
 4c4:	0f be       	out	0x3f, r0	; 63
 4c6:	cd bf       	out	0x3d, r28	; 61
 4c8:	7c 01       	movw	r14, r24
 4ca:	6b 01       	movw	r12, r22
 4cc:	8a 01       	movw	r16, r20
 4ce:	fc 01       	movw	r30, r24
 4d0:	17 82       	std	Z+7, r1	; 0x07
 4d2:	16 82       	std	Z+6, r1	; 0x06
 4d4:	83 81       	ldd	r24, Z+3	; 0x03
 4d6:	81 ff       	sbrs	r24, 1
 4d8:	b0 c1       	rjmp	.+864    	; 0x83a <vfprintf+0x3a6>
 4da:	ce 01       	movw	r24, r28
 4dc:	01 96       	adiw	r24, 0x01	; 1
 4de:	4c 01       	movw	r8, r24
 4e0:	f7 01       	movw	r30, r14
 4e2:	93 81       	ldd	r25, Z+3	; 0x03
 4e4:	f6 01       	movw	r30, r12
 4e6:	93 fd       	sbrc	r25, 3
 4e8:	85 91       	lpm	r24, Z+
 4ea:	93 ff       	sbrs	r25, 3
 4ec:	81 91       	ld	r24, Z+
 4ee:	6f 01       	movw	r12, r30
 4f0:	88 23       	and	r24, r24
 4f2:	09 f4       	brne	.+2      	; 0x4f6 <vfprintf+0x62>
 4f4:	9e c1       	rjmp	.+828    	; 0x832 <vfprintf+0x39e>
 4f6:	85 32       	cpi	r24, 0x25	; 37
 4f8:	39 f4       	brne	.+14     	; 0x508 <vfprintf+0x74>
 4fa:	93 fd       	sbrc	r25, 3
 4fc:	85 91       	lpm	r24, Z+
 4fe:	93 ff       	sbrs	r25, 3
 500:	81 91       	ld	r24, Z+
 502:	6f 01       	movw	r12, r30
 504:	85 32       	cpi	r24, 0x25	; 37
 506:	21 f4       	brne	.+8      	; 0x510 <vfprintf+0x7c>
 508:	b7 01       	movw	r22, r14
 50a:	90 e0       	ldi	r25, 0x00	; 0
 50c:	0f d3       	rcall	.+1566   	; 0xb2c <fputc>
 50e:	e8 cf       	rjmp	.-48     	; 0x4e0 <vfprintf+0x4c>
 510:	51 2c       	mov	r5, r1
 512:	31 2c       	mov	r3, r1
 514:	20 e0       	ldi	r18, 0x00	; 0
 516:	20 32       	cpi	r18, 0x20	; 32
 518:	a0 f4       	brcc	.+40     	; 0x542 <vfprintf+0xae>
 51a:	8b 32       	cpi	r24, 0x2B	; 43
 51c:	69 f0       	breq	.+26     	; 0x538 <vfprintf+0xa4>
 51e:	30 f4       	brcc	.+12     	; 0x52c <vfprintf+0x98>
 520:	80 32       	cpi	r24, 0x20	; 32
 522:	59 f0       	breq	.+22     	; 0x53a <vfprintf+0xa6>
 524:	83 32       	cpi	r24, 0x23	; 35
 526:	69 f4       	brne	.+26     	; 0x542 <vfprintf+0xae>
 528:	20 61       	ori	r18, 0x10	; 16
 52a:	2c c0       	rjmp	.+88     	; 0x584 <vfprintf+0xf0>
 52c:	8d 32       	cpi	r24, 0x2D	; 45
 52e:	39 f0       	breq	.+14     	; 0x53e <vfprintf+0xaa>
 530:	80 33       	cpi	r24, 0x30	; 48
 532:	39 f4       	brne	.+14     	; 0x542 <vfprintf+0xae>
 534:	21 60       	ori	r18, 0x01	; 1
 536:	26 c0       	rjmp	.+76     	; 0x584 <vfprintf+0xf0>
 538:	22 60       	ori	r18, 0x02	; 2
 53a:	24 60       	ori	r18, 0x04	; 4
 53c:	23 c0       	rjmp	.+70     	; 0x584 <vfprintf+0xf0>
 53e:	28 60       	ori	r18, 0x08	; 8
 540:	21 c0       	rjmp	.+66     	; 0x584 <vfprintf+0xf0>
 542:	27 fd       	sbrc	r18, 7
 544:	27 c0       	rjmp	.+78     	; 0x594 <vfprintf+0x100>
 546:	30 ed       	ldi	r19, 0xD0	; 208
 548:	38 0f       	add	r19, r24
 54a:	3a 30       	cpi	r19, 0x0A	; 10
 54c:	78 f4       	brcc	.+30     	; 0x56c <vfprintf+0xd8>
 54e:	26 ff       	sbrs	r18, 6
 550:	06 c0       	rjmp	.+12     	; 0x55e <vfprintf+0xca>
 552:	fa e0       	ldi	r31, 0x0A	; 10
 554:	5f 9e       	mul	r5, r31
 556:	30 0d       	add	r19, r0
 558:	11 24       	eor	r1, r1
 55a:	53 2e       	mov	r5, r19
 55c:	13 c0       	rjmp	.+38     	; 0x584 <vfprintf+0xf0>
 55e:	8a e0       	ldi	r24, 0x0A	; 10
 560:	38 9e       	mul	r3, r24
 562:	30 0d       	add	r19, r0
 564:	11 24       	eor	r1, r1
 566:	33 2e       	mov	r3, r19
 568:	20 62       	ori	r18, 0x20	; 32
 56a:	0c c0       	rjmp	.+24     	; 0x584 <vfprintf+0xf0>
 56c:	8e 32       	cpi	r24, 0x2E	; 46
 56e:	21 f4       	brne	.+8      	; 0x578 <vfprintf+0xe4>
 570:	26 fd       	sbrc	r18, 6
 572:	5f c1       	rjmp	.+702    	; 0x832 <vfprintf+0x39e>
 574:	20 64       	ori	r18, 0x40	; 64
 576:	06 c0       	rjmp	.+12     	; 0x584 <vfprintf+0xf0>
 578:	8c 36       	cpi	r24, 0x6C	; 108
 57a:	11 f4       	brne	.+4      	; 0x580 <vfprintf+0xec>
 57c:	20 68       	ori	r18, 0x80	; 128
 57e:	02 c0       	rjmp	.+4      	; 0x584 <vfprintf+0xf0>
 580:	88 36       	cpi	r24, 0x68	; 104
 582:	41 f4       	brne	.+16     	; 0x594 <vfprintf+0x100>
 584:	f6 01       	movw	r30, r12
 586:	93 fd       	sbrc	r25, 3
 588:	85 91       	lpm	r24, Z+
 58a:	93 ff       	sbrs	r25, 3
 58c:	81 91       	ld	r24, Z+
 58e:	6f 01       	movw	r12, r30
 590:	81 11       	cpse	r24, r1
 592:	c1 cf       	rjmp	.-126    	; 0x516 <vfprintf+0x82>
 594:	98 2f       	mov	r25, r24
 596:	9f 7d       	andi	r25, 0xDF	; 223
 598:	95 54       	subi	r25, 0x45	; 69
 59a:	93 30       	cpi	r25, 0x03	; 3
 59c:	28 f4       	brcc	.+10     	; 0x5a8 <vfprintf+0x114>
 59e:	0c 5f       	subi	r16, 0xFC	; 252
 5a0:	1f 4f       	sbci	r17, 0xFF	; 255
 5a2:	ff e3       	ldi	r31, 0x3F	; 63
 5a4:	f9 83       	std	Y+1, r31	; 0x01
 5a6:	0d c0       	rjmp	.+26     	; 0x5c2 <vfprintf+0x12e>
 5a8:	83 36       	cpi	r24, 0x63	; 99
 5aa:	31 f0       	breq	.+12     	; 0x5b8 <vfprintf+0x124>
 5ac:	83 37       	cpi	r24, 0x73	; 115
 5ae:	71 f0       	breq	.+28     	; 0x5cc <vfprintf+0x138>
 5b0:	83 35       	cpi	r24, 0x53	; 83
 5b2:	09 f0       	breq	.+2      	; 0x5b6 <vfprintf+0x122>
 5b4:	57 c0       	rjmp	.+174    	; 0x664 <vfprintf+0x1d0>
 5b6:	21 c0       	rjmp	.+66     	; 0x5fa <vfprintf+0x166>
 5b8:	f8 01       	movw	r30, r16
 5ba:	80 81       	ld	r24, Z
 5bc:	89 83       	std	Y+1, r24	; 0x01
 5be:	0e 5f       	subi	r16, 0xFE	; 254
 5c0:	1f 4f       	sbci	r17, 0xFF	; 255
 5c2:	44 24       	eor	r4, r4
 5c4:	43 94       	inc	r4
 5c6:	51 2c       	mov	r5, r1
 5c8:	54 01       	movw	r10, r8
 5ca:	14 c0       	rjmp	.+40     	; 0x5f4 <vfprintf+0x160>
 5cc:	38 01       	movw	r6, r16
 5ce:	f2 e0       	ldi	r31, 0x02	; 2
 5d0:	6f 0e       	add	r6, r31
 5d2:	71 1c       	adc	r7, r1
 5d4:	f8 01       	movw	r30, r16
 5d6:	a0 80       	ld	r10, Z
 5d8:	b1 80       	ldd	r11, Z+1	; 0x01
 5da:	26 ff       	sbrs	r18, 6
 5dc:	03 c0       	rjmp	.+6      	; 0x5e4 <vfprintf+0x150>
 5de:	65 2d       	mov	r22, r5
 5e0:	70 e0       	ldi	r23, 0x00	; 0
 5e2:	02 c0       	rjmp	.+4      	; 0x5e8 <vfprintf+0x154>
 5e4:	6f ef       	ldi	r22, 0xFF	; 255
 5e6:	7f ef       	ldi	r23, 0xFF	; 255
 5e8:	c5 01       	movw	r24, r10
 5ea:	2c 87       	std	Y+12, r18	; 0x0c
 5ec:	94 d2       	rcall	.+1320   	; 0xb16 <strnlen>
 5ee:	2c 01       	movw	r4, r24
 5f0:	83 01       	movw	r16, r6
 5f2:	2c 85       	ldd	r18, Y+12	; 0x0c
 5f4:	2f 77       	andi	r18, 0x7F	; 127
 5f6:	22 2e       	mov	r2, r18
 5f8:	16 c0       	rjmp	.+44     	; 0x626 <vfprintf+0x192>
 5fa:	38 01       	movw	r6, r16
 5fc:	f2 e0       	ldi	r31, 0x02	; 2
 5fe:	6f 0e       	add	r6, r31
 600:	71 1c       	adc	r7, r1
 602:	f8 01       	movw	r30, r16
 604:	a0 80       	ld	r10, Z
 606:	b1 80       	ldd	r11, Z+1	; 0x01
 608:	26 ff       	sbrs	r18, 6
 60a:	03 c0       	rjmp	.+6      	; 0x612 <vfprintf+0x17e>
 60c:	65 2d       	mov	r22, r5
 60e:	70 e0       	ldi	r23, 0x00	; 0
 610:	02 c0       	rjmp	.+4      	; 0x616 <vfprintf+0x182>
 612:	6f ef       	ldi	r22, 0xFF	; 255
 614:	7f ef       	ldi	r23, 0xFF	; 255
 616:	c5 01       	movw	r24, r10
 618:	2c 87       	std	Y+12, r18	; 0x0c
 61a:	6b d2       	rcall	.+1238   	; 0xaf2 <strnlen_P>
 61c:	2c 01       	movw	r4, r24
 61e:	2c 85       	ldd	r18, Y+12	; 0x0c
 620:	20 68       	ori	r18, 0x80	; 128
 622:	22 2e       	mov	r2, r18
 624:	83 01       	movw	r16, r6
 626:	23 fc       	sbrc	r2, 3
 628:	19 c0       	rjmp	.+50     	; 0x65c <vfprintf+0x1c8>
 62a:	83 2d       	mov	r24, r3
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	48 16       	cp	r4, r24
 630:	59 06       	cpc	r5, r25
 632:	a0 f4       	brcc	.+40     	; 0x65c <vfprintf+0x1c8>
 634:	b7 01       	movw	r22, r14
 636:	80 e2       	ldi	r24, 0x20	; 32
 638:	90 e0       	ldi	r25, 0x00	; 0
 63a:	78 d2       	rcall	.+1264   	; 0xb2c <fputc>
 63c:	3a 94       	dec	r3
 63e:	f5 cf       	rjmp	.-22     	; 0x62a <vfprintf+0x196>
 640:	f5 01       	movw	r30, r10
 642:	27 fc       	sbrc	r2, 7
 644:	85 91       	lpm	r24, Z+
 646:	27 fe       	sbrs	r2, 7
 648:	81 91       	ld	r24, Z+
 64a:	5f 01       	movw	r10, r30
 64c:	b7 01       	movw	r22, r14
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	6d d2       	rcall	.+1242   	; 0xb2c <fputc>
 652:	31 10       	cpse	r3, r1
 654:	3a 94       	dec	r3
 656:	f1 e0       	ldi	r31, 0x01	; 1
 658:	4f 1a       	sub	r4, r31
 65a:	51 08       	sbc	r5, r1
 65c:	41 14       	cp	r4, r1
 65e:	51 04       	cpc	r5, r1
 660:	79 f7       	brne	.-34     	; 0x640 <vfprintf+0x1ac>
 662:	de c0       	rjmp	.+444    	; 0x820 <vfprintf+0x38c>
 664:	84 36       	cpi	r24, 0x64	; 100
 666:	11 f0       	breq	.+4      	; 0x66c <vfprintf+0x1d8>
 668:	89 36       	cpi	r24, 0x69	; 105
 66a:	31 f5       	brne	.+76     	; 0x6b8 <vfprintf+0x224>
 66c:	f8 01       	movw	r30, r16
 66e:	27 ff       	sbrs	r18, 7
 670:	07 c0       	rjmp	.+14     	; 0x680 <vfprintf+0x1ec>
 672:	60 81       	ld	r22, Z
 674:	71 81       	ldd	r23, Z+1	; 0x01
 676:	82 81       	ldd	r24, Z+2	; 0x02
 678:	93 81       	ldd	r25, Z+3	; 0x03
 67a:	0c 5f       	subi	r16, 0xFC	; 252
 67c:	1f 4f       	sbci	r17, 0xFF	; 255
 67e:	08 c0       	rjmp	.+16     	; 0x690 <vfprintf+0x1fc>
 680:	60 81       	ld	r22, Z
 682:	71 81       	ldd	r23, Z+1	; 0x01
 684:	88 27       	eor	r24, r24
 686:	77 fd       	sbrc	r23, 7
 688:	80 95       	com	r24
 68a:	98 2f       	mov	r25, r24
 68c:	0e 5f       	subi	r16, 0xFE	; 254
 68e:	1f 4f       	sbci	r17, 0xFF	; 255
 690:	2f 76       	andi	r18, 0x6F	; 111
 692:	b2 2e       	mov	r11, r18
 694:	97 ff       	sbrs	r25, 7
 696:	09 c0       	rjmp	.+18     	; 0x6aa <vfprintf+0x216>
 698:	90 95       	com	r25
 69a:	80 95       	com	r24
 69c:	70 95       	com	r23
 69e:	61 95       	neg	r22
 6a0:	7f 4f       	sbci	r23, 0xFF	; 255
 6a2:	8f 4f       	sbci	r24, 0xFF	; 255
 6a4:	9f 4f       	sbci	r25, 0xFF	; 255
 6a6:	20 68       	ori	r18, 0x80	; 128
 6a8:	b2 2e       	mov	r11, r18
 6aa:	2a e0       	ldi	r18, 0x0A	; 10
 6ac:	30 e0       	ldi	r19, 0x00	; 0
 6ae:	a4 01       	movw	r20, r8
 6b0:	6f d2       	rcall	.+1246   	; 0xb90 <__ultoa_invert>
 6b2:	a8 2e       	mov	r10, r24
 6b4:	a8 18       	sub	r10, r8
 6b6:	43 c0       	rjmp	.+134    	; 0x73e <vfprintf+0x2aa>
 6b8:	85 37       	cpi	r24, 0x75	; 117
 6ba:	29 f4       	brne	.+10     	; 0x6c6 <vfprintf+0x232>
 6bc:	2f 7e       	andi	r18, 0xEF	; 239
 6be:	b2 2e       	mov	r11, r18
 6c0:	2a e0       	ldi	r18, 0x0A	; 10
 6c2:	30 e0       	ldi	r19, 0x00	; 0
 6c4:	25 c0       	rjmp	.+74     	; 0x710 <vfprintf+0x27c>
 6c6:	f2 2f       	mov	r31, r18
 6c8:	f9 7f       	andi	r31, 0xF9	; 249
 6ca:	bf 2e       	mov	r11, r31
 6cc:	8f 36       	cpi	r24, 0x6F	; 111
 6ce:	c1 f0       	breq	.+48     	; 0x700 <vfprintf+0x26c>
 6d0:	18 f4       	brcc	.+6      	; 0x6d8 <vfprintf+0x244>
 6d2:	88 35       	cpi	r24, 0x58	; 88
 6d4:	79 f0       	breq	.+30     	; 0x6f4 <vfprintf+0x260>
 6d6:	ad c0       	rjmp	.+346    	; 0x832 <vfprintf+0x39e>
 6d8:	80 37       	cpi	r24, 0x70	; 112
 6da:	19 f0       	breq	.+6      	; 0x6e2 <vfprintf+0x24e>
 6dc:	88 37       	cpi	r24, 0x78	; 120
 6de:	21 f0       	breq	.+8      	; 0x6e8 <vfprintf+0x254>
 6e0:	a8 c0       	rjmp	.+336    	; 0x832 <vfprintf+0x39e>
 6e2:	2f 2f       	mov	r18, r31
 6e4:	20 61       	ori	r18, 0x10	; 16
 6e6:	b2 2e       	mov	r11, r18
 6e8:	b4 fe       	sbrs	r11, 4
 6ea:	0d c0       	rjmp	.+26     	; 0x706 <vfprintf+0x272>
 6ec:	8b 2d       	mov	r24, r11
 6ee:	84 60       	ori	r24, 0x04	; 4
 6f0:	b8 2e       	mov	r11, r24
 6f2:	09 c0       	rjmp	.+18     	; 0x706 <vfprintf+0x272>
 6f4:	24 ff       	sbrs	r18, 4
 6f6:	0a c0       	rjmp	.+20     	; 0x70c <vfprintf+0x278>
 6f8:	9f 2f       	mov	r25, r31
 6fa:	96 60       	ori	r25, 0x06	; 6
 6fc:	b9 2e       	mov	r11, r25
 6fe:	06 c0       	rjmp	.+12     	; 0x70c <vfprintf+0x278>
 700:	28 e0       	ldi	r18, 0x08	; 8
 702:	30 e0       	ldi	r19, 0x00	; 0
 704:	05 c0       	rjmp	.+10     	; 0x710 <vfprintf+0x27c>
 706:	20 e1       	ldi	r18, 0x10	; 16
 708:	30 e0       	ldi	r19, 0x00	; 0
 70a:	02 c0       	rjmp	.+4      	; 0x710 <vfprintf+0x27c>
 70c:	20 e1       	ldi	r18, 0x10	; 16
 70e:	32 e0       	ldi	r19, 0x02	; 2
 710:	f8 01       	movw	r30, r16
 712:	b7 fe       	sbrs	r11, 7
 714:	07 c0       	rjmp	.+14     	; 0x724 <vfprintf+0x290>
 716:	60 81       	ld	r22, Z
 718:	71 81       	ldd	r23, Z+1	; 0x01
 71a:	82 81       	ldd	r24, Z+2	; 0x02
 71c:	93 81       	ldd	r25, Z+3	; 0x03
 71e:	0c 5f       	subi	r16, 0xFC	; 252
 720:	1f 4f       	sbci	r17, 0xFF	; 255
 722:	06 c0       	rjmp	.+12     	; 0x730 <vfprintf+0x29c>
 724:	60 81       	ld	r22, Z
 726:	71 81       	ldd	r23, Z+1	; 0x01
 728:	80 e0       	ldi	r24, 0x00	; 0
 72a:	90 e0       	ldi	r25, 0x00	; 0
 72c:	0e 5f       	subi	r16, 0xFE	; 254
 72e:	1f 4f       	sbci	r17, 0xFF	; 255
 730:	a4 01       	movw	r20, r8
 732:	2e d2       	rcall	.+1116   	; 0xb90 <__ultoa_invert>
 734:	a8 2e       	mov	r10, r24
 736:	a8 18       	sub	r10, r8
 738:	fb 2d       	mov	r31, r11
 73a:	ff 77       	andi	r31, 0x7F	; 127
 73c:	bf 2e       	mov	r11, r31
 73e:	b6 fe       	sbrs	r11, 6
 740:	0b c0       	rjmp	.+22     	; 0x758 <vfprintf+0x2c4>
 742:	2b 2d       	mov	r18, r11
 744:	2e 7f       	andi	r18, 0xFE	; 254
 746:	a5 14       	cp	r10, r5
 748:	50 f4       	brcc	.+20     	; 0x75e <vfprintf+0x2ca>
 74a:	b4 fe       	sbrs	r11, 4
 74c:	0a c0       	rjmp	.+20     	; 0x762 <vfprintf+0x2ce>
 74e:	b2 fc       	sbrc	r11, 2
 750:	08 c0       	rjmp	.+16     	; 0x762 <vfprintf+0x2ce>
 752:	2b 2d       	mov	r18, r11
 754:	2e 7e       	andi	r18, 0xEE	; 238
 756:	05 c0       	rjmp	.+10     	; 0x762 <vfprintf+0x2ce>
 758:	7a 2c       	mov	r7, r10
 75a:	2b 2d       	mov	r18, r11
 75c:	03 c0       	rjmp	.+6      	; 0x764 <vfprintf+0x2d0>
 75e:	7a 2c       	mov	r7, r10
 760:	01 c0       	rjmp	.+2      	; 0x764 <vfprintf+0x2d0>
 762:	75 2c       	mov	r7, r5
 764:	24 ff       	sbrs	r18, 4
 766:	0d c0       	rjmp	.+26     	; 0x782 <vfprintf+0x2ee>
 768:	fe 01       	movw	r30, r28
 76a:	ea 0d       	add	r30, r10
 76c:	f1 1d       	adc	r31, r1
 76e:	80 81       	ld	r24, Z
 770:	80 33       	cpi	r24, 0x30	; 48
 772:	11 f4       	brne	.+4      	; 0x778 <vfprintf+0x2e4>
 774:	29 7e       	andi	r18, 0xE9	; 233
 776:	09 c0       	rjmp	.+18     	; 0x78a <vfprintf+0x2f6>
 778:	22 ff       	sbrs	r18, 2
 77a:	06 c0       	rjmp	.+12     	; 0x788 <vfprintf+0x2f4>
 77c:	73 94       	inc	r7
 77e:	73 94       	inc	r7
 780:	04 c0       	rjmp	.+8      	; 0x78a <vfprintf+0x2f6>
 782:	82 2f       	mov	r24, r18
 784:	86 78       	andi	r24, 0x86	; 134
 786:	09 f0       	breq	.+2      	; 0x78a <vfprintf+0x2f6>
 788:	73 94       	inc	r7
 78a:	23 fd       	sbrc	r18, 3
 78c:	12 c0       	rjmp	.+36     	; 0x7b2 <vfprintf+0x31e>
 78e:	20 ff       	sbrs	r18, 0
 790:	06 c0       	rjmp	.+12     	; 0x79e <vfprintf+0x30a>
 792:	5a 2c       	mov	r5, r10
 794:	73 14       	cp	r7, r3
 796:	18 f4       	brcc	.+6      	; 0x79e <vfprintf+0x30a>
 798:	53 0c       	add	r5, r3
 79a:	57 18       	sub	r5, r7
 79c:	73 2c       	mov	r7, r3
 79e:	73 14       	cp	r7, r3
 7a0:	60 f4       	brcc	.+24     	; 0x7ba <vfprintf+0x326>
 7a2:	b7 01       	movw	r22, r14
 7a4:	80 e2       	ldi	r24, 0x20	; 32
 7a6:	90 e0       	ldi	r25, 0x00	; 0
 7a8:	2c 87       	std	Y+12, r18	; 0x0c
 7aa:	c0 d1       	rcall	.+896    	; 0xb2c <fputc>
 7ac:	73 94       	inc	r7
 7ae:	2c 85       	ldd	r18, Y+12	; 0x0c
 7b0:	f6 cf       	rjmp	.-20     	; 0x79e <vfprintf+0x30a>
 7b2:	73 14       	cp	r7, r3
 7b4:	10 f4       	brcc	.+4      	; 0x7ba <vfprintf+0x326>
 7b6:	37 18       	sub	r3, r7
 7b8:	01 c0       	rjmp	.+2      	; 0x7bc <vfprintf+0x328>
 7ba:	31 2c       	mov	r3, r1
 7bc:	24 ff       	sbrs	r18, 4
 7be:	11 c0       	rjmp	.+34     	; 0x7e2 <vfprintf+0x34e>
 7c0:	b7 01       	movw	r22, r14
 7c2:	80 e3       	ldi	r24, 0x30	; 48
 7c4:	90 e0       	ldi	r25, 0x00	; 0
 7c6:	2c 87       	std	Y+12, r18	; 0x0c
 7c8:	b1 d1       	rcall	.+866    	; 0xb2c <fputc>
 7ca:	2c 85       	ldd	r18, Y+12	; 0x0c
 7cc:	22 ff       	sbrs	r18, 2
 7ce:	16 c0       	rjmp	.+44     	; 0x7fc <vfprintf+0x368>
 7d0:	21 ff       	sbrs	r18, 1
 7d2:	03 c0       	rjmp	.+6      	; 0x7da <vfprintf+0x346>
 7d4:	88 e5       	ldi	r24, 0x58	; 88
 7d6:	90 e0       	ldi	r25, 0x00	; 0
 7d8:	02 c0       	rjmp	.+4      	; 0x7de <vfprintf+0x34a>
 7da:	88 e7       	ldi	r24, 0x78	; 120
 7dc:	90 e0       	ldi	r25, 0x00	; 0
 7de:	b7 01       	movw	r22, r14
 7e0:	0c c0       	rjmp	.+24     	; 0x7fa <vfprintf+0x366>
 7e2:	82 2f       	mov	r24, r18
 7e4:	86 78       	andi	r24, 0x86	; 134
 7e6:	51 f0       	breq	.+20     	; 0x7fc <vfprintf+0x368>
 7e8:	21 fd       	sbrc	r18, 1
 7ea:	02 c0       	rjmp	.+4      	; 0x7f0 <vfprintf+0x35c>
 7ec:	80 e2       	ldi	r24, 0x20	; 32
 7ee:	01 c0       	rjmp	.+2      	; 0x7f2 <vfprintf+0x35e>
 7f0:	8b e2       	ldi	r24, 0x2B	; 43
 7f2:	27 fd       	sbrc	r18, 7
 7f4:	8d e2       	ldi	r24, 0x2D	; 45
 7f6:	b7 01       	movw	r22, r14
 7f8:	90 e0       	ldi	r25, 0x00	; 0
 7fa:	98 d1       	rcall	.+816    	; 0xb2c <fputc>
 7fc:	a5 14       	cp	r10, r5
 7fe:	30 f4       	brcc	.+12     	; 0x80c <vfprintf+0x378>
 800:	b7 01       	movw	r22, r14
 802:	80 e3       	ldi	r24, 0x30	; 48
 804:	90 e0       	ldi	r25, 0x00	; 0
 806:	92 d1       	rcall	.+804    	; 0xb2c <fputc>
 808:	5a 94       	dec	r5
 80a:	f8 cf       	rjmp	.-16     	; 0x7fc <vfprintf+0x368>
 80c:	aa 94       	dec	r10
 80e:	f4 01       	movw	r30, r8
 810:	ea 0d       	add	r30, r10
 812:	f1 1d       	adc	r31, r1
 814:	80 81       	ld	r24, Z
 816:	b7 01       	movw	r22, r14
 818:	90 e0       	ldi	r25, 0x00	; 0
 81a:	88 d1       	rcall	.+784    	; 0xb2c <fputc>
 81c:	a1 10       	cpse	r10, r1
 81e:	f6 cf       	rjmp	.-20     	; 0x80c <vfprintf+0x378>
 820:	33 20       	and	r3, r3
 822:	09 f4       	brne	.+2      	; 0x826 <vfprintf+0x392>
 824:	5d ce       	rjmp	.-838    	; 0x4e0 <vfprintf+0x4c>
 826:	b7 01       	movw	r22, r14
 828:	80 e2       	ldi	r24, 0x20	; 32
 82a:	90 e0       	ldi	r25, 0x00	; 0
 82c:	7f d1       	rcall	.+766    	; 0xb2c <fputc>
 82e:	3a 94       	dec	r3
 830:	f7 cf       	rjmp	.-18     	; 0x820 <vfprintf+0x38c>
 832:	f7 01       	movw	r30, r14
 834:	86 81       	ldd	r24, Z+6	; 0x06
 836:	97 81       	ldd	r25, Z+7	; 0x07
 838:	02 c0       	rjmp	.+4      	; 0x83e <vfprintf+0x3aa>
 83a:	8f ef       	ldi	r24, 0xFF	; 255
 83c:	9f ef       	ldi	r25, 0xFF	; 255
 83e:	2c 96       	adiw	r28, 0x0c	; 12
 840:	0f b6       	in	r0, 0x3f	; 63
 842:	f8 94       	cli
 844:	de bf       	out	0x3e, r29	; 62
 846:	0f be       	out	0x3f, r0	; 63
 848:	cd bf       	out	0x3d, r28	; 61
 84a:	df 91       	pop	r29
 84c:	cf 91       	pop	r28
 84e:	1f 91       	pop	r17
 850:	0f 91       	pop	r16
 852:	ff 90       	pop	r15
 854:	ef 90       	pop	r14
 856:	df 90       	pop	r13
 858:	cf 90       	pop	r12
 85a:	bf 90       	pop	r11
 85c:	af 90       	pop	r10
 85e:	9f 90       	pop	r9
 860:	8f 90       	pop	r8
 862:	7f 90       	pop	r7
 864:	6f 90       	pop	r6
 866:	5f 90       	pop	r5
 868:	4f 90       	pop	r4
 86a:	3f 90       	pop	r3
 86c:	2f 90       	pop	r2
 86e:	08 95       	ret

00000870 <calloc>:
 870:	0f 93       	push	r16
 872:	1f 93       	push	r17
 874:	cf 93       	push	r28
 876:	df 93       	push	r29
 878:	86 9f       	mul	r24, r22
 87a:	80 01       	movw	r16, r0
 87c:	87 9f       	mul	r24, r23
 87e:	10 0d       	add	r17, r0
 880:	96 9f       	mul	r25, r22
 882:	10 0d       	add	r17, r0
 884:	11 24       	eor	r1, r1
 886:	c8 01       	movw	r24, r16
 888:	0d d0       	rcall	.+26     	; 0x8a4 <malloc>
 88a:	ec 01       	movw	r28, r24
 88c:	00 97       	sbiw	r24, 0x00	; 0
 88e:	21 f0       	breq	.+8      	; 0x898 <calloc+0x28>
 890:	a8 01       	movw	r20, r16
 892:	60 e0       	ldi	r22, 0x00	; 0
 894:	70 e0       	ldi	r23, 0x00	; 0
 896:	38 d1       	rcall	.+624    	; 0xb08 <memset>
 898:	ce 01       	movw	r24, r28
 89a:	df 91       	pop	r29
 89c:	cf 91       	pop	r28
 89e:	1f 91       	pop	r17
 8a0:	0f 91       	pop	r16
 8a2:	08 95       	ret

000008a4 <malloc>:
 8a4:	cf 93       	push	r28
 8a6:	df 93       	push	r29
 8a8:	82 30       	cpi	r24, 0x02	; 2
 8aa:	91 05       	cpc	r25, r1
 8ac:	10 f4       	brcc	.+4      	; 0x8b2 <malloc+0xe>
 8ae:	82 e0       	ldi	r24, 0x02	; 2
 8b0:	90 e0       	ldi	r25, 0x00	; 0
 8b2:	e0 91 4c 02 	lds	r30, 0x024C
 8b6:	f0 91 4d 02 	lds	r31, 0x024D
 8ba:	20 e0       	ldi	r18, 0x00	; 0
 8bc:	30 e0       	ldi	r19, 0x00	; 0
 8be:	a0 e0       	ldi	r26, 0x00	; 0
 8c0:	b0 e0       	ldi	r27, 0x00	; 0
 8c2:	30 97       	sbiw	r30, 0x00	; 0
 8c4:	39 f1       	breq	.+78     	; 0x914 <malloc+0x70>
 8c6:	40 81       	ld	r20, Z
 8c8:	51 81       	ldd	r21, Z+1	; 0x01
 8ca:	48 17       	cp	r20, r24
 8cc:	59 07       	cpc	r21, r25
 8ce:	b8 f0       	brcs	.+46     	; 0x8fe <malloc+0x5a>
 8d0:	48 17       	cp	r20, r24
 8d2:	59 07       	cpc	r21, r25
 8d4:	71 f4       	brne	.+28     	; 0x8f2 <malloc+0x4e>
 8d6:	82 81       	ldd	r24, Z+2	; 0x02
 8d8:	93 81       	ldd	r25, Z+3	; 0x03
 8da:	10 97       	sbiw	r26, 0x00	; 0
 8dc:	29 f0       	breq	.+10     	; 0x8e8 <malloc+0x44>
 8de:	13 96       	adiw	r26, 0x03	; 3
 8e0:	9c 93       	st	X, r25
 8e2:	8e 93       	st	-X, r24
 8e4:	12 97       	sbiw	r26, 0x02	; 2
 8e6:	2c c0       	rjmp	.+88     	; 0x940 <malloc+0x9c>
 8e8:	90 93 4d 02 	sts	0x024D, r25
 8ec:	80 93 4c 02 	sts	0x024C, r24
 8f0:	27 c0       	rjmp	.+78     	; 0x940 <malloc+0x9c>
 8f2:	21 15       	cp	r18, r1
 8f4:	31 05       	cpc	r19, r1
 8f6:	31 f0       	breq	.+12     	; 0x904 <malloc+0x60>
 8f8:	42 17       	cp	r20, r18
 8fa:	53 07       	cpc	r21, r19
 8fc:	18 f0       	brcs	.+6      	; 0x904 <malloc+0x60>
 8fe:	a9 01       	movw	r20, r18
 900:	db 01       	movw	r26, r22
 902:	01 c0       	rjmp	.+2      	; 0x906 <malloc+0x62>
 904:	ef 01       	movw	r28, r30
 906:	9a 01       	movw	r18, r20
 908:	bd 01       	movw	r22, r26
 90a:	df 01       	movw	r26, r30
 90c:	02 80       	ldd	r0, Z+2	; 0x02
 90e:	f3 81       	ldd	r31, Z+3	; 0x03
 910:	e0 2d       	mov	r30, r0
 912:	d7 cf       	rjmp	.-82     	; 0x8c2 <malloc+0x1e>
 914:	21 15       	cp	r18, r1
 916:	31 05       	cpc	r19, r1
 918:	f9 f0       	breq	.+62     	; 0x958 <malloc+0xb4>
 91a:	28 1b       	sub	r18, r24
 91c:	39 0b       	sbc	r19, r25
 91e:	24 30       	cpi	r18, 0x04	; 4
 920:	31 05       	cpc	r19, r1
 922:	80 f4       	brcc	.+32     	; 0x944 <malloc+0xa0>
 924:	8a 81       	ldd	r24, Y+2	; 0x02
 926:	9b 81       	ldd	r25, Y+3	; 0x03
 928:	61 15       	cp	r22, r1
 92a:	71 05       	cpc	r23, r1
 92c:	21 f0       	breq	.+8      	; 0x936 <malloc+0x92>
 92e:	fb 01       	movw	r30, r22
 930:	93 83       	std	Z+3, r25	; 0x03
 932:	82 83       	std	Z+2, r24	; 0x02
 934:	04 c0       	rjmp	.+8      	; 0x93e <malloc+0x9a>
 936:	90 93 4d 02 	sts	0x024D, r25
 93a:	80 93 4c 02 	sts	0x024C, r24
 93e:	fe 01       	movw	r30, r28
 940:	32 96       	adiw	r30, 0x02	; 2
 942:	44 c0       	rjmp	.+136    	; 0x9cc <malloc+0x128>
 944:	fe 01       	movw	r30, r28
 946:	e2 0f       	add	r30, r18
 948:	f3 1f       	adc	r31, r19
 94a:	81 93       	st	Z+, r24
 94c:	91 93       	st	Z+, r25
 94e:	22 50       	subi	r18, 0x02	; 2
 950:	31 09       	sbc	r19, r1
 952:	39 83       	std	Y+1, r19	; 0x01
 954:	28 83       	st	Y, r18
 956:	3a c0       	rjmp	.+116    	; 0x9cc <malloc+0x128>
 958:	20 91 4a 02 	lds	r18, 0x024A
 95c:	30 91 4b 02 	lds	r19, 0x024B
 960:	23 2b       	or	r18, r19
 962:	41 f4       	brne	.+16     	; 0x974 <malloc+0xd0>
 964:	20 91 02 02 	lds	r18, 0x0202
 968:	30 91 03 02 	lds	r19, 0x0203
 96c:	30 93 4b 02 	sts	0x024B, r19
 970:	20 93 4a 02 	sts	0x024A, r18
 974:	20 91 00 02 	lds	r18, 0x0200
 978:	30 91 01 02 	lds	r19, 0x0201
 97c:	21 15       	cp	r18, r1
 97e:	31 05       	cpc	r19, r1
 980:	41 f4       	brne	.+16     	; 0x992 <malloc+0xee>
 982:	2d b7       	in	r18, 0x3d	; 61
 984:	3e b7       	in	r19, 0x3e	; 62
 986:	40 91 04 02 	lds	r20, 0x0204
 98a:	50 91 05 02 	lds	r21, 0x0205
 98e:	24 1b       	sub	r18, r20
 990:	35 0b       	sbc	r19, r21
 992:	e0 91 4a 02 	lds	r30, 0x024A
 996:	f0 91 4b 02 	lds	r31, 0x024B
 99a:	e2 17       	cp	r30, r18
 99c:	f3 07       	cpc	r31, r19
 99e:	a0 f4       	brcc	.+40     	; 0x9c8 <malloc+0x124>
 9a0:	2e 1b       	sub	r18, r30
 9a2:	3f 0b       	sbc	r19, r31
 9a4:	28 17       	cp	r18, r24
 9a6:	39 07       	cpc	r19, r25
 9a8:	78 f0       	brcs	.+30     	; 0x9c8 <malloc+0x124>
 9aa:	ac 01       	movw	r20, r24
 9ac:	4e 5f       	subi	r20, 0xFE	; 254
 9ae:	5f 4f       	sbci	r21, 0xFF	; 255
 9b0:	24 17       	cp	r18, r20
 9b2:	35 07       	cpc	r19, r21
 9b4:	48 f0       	brcs	.+18     	; 0x9c8 <malloc+0x124>
 9b6:	4e 0f       	add	r20, r30
 9b8:	5f 1f       	adc	r21, r31
 9ba:	50 93 4b 02 	sts	0x024B, r21
 9be:	40 93 4a 02 	sts	0x024A, r20
 9c2:	81 93       	st	Z+, r24
 9c4:	91 93       	st	Z+, r25
 9c6:	02 c0       	rjmp	.+4      	; 0x9cc <malloc+0x128>
 9c8:	e0 e0       	ldi	r30, 0x00	; 0
 9ca:	f0 e0       	ldi	r31, 0x00	; 0
 9cc:	cf 01       	movw	r24, r30
 9ce:	df 91       	pop	r29
 9d0:	cf 91       	pop	r28
 9d2:	08 95       	ret

000009d4 <free>:
 9d4:	cf 93       	push	r28
 9d6:	df 93       	push	r29
 9d8:	00 97       	sbiw	r24, 0x00	; 0
 9da:	09 f4       	brne	.+2      	; 0x9de <free+0xa>
 9dc:	87 c0       	rjmp	.+270    	; 0xaec <free+0x118>
 9de:	fc 01       	movw	r30, r24
 9e0:	32 97       	sbiw	r30, 0x02	; 2
 9e2:	13 82       	std	Z+3, r1	; 0x03
 9e4:	12 82       	std	Z+2, r1	; 0x02
 9e6:	c0 91 4c 02 	lds	r28, 0x024C
 9ea:	d0 91 4d 02 	lds	r29, 0x024D
 9ee:	20 97       	sbiw	r28, 0x00	; 0
 9f0:	81 f4       	brne	.+32     	; 0xa12 <free+0x3e>
 9f2:	20 81       	ld	r18, Z
 9f4:	31 81       	ldd	r19, Z+1	; 0x01
 9f6:	28 0f       	add	r18, r24
 9f8:	39 1f       	adc	r19, r25
 9fa:	80 91 4a 02 	lds	r24, 0x024A
 9fe:	90 91 4b 02 	lds	r25, 0x024B
 a02:	82 17       	cp	r24, r18
 a04:	93 07       	cpc	r25, r19
 a06:	79 f5       	brne	.+94     	; 0xa66 <free+0x92>
 a08:	f0 93 4b 02 	sts	0x024B, r31
 a0c:	e0 93 4a 02 	sts	0x024A, r30
 a10:	6d c0       	rjmp	.+218    	; 0xaec <free+0x118>
 a12:	de 01       	movw	r26, r28
 a14:	20 e0       	ldi	r18, 0x00	; 0
 a16:	30 e0       	ldi	r19, 0x00	; 0
 a18:	ae 17       	cp	r26, r30
 a1a:	bf 07       	cpc	r27, r31
 a1c:	50 f4       	brcc	.+20     	; 0xa32 <free+0x5e>
 a1e:	12 96       	adiw	r26, 0x02	; 2
 a20:	4d 91       	ld	r20, X+
 a22:	5c 91       	ld	r21, X
 a24:	13 97       	sbiw	r26, 0x03	; 3
 a26:	9d 01       	movw	r18, r26
 a28:	41 15       	cp	r20, r1
 a2a:	51 05       	cpc	r21, r1
 a2c:	09 f1       	breq	.+66     	; 0xa70 <free+0x9c>
 a2e:	da 01       	movw	r26, r20
 a30:	f3 cf       	rjmp	.-26     	; 0xa18 <free+0x44>
 a32:	b3 83       	std	Z+3, r27	; 0x03
 a34:	a2 83       	std	Z+2, r26	; 0x02
 a36:	40 81       	ld	r20, Z
 a38:	51 81       	ldd	r21, Z+1	; 0x01
 a3a:	84 0f       	add	r24, r20
 a3c:	95 1f       	adc	r25, r21
 a3e:	8a 17       	cp	r24, r26
 a40:	9b 07       	cpc	r25, r27
 a42:	71 f4       	brne	.+28     	; 0xa60 <free+0x8c>
 a44:	8d 91       	ld	r24, X+
 a46:	9c 91       	ld	r25, X
 a48:	11 97       	sbiw	r26, 0x01	; 1
 a4a:	84 0f       	add	r24, r20
 a4c:	95 1f       	adc	r25, r21
 a4e:	02 96       	adiw	r24, 0x02	; 2
 a50:	91 83       	std	Z+1, r25	; 0x01
 a52:	80 83       	st	Z, r24
 a54:	12 96       	adiw	r26, 0x02	; 2
 a56:	8d 91       	ld	r24, X+
 a58:	9c 91       	ld	r25, X
 a5a:	13 97       	sbiw	r26, 0x03	; 3
 a5c:	93 83       	std	Z+3, r25	; 0x03
 a5e:	82 83       	std	Z+2, r24	; 0x02
 a60:	21 15       	cp	r18, r1
 a62:	31 05       	cpc	r19, r1
 a64:	29 f4       	brne	.+10     	; 0xa70 <free+0x9c>
 a66:	f0 93 4d 02 	sts	0x024D, r31
 a6a:	e0 93 4c 02 	sts	0x024C, r30
 a6e:	3e c0       	rjmp	.+124    	; 0xaec <free+0x118>
 a70:	d9 01       	movw	r26, r18
 a72:	13 96       	adiw	r26, 0x03	; 3
 a74:	fc 93       	st	X, r31
 a76:	ee 93       	st	-X, r30
 a78:	12 97       	sbiw	r26, 0x02	; 2
 a7a:	4d 91       	ld	r20, X+
 a7c:	5d 91       	ld	r21, X+
 a7e:	a4 0f       	add	r26, r20
 a80:	b5 1f       	adc	r27, r21
 a82:	ea 17       	cp	r30, r26
 a84:	fb 07       	cpc	r31, r27
 a86:	79 f4       	brne	.+30     	; 0xaa6 <free+0xd2>
 a88:	80 81       	ld	r24, Z
 a8a:	91 81       	ldd	r25, Z+1	; 0x01
 a8c:	84 0f       	add	r24, r20
 a8e:	95 1f       	adc	r25, r21
 a90:	02 96       	adiw	r24, 0x02	; 2
 a92:	d9 01       	movw	r26, r18
 a94:	11 96       	adiw	r26, 0x01	; 1
 a96:	9c 93       	st	X, r25
 a98:	8e 93       	st	-X, r24
 a9a:	82 81       	ldd	r24, Z+2	; 0x02
 a9c:	93 81       	ldd	r25, Z+3	; 0x03
 a9e:	13 96       	adiw	r26, 0x03	; 3
 aa0:	9c 93       	st	X, r25
 aa2:	8e 93       	st	-X, r24
 aa4:	12 97       	sbiw	r26, 0x02	; 2
 aa6:	e0 e0       	ldi	r30, 0x00	; 0
 aa8:	f0 e0       	ldi	r31, 0x00	; 0
 aaa:	8a 81       	ldd	r24, Y+2	; 0x02
 aac:	9b 81       	ldd	r25, Y+3	; 0x03
 aae:	00 97       	sbiw	r24, 0x00	; 0
 ab0:	19 f0       	breq	.+6      	; 0xab8 <free+0xe4>
 ab2:	fe 01       	movw	r30, r28
 ab4:	ec 01       	movw	r28, r24
 ab6:	f9 cf       	rjmp	.-14     	; 0xaaa <free+0xd6>
 ab8:	ce 01       	movw	r24, r28
 aba:	02 96       	adiw	r24, 0x02	; 2
 abc:	28 81       	ld	r18, Y
 abe:	39 81       	ldd	r19, Y+1	; 0x01
 ac0:	82 0f       	add	r24, r18
 ac2:	93 1f       	adc	r25, r19
 ac4:	20 91 4a 02 	lds	r18, 0x024A
 ac8:	30 91 4b 02 	lds	r19, 0x024B
 acc:	28 17       	cp	r18, r24
 ace:	39 07       	cpc	r19, r25
 ad0:	69 f4       	brne	.+26     	; 0xaec <free+0x118>
 ad2:	30 97       	sbiw	r30, 0x00	; 0
 ad4:	29 f4       	brne	.+10     	; 0xae0 <free+0x10c>
 ad6:	10 92 4d 02 	sts	0x024D, r1
 ada:	10 92 4c 02 	sts	0x024C, r1
 ade:	02 c0       	rjmp	.+4      	; 0xae4 <free+0x110>
 ae0:	13 82       	std	Z+3, r1	; 0x03
 ae2:	12 82       	std	Z+2, r1	; 0x02
 ae4:	d0 93 4b 02 	sts	0x024B, r29
 ae8:	c0 93 4a 02 	sts	0x024A, r28
 aec:	df 91       	pop	r29
 aee:	cf 91       	pop	r28
 af0:	08 95       	ret

00000af2 <strnlen_P>:
 af2:	fc 01       	movw	r30, r24
 af4:	05 90       	lpm	r0, Z+
 af6:	61 50       	subi	r22, 0x01	; 1
 af8:	70 40       	sbci	r23, 0x00	; 0
 afa:	01 10       	cpse	r0, r1
 afc:	d8 f7       	brcc	.-10     	; 0xaf4 <strnlen_P+0x2>
 afe:	80 95       	com	r24
 b00:	90 95       	com	r25
 b02:	8e 0f       	add	r24, r30
 b04:	9f 1f       	adc	r25, r31
 b06:	08 95       	ret

00000b08 <memset>:
 b08:	dc 01       	movw	r26, r24
 b0a:	01 c0       	rjmp	.+2      	; 0xb0e <memset+0x6>
 b0c:	6d 93       	st	X+, r22
 b0e:	41 50       	subi	r20, 0x01	; 1
 b10:	50 40       	sbci	r21, 0x00	; 0
 b12:	e0 f7       	brcc	.-8      	; 0xb0c <memset+0x4>
 b14:	08 95       	ret

00000b16 <strnlen>:
 b16:	fc 01       	movw	r30, r24
 b18:	61 50       	subi	r22, 0x01	; 1
 b1a:	70 40       	sbci	r23, 0x00	; 0
 b1c:	01 90       	ld	r0, Z+
 b1e:	01 10       	cpse	r0, r1
 b20:	d8 f7       	brcc	.-10     	; 0xb18 <strnlen+0x2>
 b22:	80 95       	com	r24
 b24:	90 95       	com	r25
 b26:	8e 0f       	add	r24, r30
 b28:	9f 1f       	adc	r25, r31
 b2a:	08 95       	ret

00000b2c <fputc>:
 b2c:	0f 93       	push	r16
 b2e:	1f 93       	push	r17
 b30:	cf 93       	push	r28
 b32:	df 93       	push	r29
 b34:	18 2f       	mov	r17, r24
 b36:	09 2f       	mov	r16, r25
 b38:	eb 01       	movw	r28, r22
 b3a:	8b 81       	ldd	r24, Y+3	; 0x03
 b3c:	81 fd       	sbrc	r24, 1
 b3e:	03 c0       	rjmp	.+6      	; 0xb46 <fputc+0x1a>
 b40:	8f ef       	ldi	r24, 0xFF	; 255
 b42:	9f ef       	ldi	r25, 0xFF	; 255
 b44:	20 c0       	rjmp	.+64     	; 0xb86 <fputc+0x5a>
 b46:	82 ff       	sbrs	r24, 2
 b48:	10 c0       	rjmp	.+32     	; 0xb6a <fputc+0x3e>
 b4a:	4e 81       	ldd	r20, Y+6	; 0x06
 b4c:	5f 81       	ldd	r21, Y+7	; 0x07
 b4e:	2c 81       	ldd	r18, Y+4	; 0x04
 b50:	3d 81       	ldd	r19, Y+5	; 0x05
 b52:	42 17       	cp	r20, r18
 b54:	53 07       	cpc	r21, r19
 b56:	7c f4       	brge	.+30     	; 0xb76 <fputc+0x4a>
 b58:	e8 81       	ld	r30, Y
 b5a:	f9 81       	ldd	r31, Y+1	; 0x01
 b5c:	9f 01       	movw	r18, r30
 b5e:	2f 5f       	subi	r18, 0xFF	; 255
 b60:	3f 4f       	sbci	r19, 0xFF	; 255
 b62:	39 83       	std	Y+1, r19	; 0x01
 b64:	28 83       	st	Y, r18
 b66:	10 83       	st	Z, r17
 b68:	06 c0       	rjmp	.+12     	; 0xb76 <fputc+0x4a>
 b6a:	e8 85       	ldd	r30, Y+8	; 0x08
 b6c:	f9 85       	ldd	r31, Y+9	; 0x09
 b6e:	81 2f       	mov	r24, r17
 b70:	19 95       	eicall
 b72:	89 2b       	or	r24, r25
 b74:	29 f7       	brne	.-54     	; 0xb40 <fputc+0x14>
 b76:	2e 81       	ldd	r18, Y+6	; 0x06
 b78:	3f 81       	ldd	r19, Y+7	; 0x07
 b7a:	2f 5f       	subi	r18, 0xFF	; 255
 b7c:	3f 4f       	sbci	r19, 0xFF	; 255
 b7e:	3f 83       	std	Y+7, r19	; 0x07
 b80:	2e 83       	std	Y+6, r18	; 0x06
 b82:	81 2f       	mov	r24, r17
 b84:	90 2f       	mov	r25, r16
 b86:	df 91       	pop	r29
 b88:	cf 91       	pop	r28
 b8a:	1f 91       	pop	r17
 b8c:	0f 91       	pop	r16
 b8e:	08 95       	ret

00000b90 <__ultoa_invert>:
 b90:	fa 01       	movw	r30, r20
 b92:	aa 27       	eor	r26, r26
 b94:	28 30       	cpi	r18, 0x08	; 8
 b96:	51 f1       	breq	.+84     	; 0xbec <__ultoa_invert+0x5c>
 b98:	20 31       	cpi	r18, 0x10	; 16
 b9a:	81 f1       	breq	.+96     	; 0xbfc <__ultoa_invert+0x6c>
 b9c:	e8 94       	clt
 b9e:	6f 93       	push	r22
 ba0:	6e 7f       	andi	r22, 0xFE	; 254
 ba2:	6e 5f       	subi	r22, 0xFE	; 254
 ba4:	7f 4f       	sbci	r23, 0xFF	; 255
 ba6:	8f 4f       	sbci	r24, 0xFF	; 255
 ba8:	9f 4f       	sbci	r25, 0xFF	; 255
 baa:	af 4f       	sbci	r26, 0xFF	; 255
 bac:	b1 e0       	ldi	r27, 0x01	; 1
 bae:	3e d0       	rcall	.+124    	; 0xc2c <__ultoa_invert+0x9c>
 bb0:	b4 e0       	ldi	r27, 0x04	; 4
 bb2:	3c d0       	rcall	.+120    	; 0xc2c <__ultoa_invert+0x9c>
 bb4:	67 0f       	add	r22, r23
 bb6:	78 1f       	adc	r23, r24
 bb8:	89 1f       	adc	r24, r25
 bba:	9a 1f       	adc	r25, r26
 bbc:	a1 1d       	adc	r26, r1
 bbe:	68 0f       	add	r22, r24
 bc0:	79 1f       	adc	r23, r25
 bc2:	8a 1f       	adc	r24, r26
 bc4:	91 1d       	adc	r25, r1
 bc6:	a1 1d       	adc	r26, r1
 bc8:	6a 0f       	add	r22, r26
 bca:	71 1d       	adc	r23, r1
 bcc:	81 1d       	adc	r24, r1
 bce:	91 1d       	adc	r25, r1
 bd0:	a1 1d       	adc	r26, r1
 bd2:	20 d0       	rcall	.+64     	; 0xc14 <__ultoa_invert+0x84>
 bd4:	09 f4       	brne	.+2      	; 0xbd8 <__ultoa_invert+0x48>
 bd6:	68 94       	set
 bd8:	3f 91       	pop	r19
 bda:	2a e0       	ldi	r18, 0x0A	; 10
 bdc:	26 9f       	mul	r18, r22
 bde:	11 24       	eor	r1, r1
 be0:	30 19       	sub	r19, r0
 be2:	30 5d       	subi	r19, 0xD0	; 208
 be4:	31 93       	st	Z+, r19
 be6:	de f6       	brtc	.-74     	; 0xb9e <__ultoa_invert+0xe>
 be8:	cf 01       	movw	r24, r30
 bea:	08 95       	ret
 bec:	46 2f       	mov	r20, r22
 bee:	47 70       	andi	r20, 0x07	; 7
 bf0:	40 5d       	subi	r20, 0xD0	; 208
 bf2:	41 93       	st	Z+, r20
 bf4:	b3 e0       	ldi	r27, 0x03	; 3
 bf6:	0f d0       	rcall	.+30     	; 0xc16 <__ultoa_invert+0x86>
 bf8:	c9 f7       	brne	.-14     	; 0xbec <__ultoa_invert+0x5c>
 bfa:	f6 cf       	rjmp	.-20     	; 0xbe8 <__ultoa_invert+0x58>
 bfc:	46 2f       	mov	r20, r22
 bfe:	4f 70       	andi	r20, 0x0F	; 15
 c00:	40 5d       	subi	r20, 0xD0	; 208
 c02:	4a 33       	cpi	r20, 0x3A	; 58
 c04:	18 f0       	brcs	.+6      	; 0xc0c <__ultoa_invert+0x7c>
 c06:	49 5d       	subi	r20, 0xD9	; 217
 c08:	31 fd       	sbrc	r19, 1
 c0a:	40 52       	subi	r20, 0x20	; 32
 c0c:	41 93       	st	Z+, r20
 c0e:	02 d0       	rcall	.+4      	; 0xc14 <__ultoa_invert+0x84>
 c10:	a9 f7       	brne	.-22     	; 0xbfc <__ultoa_invert+0x6c>
 c12:	ea cf       	rjmp	.-44     	; 0xbe8 <__ultoa_invert+0x58>
 c14:	b4 e0       	ldi	r27, 0x04	; 4
 c16:	a6 95       	lsr	r26
 c18:	97 95       	ror	r25
 c1a:	87 95       	ror	r24
 c1c:	77 95       	ror	r23
 c1e:	67 95       	ror	r22
 c20:	ba 95       	dec	r27
 c22:	c9 f7       	brne	.-14     	; 0xc16 <__ultoa_invert+0x86>
 c24:	00 97       	sbiw	r24, 0x00	; 0
 c26:	61 05       	cpc	r22, r1
 c28:	71 05       	cpc	r23, r1
 c2a:	08 95       	ret
 c2c:	9b 01       	movw	r18, r22
 c2e:	ac 01       	movw	r20, r24
 c30:	0a 2e       	mov	r0, r26
 c32:	06 94       	lsr	r0
 c34:	57 95       	ror	r21
 c36:	47 95       	ror	r20
 c38:	37 95       	ror	r19
 c3a:	27 95       	ror	r18
 c3c:	ba 95       	dec	r27
 c3e:	c9 f7       	brne	.-14     	; 0xc32 <__ultoa_invert+0xa2>
 c40:	62 0f       	add	r22, r18
 c42:	73 1f       	adc	r23, r19
 c44:	84 1f       	adc	r24, r20
 c46:	95 1f       	adc	r25, r21
 c48:	a0 1d       	adc	r26, r0
 c4a:	08 95       	ret

00000c4c <_exit>:
 c4c:	f8 94       	cli

00000c4e <__stop_program>:
 c4e:	ff cf       	rjmp	.-2      	; 0xc4e <__stop_program>
