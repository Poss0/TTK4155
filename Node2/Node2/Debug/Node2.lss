
Node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000024  00800200  000010f0  00001184  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010f0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800224  00800224  000011a8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000011a8  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000178  00000000  00000000  00001204  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f69  00000000  00000000  0000137c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008bc  00000000  00000000  000022e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001652  00000000  00000000  00002ba1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002ec  00000000  00000000  000041f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00009c88  00000000  00000000  000044e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000006f4  00000000  00000000  0000e168  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f8  00000000  00000000  0000e85c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000466b  00000000  00000000  0000e954  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
       6:	00 00       	nop
       8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
       a:	00 00       	nop
       c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
       e:	00 00       	nop
      10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
      12:	00 00       	nop
      14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
      16:	00 00       	nop
      18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
      1e:	00 00       	nop
      20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
      22:	00 00       	nop
      24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
      26:	00 00       	nop
      28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
      2e:	00 00       	nop
      30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
      32:	00 00       	nop
      34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
      36:	00 00       	nop
      38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
      3e:	00 00       	nop
      40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
      42:	00 00       	nop
      44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
      46:	00 00       	nop
      48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
      4e:	00 00       	nop
      50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
      52:	00 00       	nop
      54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
      56:	00 00       	nop
      58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
      5e:	00 00       	nop
      60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
      62:	00 00       	nop
      64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
      66:	00 00       	nop
      68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
      6e:	00 00       	nop
      70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
      72:	00 00       	nop
      74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
      76:	00 00       	nop
      78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
      7e:	00 00       	nop
      80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
      82:	00 00       	nop
      84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
      86:	00 00       	nop
      88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
      8e:	00 00       	nop
      90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
      92:	00 00       	nop
      94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
      96:	00 00       	nop
      98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
      be:	00 00       	nop
      c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
      da:	00 00       	nop
      dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
      de:	00 00       	nop
      e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e0 ef       	ldi	r30, 0xF0	; 240
      fc:	f0 e1       	ldi	r31, 0x10	; 16
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a4 32       	cpi	r26, 0x24	; 36
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a4 e2       	ldi	r26, 0x24	; 36
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	ae 32       	cpi	r26, 0x2E	; 46
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	e8 d0       	rcall	.+464    	; 0x2f0 <main>
     120:	e5 c7       	rjmp	.+4042   	; 0x10ec <_exit>

00000122 <__bad_interrupt>:
     122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <ADC_init>:
#include <stdint.h>
#include <avr/io.h>

void ADC_init(){
	/* Enable ADC */
	ADCSRA |= (1 << ADEN);
     124:	ea e7       	ldi	r30, 0x7A	; 122
     126:	f0 e0       	ldi	r31, 0x00	; 0
     128:	80 81       	ld	r24, Z
     12a:	80 68       	ori	r24, 0x80	; 128
     12c:	80 83       	st	Z, r24
	/* Set prescaler */
	ADCSRA |= (1 << ADPS0) | (1 << ADPS1) | (1 << ADPS2);
     12e:	80 81       	ld	r24, Z
     130:	87 60       	ori	r24, 0x07	; 7
     132:	80 83       	st	Z, r24
	/* Select channel 0 */
	ADMUX &= ~(1 << MUX0) & ~(1 << MUX1) & ~(1 << MUX2) & ~(1 << MUX3) & ~(1 << MUX4);
     134:	ec e7       	ldi	r30, 0x7C	; 124
     136:	f0 e0       	ldi	r31, 0x00	; 0
     138:	80 81       	ld	r24, Z
     13a:	80 7e       	andi	r24, 0xE0	; 224
     13c:	80 83       	st	Z, r24
	ADCSRB &= ~(1 << MUX5);
     13e:	ab e7       	ldi	r26, 0x7B	; 123
     140:	b0 e0       	ldi	r27, 0x00	; 0
     142:	8c 91       	ld	r24, X
     144:	87 7f       	andi	r24, 0xF7	; 247
     146:	8c 93       	st	X, r24
	/* Choose reference */
	ADMUX |= (1 << REFS0);
     148:	80 81       	ld	r24, Z
     14a:	80 64       	ori	r24, 0x40	; 64
     14c:	80 83       	st	Z, r24
	ADMUX &= ~(1 << REFS1);
     14e:	80 81       	ld	r24, Z
     150:	8f 77       	andi	r24, 0x7F	; 127
     152:	80 83       	st	Z, r24
     154:	08 95       	ret

00000156 <ADC_convert>:
}

uint16_t ADC_convert(){
     156:	cf 93       	push	r28
     158:	df 93       	push	r29
	ADCSRA |= (1 << ADSC);
     15a:	ea e7       	ldi	r30, 0x7A	; 122
     15c:	f0 e0       	ldi	r31, 0x00	; 0
     15e:	80 81       	ld	r24, Z
     160:	80 64       	ori	r24, 0x40	; 64
     162:	80 83       	st	Z, r24
	while(ADCSRA & (1<<ADSC));
     164:	80 81       	ld	r24, Z
     166:	86 fd       	sbrc	r24, 6
     168:	fd cf       	rjmp	.-6      	; 0x164 <ADC_convert+0xe>
	printf("Result: %d\n", ADC & 0x3FF);
     16a:	c8 e7       	ldi	r28, 0x78	; 120
     16c:	d0 e0       	ldi	r29, 0x00	; 0
     16e:	88 81       	ld	r24, Y
     170:	99 81       	ldd	r25, Y+1	; 0x01
     172:	93 70       	andi	r25, 0x03	; 3
     174:	9f 93       	push	r25
     176:	8f 93       	push	r24
     178:	86 e0       	ldi	r24, 0x06	; 6
     17a:	92 e0       	ldi	r25, 0x02	; 2
     17c:	9f 93       	push	r25
     17e:	8f 93       	push	r24
     180:	9b d3       	rcall	.+1846   	; 0x8b8 <printf>
	return ADC & 0x3FF;
     182:	88 81       	ld	r24, Y
     184:	99 81       	ldd	r25, Y+1	; 0x01
     186:	0f 90       	pop	r0
     188:	0f 90       	pop	r0
     18a:	0f 90       	pop	r0
     18c:	0f 90       	pop	r0
     18e:	93 70       	andi	r25, 0x03	; 3
     190:	df 91       	pop	r29
     192:	cf 91       	pop	r28
     194:	08 95       	ret

00000196 <CAN_init>:
	{
		MCP2515_WRITE(MCP_TXB0D0+i,message->data[i]);
	}
	
	MCP2515_REQUEST_TO_SEND();
}
     196:	64 d1       	rcall	.+712    	; 0x460 <SPI_Init>
     198:	85 d0       	rcall	.+266    	; 0x2a4 <MCP2515_RESET>
     19a:	87 ea       	ldi	r24, 0xA7	; 167
     19c:	91 e6       	ldi	r25, 0x61	; 97
     19e:	01 97       	sbiw	r24, 0x01	; 1
     1a0:	f1 f7       	brne	.-4      	; 0x19e <CAN_init+0x8>
     1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <CAN_init+0xe>
     1a4:	00 00       	nop
     1a6:	40 e0       	ldi	r20, 0x00	; 0
     1a8:	60 ee       	ldi	r22, 0xE0	; 224
     1aa:	8f e0       	ldi	r24, 0x0F	; 15
     1ac:	8d d0       	rcall	.+282    	; 0x2c8 <MCP2515_BIT_MODIFY>
     1ae:	41 e0       	ldi	r20, 0x01	; 1
     1b0:	61 e0       	ldi	r22, 0x01	; 1
     1b2:	8b e2       	ldi	r24, 0x2B	; 43
     1b4:	89 c0       	rjmp	.+274    	; 0x2c8 <MCP2515_BIT_MODIFY>
     1b6:	08 95       	ret

000001b8 <CAN_receive>:

MSG CAN_receive()
{
     1b8:	8f 92       	push	r8
     1ba:	9f 92       	push	r9
     1bc:	af 92       	push	r10
     1be:	bf 92       	push	r11
     1c0:	cf 92       	push	r12
     1c2:	df 92       	push	r13
     1c4:	ef 92       	push	r14
     1c6:	ff 92       	push	r15
     1c8:	0f 93       	push	r16
     1ca:	1f 93       	push	r17
     1cc:	cf 93       	push	r28
     1ce:	df 93       	push	r29
     1d0:	cd b7       	in	r28, 0x3d	; 61
     1d2:	de b7       	in	r29, 0x3e	; 62
     1d4:	2c 97       	sbiw	r28, 0x0c	; 12
     1d6:	0f b6       	in	r0, 0x3f	; 63
     1d8:	f8 94       	cli
     1da:	de bf       	out	0x3e, r29	; 62
     1dc:	0f be       	out	0x3f, r0	; 63
     1de:	cd bf       	out	0x3d, r28	; 61
     1e0:	5c 01       	movw	r10, r24
	/*check if there is a message*/
	if(MCP2515_READ(MCP_CANINTF) & 0x01 == 0x1){
     1e2:	8c e2       	ldi	r24, 0x2C	; 44
     1e4:	64 d0       	rcall	.+200    	; 0x2ae <MCP2515_READ>
     1e6:	80 ff       	sbrs	r24, 0
     1e8:	49 c0       	rjmp	.+146    	; 0x27c <CAN_receive+0xc4>
		MSG message;
		
		int ID_l = MCP2515_READ(MCP_RXB0SIDL);
     1ea:	82 e6       	ldi	r24, 0x62	; 98
     1ec:	60 d0       	rcall	.+192    	; 0x2ae <MCP2515_READ>
     1ee:	18 2f       	mov	r17, r24
		int ID_h = MCP2515_READ(MCP_RXB0SIDH);
     1f0:	81 e6       	ldi	r24, 0x61	; 97
     1f2:	5d d0       	rcall	.+186    	; 0x2ae <MCP2515_READ>
{
	/*check if there is a message*/
	if(MCP2515_READ(MCP_CANINTF) & 0x01 == 0x1){
		MSG message;
		
		int ID_l = MCP2515_READ(MCP_RXB0SIDL);
     1f4:	21 2f       	mov	r18, r17
     1f6:	33 27       	eor	r19, r19
     1f8:	27 fd       	sbrc	r18, 7
     1fa:	30 95       	com	r19
		int ID_h = MCP2515_READ(MCP_RXB0SIDH);
		message.ID = ((ID_h << 3) + ((ID_l >> 5) & 0x7)) & 0xFF;
     1fc:	35 95       	asr	r19
     1fe:	27 95       	ror	r18
     200:	35 95       	asr	r19
     202:	27 95       	ror	r18
     204:	35 95       	asr	r19
     206:	27 95       	ror	r18
     208:	35 95       	asr	r19
     20a:	27 95       	ror	r18
     20c:	35 95       	asr	r19
     20e:	27 95       	ror	r18
     210:	27 70       	andi	r18, 0x07	; 7
     212:	33 27       	eor	r19, r19
     214:	98 e0       	ldi	r25, 0x08	; 8
     216:	89 02       	muls	r24, r25
     218:	20 0d       	add	r18, r0
     21a:	31 1d       	adc	r19, r1
     21c:	11 24       	eor	r1, r1
     21e:	49 01       	movw	r8, r18
     220:	99 24       	eor	r9, r9
		
		int length = MCP2515_READ(MCP_RXB0DLC) & 0x0F;
     222:	85 e6       	ldi	r24, 0x65	; 101
     224:	44 d0       	rcall	.+136    	; 0x2ae <MCP2515_READ>
     226:	8f 70       	andi	r24, 0x0F	; 15
     228:	c8 2e       	mov	r12, r24
     22a:	dd 24       	eor	r13, r13
     22c:	c7 fc       	sbrc	r12, 7
     22e:	d0 94       	com	r13
     230:	7e 01       	movw	r14, r28
     232:	e5 e0       	ldi	r30, 0x05	; 5
     234:	ee 0e       	add	r14, r30
     236:	f1 1c       	adc	r15, r1
		message.length = length;
		
		for (int i=0; i < length || i < 8; i++)
     238:	00 e0       	ldi	r16, 0x00	; 0
     23a:	10 e0       	ldi	r17, 0x00	; 0
     23c:	08 c0       	rjmp	.+16     	; 0x24e <CAN_receive+0x96>
		{
			message.data[i] = MCP2515_READ(MCP_RXB0D0+i);
     23e:	86 e6       	ldi	r24, 0x66	; 102
     240:	80 0f       	add	r24, r16
     242:	35 d0       	rcall	.+106    	; 0x2ae <MCP2515_READ>
     244:	f7 01       	movw	r30, r14
     246:	81 93       	st	Z+, r24
     248:	7f 01       	movw	r14, r30
		message.ID = ((ID_h << 3) + ((ID_l >> 5) & 0x7)) & 0xFF;
		
		int length = MCP2515_READ(MCP_RXB0DLC) & 0x0F;
		message.length = length;
		
		for (int i=0; i < length || i < 8; i++)
     24a:	0f 5f       	subi	r16, 0xFF	; 255
     24c:	1f 4f       	sbci	r17, 0xFF	; 255
     24e:	0c 15       	cp	r16, r12
     250:	1d 05       	cpc	r17, r13
     252:	ac f3       	brlt	.-22     	; 0x23e <CAN_receive+0x86>
     254:	08 30       	cpi	r16, 0x08	; 8
     256:	11 05       	cpc	r17, r1
     258:	94 f3       	brlt	.-28     	; 0x23e <CAN_receive+0x86>
		{
			message.data[i] = MCP2515_READ(MCP_RXB0D0+i);
		}
		
		MCP2515_BIT_MODIFY(MCP_CANINTF,0b00000001,0b00000000);
     25a:	40 e0       	ldi	r20, 0x00	; 0
     25c:	61 e0       	ldi	r22, 0x01	; 1
     25e:	8c e2       	ldi	r24, 0x2C	; 44
     260:	33 d0       	rcall	.+102    	; 0x2c8 <MCP2515_BIT_MODIFY>
		
		return message;
     262:	9a 82       	std	Y+2, r9	; 0x02
     264:	89 82       	std	Y+1, r8	; 0x01
     266:	dc 82       	std	Y+4, r13	; 0x04
     268:	cb 82       	std	Y+3, r12	; 0x03
     26a:	8c e0       	ldi	r24, 0x0C	; 12
     26c:	fe 01       	movw	r30, r28
     26e:	31 96       	adiw	r30, 0x01	; 1
     270:	d5 01       	movw	r26, r10
     272:	01 90       	ld	r0, Z+
     274:	0d 92       	st	X+, r0
     276:	8a 95       	dec	r24
     278:	e1 f7       	brne	.-8      	; 0x272 <CAN_receive+0xba>
     27a:	00 c0       	rjmp	.+0      	; 0x27c <CAN_receive+0xc4>
	}
	else return;
     27c:	c5 01       	movw	r24, r10
     27e:	2c 96       	adiw	r28, 0x0c	; 12
     280:	0f b6       	in	r0, 0x3f	; 63
     282:	f8 94       	cli
     284:	de bf       	out	0x3e, r29	; 62
     286:	0f be       	out	0x3f, r0	; 63
     288:	cd bf       	out	0x3d, r28	; 61
     28a:	df 91       	pop	r29
     28c:	cf 91       	pop	r28
     28e:	1f 91       	pop	r17
     290:	0f 91       	pop	r16
     292:	ff 90       	pop	r15
     294:	ef 90       	pop	r14
     296:	df 90       	pop	r13
     298:	cf 90       	pop	r12
     29a:	bf 90       	pop	r11
     29c:	af 90       	pop	r10
     29e:	9f 90       	pop	r9
     2a0:	8f 90       	pop	r8
     2a2:	08 95       	ret

000002a4 <MCP2515_RESET>:
	SPI_on();
	SPI_write(MCP_READ_STATUS);
	char data = SPI_read();
	SPI_off();
	return data;
}
     2a4:	f0 d0       	rcall	.+480    	; 0x486 <SPI_on>
     2a6:	80 ec       	ldi	r24, 0xC0	; 192
     2a8:	e3 d0       	rcall	.+454    	; 0x470 <SPI_write>
     2aa:	f1 c0       	rjmp	.+482    	; 0x48e <SPI_off>
     2ac:	08 95       	ret

000002ae <MCP2515_READ>:
     2ae:	cf 93       	push	r28
     2b0:	c8 2f       	mov	r28, r24
     2b2:	e9 d0       	rcall	.+466    	; 0x486 <SPI_on>
     2b4:	83 e0       	ldi	r24, 0x03	; 3
     2b6:	dc d0       	rcall	.+440    	; 0x470 <SPI_write>
     2b8:	8c 2f       	mov	r24, r28
     2ba:	da d0       	rcall	.+436    	; 0x470 <SPI_write>
     2bc:	de d0       	rcall	.+444    	; 0x47a <SPI_read>
     2be:	c8 2f       	mov	r28, r24
     2c0:	e6 d0       	rcall	.+460    	; 0x48e <SPI_off>
     2c2:	8c 2f       	mov	r24, r28
     2c4:	cf 91       	pop	r28
     2c6:	08 95       	ret

000002c8 <MCP2515_BIT_MODIFY>:

void MCP2515_BIT_MODIFY(uint8_t address, uint8_t mask, uint8_t data)
{
     2c8:	1f 93       	push	r17
     2ca:	cf 93       	push	r28
     2cc:	df 93       	push	r29
     2ce:	18 2f       	mov	r17, r24
     2d0:	d6 2f       	mov	r29, r22
     2d2:	c4 2f       	mov	r28, r20
	SPI_on();
     2d4:	d8 d0       	rcall	.+432    	; 0x486 <SPI_on>
	SPI_write(MCP_BITMOD);
     2d6:	85 e0       	ldi	r24, 0x05	; 5
     2d8:	cb d0       	rcall	.+406    	; 0x470 <SPI_write>
	SPI_write(address);
     2da:	81 2f       	mov	r24, r17
     2dc:	c9 d0       	rcall	.+402    	; 0x470 <SPI_write>
	SPI_write(mask);
     2de:	8d 2f       	mov	r24, r29
     2e0:	c7 d0       	rcall	.+398    	; 0x470 <SPI_write>
	SPI_write(data);
     2e2:	8c 2f       	mov	r24, r28
     2e4:	c5 d0       	rcall	.+394    	; 0x470 <SPI_write>
	SPI_off();	
     2e6:	d3 d0       	rcall	.+422    	; 0x48e <SPI_off>
     2e8:	df 91       	pop	r29
     2ea:	cf 91       	pop	r28
     2ec:	1f 91       	pop	r17
     2ee:	08 95       	ret

000002f0 <main>:
#define FOSC 16000000
#define BAUD 9600
#define UART_BAUD FOSC/16/BAUD-1

int main(void)
{
     2f0:	cf 93       	push	r28
     2f2:	df 93       	push	r29
     2f4:	cd b7       	in	r28, 0x3d	; 61
     2f6:	de b7       	in	r29, 0x3e	; 62
     2f8:	2c 97       	sbiw	r28, 0x0c	; 12
     2fa:	0f b6       	in	r0, 0x3f	; 63
     2fc:	f8 94       	cli
     2fe:	de bf       	out	0x3e, r29	; 62
     300:	0f be       	out	0x3f, r0	; 63
     302:	cd bf       	out	0x3d, r28	; 61
	/* Initialize UART */
	UART_Init(UART_BAUD);
     304:	87 e6       	ldi	r24, 0x67	; 103
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	d4 d0       	rcall	.+424    	; 0x4b2 <UART_Init>
	printf("Reset\n");
     30a:	82 e1       	ldi	r24, 0x12	; 18
     30c:	92 e0       	ldi	r25, 0x02	; 2
     30e:	e5 d2       	rcall	.+1482   	; 0x8da <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     310:	2f e3       	ldi	r18, 0x3F	; 63
     312:	8d e0       	ldi	r24, 0x0D	; 13
     314:	93 e0       	ldi	r25, 0x03	; 3
     316:	21 50       	subi	r18, 0x01	; 1
     318:	80 40       	sbci	r24, 0x00	; 0
     31a:	90 40       	sbci	r25, 0x00	; 0
     31c:	e1 f7       	brne	.-8      	; 0x316 <main+0x26>
     31e:	00 c0       	rjmp	.+0      	; 0x320 <main+0x30>
     320:	00 00       	nop
	_delay_ms(1000);
	
	/* Initialize ADC */
	ADC_init();
     322:	00 df       	rcall	.-512    	; 0x124 <ADC_init>
	
	/* Initialize CAN */
	CAN_init();
     324:	38 df       	rcall	.-400    	; 0x196 <CAN_init>
	
	/* Initialize PWM */
	Servo_init();
     326:	29 d0       	rcall	.+82     	; 0x37a <Servo_init>
	
	int score = 0;
     328:	e1 2c       	mov	r14, r1
     32a:	f1 2c       	mov	r15, r1
		_delay_ms(1000);*/
		received_test = CAN_receive();
		//printf("Receiving: ID: %d, length: %d, x: %i, y:%i\n", received_test.ID, received_test.length, received_test.data[0], received_test.data[1]);
		Servo_pwm(received_test.data[0]);
		score = get_score(score);
		printf("Score: %d\n", score);
     32c:	08 e1       	ldi	r16, 0x18	; 24
     32e:	12 e0       	ldi	r17, 0x02	; 2
	MSG received_test;
	while(1){
		/*CAN_send(&test_message);
		printf("Sending: ID: %d, length: %d, data: %d\n", test_message.ID, test_message.length, test_message.data[0]);
		_delay_ms(1000);*/
		received_test = CAN_receive();
     330:	ce 01       	movw	r24, r28
     332:	01 96       	adiw	r24, 0x01	; 1
     334:	41 df       	rcall	.-382    	; 0x1b8 <CAN_receive>
		//printf("Receiving: ID: %d, length: %d, x: %i, y:%i\n", received_test.ID, received_test.length, received_test.data[0], received_test.data[1]);
		Servo_pwm(received_test.data[0]);
     336:	6d 81       	ldd	r22, Y+5	; 0x05
     338:	77 27       	eor	r23, r23
     33a:	67 fd       	sbrc	r22, 7
     33c:	70 95       	com	r23
     33e:	87 2f       	mov	r24, r23
     340:	97 2f       	mov	r25, r23
     342:	59 d1       	rcall	.+690    	; 0x5f6 <__floatsisf>
     344:	41 d0       	rcall	.+130    	; 0x3c8 <Servo_pwm>
		score = get_score(score);
     346:	8e 2d       	mov	r24, r14
     348:	9f 2d       	mov	r25, r15
     34a:	0c d0       	rcall	.+24     	; 0x364 <get_score>
     34c:	e8 2e       	mov	r14, r24
     34e:	f9 2e       	mov	r15, r25
		printf("Score: %d\n", score);
     350:	9f 93       	push	r25
     352:	8f 93       	push	r24
     354:	1f 93       	push	r17
     356:	0f 93       	push	r16
     358:	af d2       	rcall	.+1374   	; 0x8b8 <printf>
     35a:	0f 90       	pop	r0
     35c:	0f 90       	pop	r0
     35e:	0f 90       	pop	r0
     360:	0f 90       	pop	r0
     362:	e6 cf       	rjmp	.-52     	; 0x330 <main+0x40>

00000364 <get_score>:
#include <avr/delay.h>
#include "ADC.h"

int get_score(int score){
     364:	cf 93       	push	r28
     366:	df 93       	push	r29
     368:	ec 01       	movw	r28, r24
	int goal = ADC_convert();
     36a:	f5 de       	rcall	.-534    	; 0x156 <ADC_convert>
	if(goal < 50){
     36c:	c2 97       	sbiw	r24, 0x32	; 50
     36e:	0c f4       	brge	.+2      	; 0x372 <get_score+0xe>
		score ++;
     370:	21 96       	adiw	r28, 0x01	; 1
		//while(ADC_convert() < 100);
	}
	return score;
}
     372:	ce 01       	movw	r24, r28
     374:	df 91       	pop	r29
     376:	cf 91       	pop	r28
     378:	08 95       	ret

0000037a <Servo_init>:
#define TOP_SERVO 0.0021
#define SLOPE_SERVO 0.000006

void Servo_init(){
	//Set OC1A as an output
	DDRB |= (1 << PB5);
     37a:	25 9a       	sbi	0x04, 5	; 4
	//Select fast PWM mode
	TCCR1B |= (1 << WGM13) | (1 << WGM12);
     37c:	a1 e8       	ldi	r26, 0x81	; 129
     37e:	b0 e0       	ldi	r27, 0x00	; 0
     380:	8c 91       	ld	r24, X
     382:	88 61       	ori	r24, 0x18	; 24
     384:	8c 93       	st	X, r24
	TCCR1A |=  (1 << WGM11);
     386:	e0 e8       	ldi	r30, 0x80	; 128
     388:	f0 e0       	ldi	r31, 0x00	; 0
     38a:	80 81       	ld	r24, Z
     38c:	82 60       	ori	r24, 0x02	; 2
     38e:	80 83       	st	Z, r24
	TCCR1A &= ~(1 << WGM10);
     390:	80 81       	ld	r24, Z
     392:	8e 7f       	andi	r24, 0xFE	; 254
     394:	80 83       	st	Z, r24
	TCCR1A |= 1 << COM1A1;
     396:	80 81       	ld	r24, Z
     398:	80 68       	ori	r24, 0x80	; 128
     39a:	80 83       	st	Z, r24
	TCCR1A &= ~(1 << COM1A0);
     39c:	80 81       	ld	r24, Z
     39e:	8f 7b       	andi	r24, 0xBF	; 191
     3a0:	80 83       	st	Z, r24
	//Set top value
	ICR1 = TOP;
     3a2:	8f e3       	ldi	r24, 0x3F	; 63
     3a4:	9c e9       	ldi	r25, 0x9C	; 156
     3a6:	90 93 87 00 	sts	0x0087, r25
     3aa:	80 93 86 00 	sts	0x0086, r24
	//Set compare value1
	OCR1A = NEUTRAL_SERVO * (TOP + 1) * FPWM;
     3ae:	88 eb       	ldi	r24, 0xB8	; 184
     3b0:	9b e0       	ldi	r25, 0x0B	; 11
     3b2:	90 93 89 00 	sts	0x0089, r25
     3b6:	80 93 88 00 	sts	0x0088, r24
	//Set prescaler
	TCCR1B &= ~(1 << CS12) & ~(1 << CS10);
     3ba:	8c 91       	ld	r24, X
     3bc:	8a 7f       	andi	r24, 0xFA	; 250
     3be:	8c 93       	st	X, r24
	TCCR1B |= (1 << CS11);
     3c0:	8c 91       	ld	r24, X
     3c2:	82 60       	ori	r24, 0x02	; 2
     3c4:	8c 93       	st	X, r24
     3c6:	08 95       	ret

000003c8 <Servo_pwm>:
}

void Servo_pwm(float x){
     3c8:	cf 92       	push	r12
     3ca:	df 92       	push	r13
     3cc:	ef 92       	push	r14
     3ce:	ff 92       	push	r15
	float y = - SLOPE_SERVO * x + NEUTRAL_SERVO;
     3d0:	2c e9       	ldi	r18, 0x9C	; 156
     3d2:	33 e5       	ldi	r19, 0x53	; 83
     3d4:	49 ec       	ldi	r20, 0xC9	; 201
     3d6:	56 eb       	ldi	r21, 0xB6	; 182
     3d8:	c2 d1       	rcall	.+900    	; 0x75e <__mulsf3>
     3da:	26 ea       	ldi	r18, 0xA6	; 166
     3dc:	3b e9       	ldi	r19, 0x9B	; 155
     3de:	44 ec       	ldi	r20, 0xC4	; 196
     3e0:	5a e3       	ldi	r21, 0x3A	; 58
     3e2:	73 d0       	rcall	.+230    	; 0x4ca <__addsf3>
     3e4:	6b 01       	movw	r12, r22
     3e6:	7c 01       	movw	r14, r24
	
	if(y > TOP_SERVO){
     3e8:	27 e2       	ldi	r18, 0x27	; 39
     3ea:	30 ea       	ldi	r19, 0xA0	; 160
     3ec:	49 e0       	ldi	r20, 0x09	; 9
     3ee:	5b e3       	ldi	r21, 0x3B	; 59
     3f0:	b2 d1       	rcall	.+868    	; 0x756 <__gesf2>
     3f2:	18 16       	cp	r1, r24
     3f4:	54 f0       	brlt	.+20     	; 0x40a <Servo_pwm+0x42>
		y = TOP_SERVO;
	}
	else if(y < BOTTOM_SERVO){
     3f6:	2a ef       	ldi	r18, 0xFA	; 250
     3f8:	3d ee       	ldi	r19, 0xED	; 237
     3fa:	4b e6       	ldi	r20, 0x6B	; 107
     3fc:	5a e3       	ldi	r21, 0x3A	; 58
     3fe:	c7 01       	movw	r24, r14
     400:	b6 01       	movw	r22, r12
     402:	c7 d0       	rcall	.+398    	; 0x592 <__cmpsf2>
     404:	88 23       	and	r24, r24
     406:	64 f0       	brlt	.+24     	; 0x420 <Servo_pwm+0x58>
     408:	15 c0       	rjmp	.+42     	; 0x434 <Servo_pwm+0x6c>

void Servo_pwm(float x){
	float y = - SLOPE_SERVO * x + NEUTRAL_SERVO;
	
	if(y > TOP_SERVO){
		y = TOP_SERVO;
     40a:	0f 2e       	mov	r0, r31
     40c:	f7 e2       	ldi	r31, 0x27	; 39
     40e:	cf 2e       	mov	r12, r31
     410:	f0 ea       	ldi	r31, 0xA0	; 160
     412:	df 2e       	mov	r13, r31
     414:	f9 e0       	ldi	r31, 0x09	; 9
     416:	ef 2e       	mov	r14, r31
     418:	fb e3       	ldi	r31, 0x3B	; 59
     41a:	ff 2e       	mov	r15, r31
     41c:	f0 2d       	mov	r31, r0
     41e:	0a c0       	rjmp	.+20     	; 0x434 <Servo_pwm+0x6c>
	}
	else if(y < BOTTOM_SERVO){
		y = BOTTOM_SERVO;
     420:	0f 2e       	mov	r0, r31
     422:	fa ef       	ldi	r31, 0xFA	; 250
     424:	cf 2e       	mov	r12, r31
     426:	fd ee       	ldi	r31, 0xED	; 237
     428:	df 2e       	mov	r13, r31
     42a:	fb e6       	ldi	r31, 0x6B	; 107
     42c:	ef 2e       	mov	r14, r31
     42e:	fa e3       	ldi	r31, 0x3A	; 58
     430:	ff 2e       	mov	r15, r31
     432:	f0 2d       	mov	r31, r0
	}
	
	OCR1A = y * (TOP + 1) * FPWM;
     434:	20 e0       	ldi	r18, 0x00	; 0
     436:	30 e4       	ldi	r19, 0x40	; 64
     438:	4c e1       	ldi	r20, 0x1C	; 28
     43a:	57 e4       	ldi	r21, 0x47	; 71
     43c:	c7 01       	movw	r24, r14
     43e:	b6 01       	movw	r22, r12
     440:	8e d1       	rcall	.+796    	; 0x75e <__mulsf3>
     442:	20 e0       	ldi	r18, 0x00	; 0
     444:	30 e0       	ldi	r19, 0x00	; 0
     446:	48 e4       	ldi	r20, 0x48	; 72
     448:	52 e4       	ldi	r21, 0x42	; 66
     44a:	89 d1       	rcall	.+786    	; 0x75e <__mulsf3>
     44c:	a6 d0       	rcall	.+332    	; 0x59a <__fixunssfsi>
     44e:	70 93 89 00 	sts	0x0089, r23
     452:	60 93 88 00 	sts	0x0088, r22
     456:	ff 90       	pop	r15
     458:	ef 90       	pop	r14
     45a:	df 90       	pop	r13
     45c:	cf 90       	pop	r12
     45e:	08 95       	ret

00000460 <SPI_Init>:
#include <avr/io.h>

void SPI_Init(void)
{
	/* Set CS, MOSI and SCK output, MISO input */
	DDRB |= (1<<PB7)| (1<<PB1)|(1<<PB2);
     460:	84 b1       	in	r24, 0x04	; 4
     462:	86 68       	ori	r24, 0x86	; 134
     464:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1<<PB3);
     466:	23 98       	cbi	0x04, 3	; 4
	DDRB |= 1;
     468:	20 9a       	sbi	0x04, 0	; 4
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
     46a:	81 e5       	ldi	r24, 0x51	; 81
     46c:	8c bd       	out	0x2c, r24	; 44
     46e:	08 95       	ret

00000470 <SPI_write>:
}

void SPI_write(char cData)
{
	/* Start transmission */
	SPDR = cData;
     470:	8e bd       	out	0x2e, r24	; 46
	/* Wait for transmission complete */
	while (!(SPSR & (1<<SPIF)))
     472:	0d b4       	in	r0, 0x2d	; 45
     474:	07 fe       	sbrs	r0, 7
     476:	fd cf       	rjmp	.-6      	; 0x472 <SPI_write+0x2>
		;
}
     478:	08 95       	ret

0000047a <SPI_read>:

char SPI_read(void)
{
	/* Start transmission */
	SPDR = 0x00;
     47a:	1e bc       	out	0x2e, r1	; 46
	/* Wait for transmission complete */
	while (!(SPSR & (1<<SPIF)))
     47c:	0d b4       	in	r0, 0x2d	; 45
     47e:	07 fe       	sbrs	r0, 7
     480:	fd cf       	rjmp	.-6      	; 0x47c <SPI_read+0x2>
		;
	return SPDR;
     482:	8e b5       	in	r24, 0x2e	; 46
}
     484:	08 95       	ret

00000486 <SPI_on>:

void SPI_on(void)
{
	PORTB &= 0x38;
     486:	85 b1       	in	r24, 0x05	; 5
     488:	88 73       	andi	r24, 0x38	; 56
     48a:	85 b9       	out	0x05, r24	; 5
     48c:	08 95       	ret

0000048e <SPI_off>:
}

void SPI_off(void)
{
	PORTB |= (1 << PB7);
     48e:	2f 9a       	sbi	0x05, 7	; 5
     490:	08 95       	ret

00000492 <UART_Transmit>:
#include <stdio.h>
#include <avr/io.h>

void UART_Transmit(unsigned char data){
	/* Wait for empty transmit buffer */
	while(!(UCSR0A&(1<<UDRE0)))
     492:	e0 ec       	ldi	r30, 0xC0	; 192
     494:	f0 e0       	ldi	r31, 0x00	; 0
     496:	90 81       	ld	r25, Z
     498:	95 ff       	sbrs	r25, 5
     49a:	fd cf       	rjmp	.-6      	; 0x496 <UART_Transmit+0x4>
		;
	/* Put data into buffer */
	UDR0 = data;
     49c:	80 93 c6 00 	sts	0x00C6, r24
     4a0:	08 95       	ret

000004a2 <UART_Receive>:
}

unsigned char UART_Receive(void){
	/* Wait for data to be received */
	while(!(UCSR0A&(1<<RXC0)))
     4a2:	e0 ec       	ldi	r30, 0xC0	; 192
     4a4:	f0 e0       	ldi	r31, 0x00	; 0
     4a6:	80 81       	ld	r24, Z
     4a8:	88 23       	and	r24, r24
     4aa:	ec f7       	brge	.-6      	; 0x4a6 <UART_Receive+0x4>
		;
	/* Get and return received data from buffer */
	return UDR0;
     4ac:	80 91 c6 00 	lds	r24, 0x00C6
}
     4b0:	08 95       	ret

000004b2 <UART_Init>:

void UART_Init(unsigned int ubrr){
	/* Set baud rate */
	UBRR0L = (unsigned char) ubrr;
     4b2:	80 93 c4 00 	sts	0x00C4, r24
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     4b6:	88 e1       	ldi	r24, 0x18	; 24
     4b8:	80 93 c1 00 	sts	0x00C1, r24
	/* Link printf to UART transmissions */	
	fdevopen(UART_Transmit,UART_Receive);
     4bc:	61 e5       	ldi	r22, 0x51	; 81
     4be:	72 e0       	ldi	r23, 0x02	; 2
     4c0:	89 e4       	ldi	r24, 0x49	; 73
     4c2:	92 e0       	ldi	r25, 0x02	; 2
     4c4:	af c1       	rjmp	.+862    	; 0x824 <fdevopen>
     4c6:	08 95       	ret

000004c8 <__subsf3>:
     4c8:	50 58       	subi	r21, 0x80	; 128

000004ca <__addsf3>:
     4ca:	bb 27       	eor	r27, r27
     4cc:	aa 27       	eor	r26, r26
     4ce:	0e d0       	rcall	.+28     	; 0x4ec <__addsf3x>
     4d0:	08 c1       	rjmp	.+528    	; 0x6e2 <__fp_round>
     4d2:	f9 d0       	rcall	.+498    	; 0x6c6 <__fp_pscA>
     4d4:	30 f0       	brcs	.+12     	; 0x4e2 <__addsf3+0x18>
     4d6:	fe d0       	rcall	.+508    	; 0x6d4 <__fp_pscB>
     4d8:	20 f0       	brcs	.+8      	; 0x4e2 <__addsf3+0x18>
     4da:	31 f4       	brne	.+12     	; 0x4e8 <__addsf3+0x1e>
     4dc:	9f 3f       	cpi	r25, 0xFF	; 255
     4de:	11 f4       	brne	.+4      	; 0x4e4 <__addsf3+0x1a>
     4e0:	1e f4       	brtc	.+6      	; 0x4e8 <__addsf3+0x1e>
     4e2:	ee c0       	rjmp	.+476    	; 0x6c0 <__fp_nan>
     4e4:	0e f4       	brtc	.+2      	; 0x4e8 <__addsf3+0x1e>
     4e6:	e0 95       	com	r30
     4e8:	e7 fb       	bst	r30, 7
     4ea:	e4 c0       	rjmp	.+456    	; 0x6b4 <__fp_inf>

000004ec <__addsf3x>:
     4ec:	e9 2f       	mov	r30, r25
     4ee:	0a d1       	rcall	.+532    	; 0x704 <__fp_split3>
     4f0:	80 f3       	brcs	.-32     	; 0x4d2 <__addsf3+0x8>
     4f2:	ba 17       	cp	r27, r26
     4f4:	62 07       	cpc	r22, r18
     4f6:	73 07       	cpc	r23, r19
     4f8:	84 07       	cpc	r24, r20
     4fa:	95 07       	cpc	r25, r21
     4fc:	18 f0       	brcs	.+6      	; 0x504 <__addsf3x+0x18>
     4fe:	71 f4       	brne	.+28     	; 0x51c <__addsf3x+0x30>
     500:	9e f5       	brtc	.+102    	; 0x568 <__addsf3x+0x7c>
     502:	22 c1       	rjmp	.+580    	; 0x748 <__fp_zero>
     504:	0e f4       	brtc	.+2      	; 0x508 <__addsf3x+0x1c>
     506:	e0 95       	com	r30
     508:	0b 2e       	mov	r0, r27
     50a:	ba 2f       	mov	r27, r26
     50c:	a0 2d       	mov	r26, r0
     50e:	0b 01       	movw	r0, r22
     510:	b9 01       	movw	r22, r18
     512:	90 01       	movw	r18, r0
     514:	0c 01       	movw	r0, r24
     516:	ca 01       	movw	r24, r20
     518:	a0 01       	movw	r20, r0
     51a:	11 24       	eor	r1, r1
     51c:	ff 27       	eor	r31, r31
     51e:	59 1b       	sub	r21, r25
     520:	99 f0       	breq	.+38     	; 0x548 <__addsf3x+0x5c>
     522:	59 3f       	cpi	r21, 0xF9	; 249
     524:	50 f4       	brcc	.+20     	; 0x53a <__addsf3x+0x4e>
     526:	50 3e       	cpi	r21, 0xE0	; 224
     528:	68 f1       	brcs	.+90     	; 0x584 <__addsf3x+0x98>
     52a:	1a 16       	cp	r1, r26
     52c:	f0 40       	sbci	r31, 0x00	; 0
     52e:	a2 2f       	mov	r26, r18
     530:	23 2f       	mov	r18, r19
     532:	34 2f       	mov	r19, r20
     534:	44 27       	eor	r20, r20
     536:	58 5f       	subi	r21, 0xF8	; 248
     538:	f3 cf       	rjmp	.-26     	; 0x520 <__addsf3x+0x34>
     53a:	46 95       	lsr	r20
     53c:	37 95       	ror	r19
     53e:	27 95       	ror	r18
     540:	a7 95       	ror	r26
     542:	f0 40       	sbci	r31, 0x00	; 0
     544:	53 95       	inc	r21
     546:	c9 f7       	brne	.-14     	; 0x53a <__addsf3x+0x4e>
     548:	7e f4       	brtc	.+30     	; 0x568 <__addsf3x+0x7c>
     54a:	1f 16       	cp	r1, r31
     54c:	ba 0b       	sbc	r27, r26
     54e:	62 0b       	sbc	r22, r18
     550:	73 0b       	sbc	r23, r19
     552:	84 0b       	sbc	r24, r20
     554:	ba f0       	brmi	.+46     	; 0x584 <__addsf3x+0x98>
     556:	91 50       	subi	r25, 0x01	; 1
     558:	a1 f0       	breq	.+40     	; 0x582 <__addsf3x+0x96>
     55a:	ff 0f       	add	r31, r31
     55c:	bb 1f       	adc	r27, r27
     55e:	66 1f       	adc	r22, r22
     560:	77 1f       	adc	r23, r23
     562:	88 1f       	adc	r24, r24
     564:	c2 f7       	brpl	.-16     	; 0x556 <__addsf3x+0x6a>
     566:	0e c0       	rjmp	.+28     	; 0x584 <__addsf3x+0x98>
     568:	ba 0f       	add	r27, r26
     56a:	62 1f       	adc	r22, r18
     56c:	73 1f       	adc	r23, r19
     56e:	84 1f       	adc	r24, r20
     570:	48 f4       	brcc	.+18     	; 0x584 <__addsf3x+0x98>
     572:	87 95       	ror	r24
     574:	77 95       	ror	r23
     576:	67 95       	ror	r22
     578:	b7 95       	ror	r27
     57a:	f7 95       	ror	r31
     57c:	9e 3f       	cpi	r25, 0xFE	; 254
     57e:	08 f0       	brcs	.+2      	; 0x582 <__addsf3x+0x96>
     580:	b3 cf       	rjmp	.-154    	; 0x4e8 <__addsf3+0x1e>
     582:	93 95       	inc	r25
     584:	88 0f       	add	r24, r24
     586:	08 f0       	brcs	.+2      	; 0x58a <__addsf3x+0x9e>
     588:	99 27       	eor	r25, r25
     58a:	ee 0f       	add	r30, r30
     58c:	97 95       	ror	r25
     58e:	87 95       	ror	r24
     590:	08 95       	ret

00000592 <__cmpsf2>:
     592:	6c d0       	rcall	.+216    	; 0x66c <__fp_cmp>
     594:	08 f4       	brcc	.+2      	; 0x598 <__cmpsf2+0x6>
     596:	81 e0       	ldi	r24, 0x01	; 1
     598:	08 95       	ret

0000059a <__fixunssfsi>:
     59a:	bc d0       	rcall	.+376    	; 0x714 <__fp_splitA>
     59c:	88 f0       	brcs	.+34     	; 0x5c0 <__fixunssfsi+0x26>
     59e:	9f 57       	subi	r25, 0x7F	; 127
     5a0:	90 f0       	brcs	.+36     	; 0x5c6 <__fixunssfsi+0x2c>
     5a2:	b9 2f       	mov	r27, r25
     5a4:	99 27       	eor	r25, r25
     5a6:	b7 51       	subi	r27, 0x17	; 23
     5a8:	a0 f0       	brcs	.+40     	; 0x5d2 <__fixunssfsi+0x38>
     5aa:	d1 f0       	breq	.+52     	; 0x5e0 <__fixunssfsi+0x46>
     5ac:	66 0f       	add	r22, r22
     5ae:	77 1f       	adc	r23, r23
     5b0:	88 1f       	adc	r24, r24
     5b2:	99 1f       	adc	r25, r25
     5b4:	1a f0       	brmi	.+6      	; 0x5bc <__fixunssfsi+0x22>
     5b6:	ba 95       	dec	r27
     5b8:	c9 f7       	brne	.-14     	; 0x5ac <__fixunssfsi+0x12>
     5ba:	12 c0       	rjmp	.+36     	; 0x5e0 <__fixunssfsi+0x46>
     5bc:	b1 30       	cpi	r27, 0x01	; 1
     5be:	81 f0       	breq	.+32     	; 0x5e0 <__fixunssfsi+0x46>
     5c0:	c3 d0       	rcall	.+390    	; 0x748 <__fp_zero>
     5c2:	b1 e0       	ldi	r27, 0x01	; 1
     5c4:	08 95       	ret
     5c6:	c0 c0       	rjmp	.+384    	; 0x748 <__fp_zero>
     5c8:	67 2f       	mov	r22, r23
     5ca:	78 2f       	mov	r23, r24
     5cc:	88 27       	eor	r24, r24
     5ce:	b8 5f       	subi	r27, 0xF8	; 248
     5d0:	39 f0       	breq	.+14     	; 0x5e0 <__fixunssfsi+0x46>
     5d2:	b9 3f       	cpi	r27, 0xF9	; 249
     5d4:	cc f3       	brlt	.-14     	; 0x5c8 <__fixunssfsi+0x2e>
     5d6:	86 95       	lsr	r24
     5d8:	77 95       	ror	r23
     5da:	67 95       	ror	r22
     5dc:	b3 95       	inc	r27
     5de:	d9 f7       	brne	.-10     	; 0x5d6 <__fixunssfsi+0x3c>
     5e0:	3e f4       	brtc	.+14     	; 0x5f0 <__fixunssfsi+0x56>
     5e2:	90 95       	com	r25
     5e4:	80 95       	com	r24
     5e6:	70 95       	com	r23
     5e8:	61 95       	neg	r22
     5ea:	7f 4f       	sbci	r23, 0xFF	; 255
     5ec:	8f 4f       	sbci	r24, 0xFF	; 255
     5ee:	9f 4f       	sbci	r25, 0xFF	; 255
     5f0:	08 95       	ret

000005f2 <__floatunsisf>:
     5f2:	e8 94       	clt
     5f4:	09 c0       	rjmp	.+18     	; 0x608 <__floatsisf+0x12>

000005f6 <__floatsisf>:
     5f6:	97 fb       	bst	r25, 7
     5f8:	3e f4       	brtc	.+14     	; 0x608 <__floatsisf+0x12>
     5fa:	90 95       	com	r25
     5fc:	80 95       	com	r24
     5fe:	70 95       	com	r23
     600:	61 95       	neg	r22
     602:	7f 4f       	sbci	r23, 0xFF	; 255
     604:	8f 4f       	sbci	r24, 0xFF	; 255
     606:	9f 4f       	sbci	r25, 0xFF	; 255
     608:	99 23       	and	r25, r25
     60a:	a9 f0       	breq	.+42     	; 0x636 <__floatsisf+0x40>
     60c:	f9 2f       	mov	r31, r25
     60e:	96 e9       	ldi	r25, 0x96	; 150
     610:	bb 27       	eor	r27, r27
     612:	93 95       	inc	r25
     614:	f6 95       	lsr	r31
     616:	87 95       	ror	r24
     618:	77 95       	ror	r23
     61a:	67 95       	ror	r22
     61c:	b7 95       	ror	r27
     61e:	f1 11       	cpse	r31, r1
     620:	f8 cf       	rjmp	.-16     	; 0x612 <__floatsisf+0x1c>
     622:	fa f4       	brpl	.+62     	; 0x662 <__floatsisf+0x6c>
     624:	bb 0f       	add	r27, r27
     626:	11 f4       	brne	.+4      	; 0x62c <__floatsisf+0x36>
     628:	60 ff       	sbrs	r22, 0
     62a:	1b c0       	rjmp	.+54     	; 0x662 <__floatsisf+0x6c>
     62c:	6f 5f       	subi	r22, 0xFF	; 255
     62e:	7f 4f       	sbci	r23, 0xFF	; 255
     630:	8f 4f       	sbci	r24, 0xFF	; 255
     632:	9f 4f       	sbci	r25, 0xFF	; 255
     634:	16 c0       	rjmp	.+44     	; 0x662 <__floatsisf+0x6c>
     636:	88 23       	and	r24, r24
     638:	11 f0       	breq	.+4      	; 0x63e <__floatsisf+0x48>
     63a:	96 e9       	ldi	r25, 0x96	; 150
     63c:	11 c0       	rjmp	.+34     	; 0x660 <__floatsisf+0x6a>
     63e:	77 23       	and	r23, r23
     640:	21 f0       	breq	.+8      	; 0x64a <__floatsisf+0x54>
     642:	9e e8       	ldi	r25, 0x8E	; 142
     644:	87 2f       	mov	r24, r23
     646:	76 2f       	mov	r23, r22
     648:	05 c0       	rjmp	.+10     	; 0x654 <__floatsisf+0x5e>
     64a:	66 23       	and	r22, r22
     64c:	71 f0       	breq	.+28     	; 0x66a <__floatsisf+0x74>
     64e:	96 e8       	ldi	r25, 0x86	; 134
     650:	86 2f       	mov	r24, r22
     652:	70 e0       	ldi	r23, 0x00	; 0
     654:	60 e0       	ldi	r22, 0x00	; 0
     656:	2a f0       	brmi	.+10     	; 0x662 <__floatsisf+0x6c>
     658:	9a 95       	dec	r25
     65a:	66 0f       	add	r22, r22
     65c:	77 1f       	adc	r23, r23
     65e:	88 1f       	adc	r24, r24
     660:	da f7       	brpl	.-10     	; 0x658 <__floatsisf+0x62>
     662:	88 0f       	add	r24, r24
     664:	96 95       	lsr	r25
     666:	87 95       	ror	r24
     668:	97 f9       	bld	r25, 7
     66a:	08 95       	ret

0000066c <__fp_cmp>:
     66c:	99 0f       	add	r25, r25
     66e:	00 08       	sbc	r0, r0
     670:	55 0f       	add	r21, r21
     672:	aa 0b       	sbc	r26, r26
     674:	e0 e8       	ldi	r30, 0x80	; 128
     676:	fe ef       	ldi	r31, 0xFE	; 254
     678:	16 16       	cp	r1, r22
     67a:	17 06       	cpc	r1, r23
     67c:	e8 07       	cpc	r30, r24
     67e:	f9 07       	cpc	r31, r25
     680:	c0 f0       	brcs	.+48     	; 0x6b2 <__fp_cmp+0x46>
     682:	12 16       	cp	r1, r18
     684:	13 06       	cpc	r1, r19
     686:	e4 07       	cpc	r30, r20
     688:	f5 07       	cpc	r31, r21
     68a:	98 f0       	brcs	.+38     	; 0x6b2 <__fp_cmp+0x46>
     68c:	62 1b       	sub	r22, r18
     68e:	73 0b       	sbc	r23, r19
     690:	84 0b       	sbc	r24, r20
     692:	95 0b       	sbc	r25, r21
     694:	39 f4       	brne	.+14     	; 0x6a4 <__fp_cmp+0x38>
     696:	0a 26       	eor	r0, r26
     698:	61 f0       	breq	.+24     	; 0x6b2 <__fp_cmp+0x46>
     69a:	23 2b       	or	r18, r19
     69c:	24 2b       	or	r18, r20
     69e:	25 2b       	or	r18, r21
     6a0:	21 f4       	brne	.+8      	; 0x6aa <__fp_cmp+0x3e>
     6a2:	08 95       	ret
     6a4:	0a 26       	eor	r0, r26
     6a6:	09 f4       	brne	.+2      	; 0x6aa <__fp_cmp+0x3e>
     6a8:	a1 40       	sbci	r26, 0x01	; 1
     6aa:	a6 95       	lsr	r26
     6ac:	8f ef       	ldi	r24, 0xFF	; 255
     6ae:	81 1d       	adc	r24, r1
     6b0:	81 1d       	adc	r24, r1
     6b2:	08 95       	ret

000006b4 <__fp_inf>:
     6b4:	97 f9       	bld	r25, 7
     6b6:	9f 67       	ori	r25, 0x7F	; 127
     6b8:	80 e8       	ldi	r24, 0x80	; 128
     6ba:	70 e0       	ldi	r23, 0x00	; 0
     6bc:	60 e0       	ldi	r22, 0x00	; 0
     6be:	08 95       	ret

000006c0 <__fp_nan>:
     6c0:	9f ef       	ldi	r25, 0xFF	; 255
     6c2:	80 ec       	ldi	r24, 0xC0	; 192
     6c4:	08 95       	ret

000006c6 <__fp_pscA>:
     6c6:	00 24       	eor	r0, r0
     6c8:	0a 94       	dec	r0
     6ca:	16 16       	cp	r1, r22
     6cc:	17 06       	cpc	r1, r23
     6ce:	18 06       	cpc	r1, r24
     6d0:	09 06       	cpc	r0, r25
     6d2:	08 95       	ret

000006d4 <__fp_pscB>:
     6d4:	00 24       	eor	r0, r0
     6d6:	0a 94       	dec	r0
     6d8:	12 16       	cp	r1, r18
     6da:	13 06       	cpc	r1, r19
     6dc:	14 06       	cpc	r1, r20
     6de:	05 06       	cpc	r0, r21
     6e0:	08 95       	ret

000006e2 <__fp_round>:
     6e2:	09 2e       	mov	r0, r25
     6e4:	03 94       	inc	r0
     6e6:	00 0c       	add	r0, r0
     6e8:	11 f4       	brne	.+4      	; 0x6ee <__fp_round+0xc>
     6ea:	88 23       	and	r24, r24
     6ec:	52 f0       	brmi	.+20     	; 0x702 <__fp_round+0x20>
     6ee:	bb 0f       	add	r27, r27
     6f0:	40 f4       	brcc	.+16     	; 0x702 <__fp_round+0x20>
     6f2:	bf 2b       	or	r27, r31
     6f4:	11 f4       	brne	.+4      	; 0x6fa <__fp_round+0x18>
     6f6:	60 ff       	sbrs	r22, 0
     6f8:	04 c0       	rjmp	.+8      	; 0x702 <__fp_round+0x20>
     6fa:	6f 5f       	subi	r22, 0xFF	; 255
     6fc:	7f 4f       	sbci	r23, 0xFF	; 255
     6fe:	8f 4f       	sbci	r24, 0xFF	; 255
     700:	9f 4f       	sbci	r25, 0xFF	; 255
     702:	08 95       	ret

00000704 <__fp_split3>:
     704:	57 fd       	sbrc	r21, 7
     706:	90 58       	subi	r25, 0x80	; 128
     708:	44 0f       	add	r20, r20
     70a:	55 1f       	adc	r21, r21
     70c:	59 f0       	breq	.+22     	; 0x724 <__fp_splitA+0x10>
     70e:	5f 3f       	cpi	r21, 0xFF	; 255
     710:	71 f0       	breq	.+28     	; 0x72e <__fp_splitA+0x1a>
     712:	47 95       	ror	r20

00000714 <__fp_splitA>:
     714:	88 0f       	add	r24, r24
     716:	97 fb       	bst	r25, 7
     718:	99 1f       	adc	r25, r25
     71a:	61 f0       	breq	.+24     	; 0x734 <__fp_splitA+0x20>
     71c:	9f 3f       	cpi	r25, 0xFF	; 255
     71e:	79 f0       	breq	.+30     	; 0x73e <__fp_splitA+0x2a>
     720:	87 95       	ror	r24
     722:	08 95       	ret
     724:	12 16       	cp	r1, r18
     726:	13 06       	cpc	r1, r19
     728:	14 06       	cpc	r1, r20
     72a:	55 1f       	adc	r21, r21
     72c:	f2 cf       	rjmp	.-28     	; 0x712 <__fp_split3+0xe>
     72e:	46 95       	lsr	r20
     730:	f1 df       	rcall	.-30     	; 0x714 <__fp_splitA>
     732:	08 c0       	rjmp	.+16     	; 0x744 <__fp_splitA+0x30>
     734:	16 16       	cp	r1, r22
     736:	17 06       	cpc	r1, r23
     738:	18 06       	cpc	r1, r24
     73a:	99 1f       	adc	r25, r25
     73c:	f1 cf       	rjmp	.-30     	; 0x720 <__fp_splitA+0xc>
     73e:	86 95       	lsr	r24
     740:	71 05       	cpc	r23, r1
     742:	61 05       	cpc	r22, r1
     744:	08 94       	sec
     746:	08 95       	ret

00000748 <__fp_zero>:
     748:	e8 94       	clt

0000074a <__fp_szero>:
     74a:	bb 27       	eor	r27, r27
     74c:	66 27       	eor	r22, r22
     74e:	77 27       	eor	r23, r23
     750:	cb 01       	movw	r24, r22
     752:	97 f9       	bld	r25, 7
     754:	08 95       	ret

00000756 <__gesf2>:
     756:	8a df       	rcall	.-236    	; 0x66c <__fp_cmp>
     758:	08 f4       	brcc	.+2      	; 0x75c <__gesf2+0x6>
     75a:	8f ef       	ldi	r24, 0xFF	; 255
     75c:	08 95       	ret

0000075e <__mulsf3>:
     75e:	0b d0       	rcall	.+22     	; 0x776 <__mulsf3x>
     760:	c0 cf       	rjmp	.-128    	; 0x6e2 <__fp_round>
     762:	b1 df       	rcall	.-158    	; 0x6c6 <__fp_pscA>
     764:	28 f0       	brcs	.+10     	; 0x770 <__mulsf3+0x12>
     766:	b6 df       	rcall	.-148    	; 0x6d4 <__fp_pscB>
     768:	18 f0       	brcs	.+6      	; 0x770 <__mulsf3+0x12>
     76a:	95 23       	and	r25, r21
     76c:	09 f0       	breq	.+2      	; 0x770 <__mulsf3+0x12>
     76e:	a2 cf       	rjmp	.-188    	; 0x6b4 <__fp_inf>
     770:	a7 cf       	rjmp	.-178    	; 0x6c0 <__fp_nan>
     772:	11 24       	eor	r1, r1
     774:	ea cf       	rjmp	.-44     	; 0x74a <__fp_szero>

00000776 <__mulsf3x>:
     776:	c6 df       	rcall	.-116    	; 0x704 <__fp_split3>
     778:	a0 f3       	brcs	.-24     	; 0x762 <__mulsf3+0x4>

0000077a <__mulsf3_pse>:
     77a:	95 9f       	mul	r25, r21
     77c:	d1 f3       	breq	.-12     	; 0x772 <__mulsf3+0x14>
     77e:	95 0f       	add	r25, r21
     780:	50 e0       	ldi	r21, 0x00	; 0
     782:	55 1f       	adc	r21, r21
     784:	62 9f       	mul	r22, r18
     786:	f0 01       	movw	r30, r0
     788:	72 9f       	mul	r23, r18
     78a:	bb 27       	eor	r27, r27
     78c:	f0 0d       	add	r31, r0
     78e:	b1 1d       	adc	r27, r1
     790:	63 9f       	mul	r22, r19
     792:	aa 27       	eor	r26, r26
     794:	f0 0d       	add	r31, r0
     796:	b1 1d       	adc	r27, r1
     798:	aa 1f       	adc	r26, r26
     79a:	64 9f       	mul	r22, r20
     79c:	66 27       	eor	r22, r22
     79e:	b0 0d       	add	r27, r0
     7a0:	a1 1d       	adc	r26, r1
     7a2:	66 1f       	adc	r22, r22
     7a4:	82 9f       	mul	r24, r18
     7a6:	22 27       	eor	r18, r18
     7a8:	b0 0d       	add	r27, r0
     7aa:	a1 1d       	adc	r26, r1
     7ac:	62 1f       	adc	r22, r18
     7ae:	73 9f       	mul	r23, r19
     7b0:	b0 0d       	add	r27, r0
     7b2:	a1 1d       	adc	r26, r1
     7b4:	62 1f       	adc	r22, r18
     7b6:	83 9f       	mul	r24, r19
     7b8:	a0 0d       	add	r26, r0
     7ba:	61 1d       	adc	r22, r1
     7bc:	22 1f       	adc	r18, r18
     7be:	74 9f       	mul	r23, r20
     7c0:	33 27       	eor	r19, r19
     7c2:	a0 0d       	add	r26, r0
     7c4:	61 1d       	adc	r22, r1
     7c6:	23 1f       	adc	r18, r19
     7c8:	84 9f       	mul	r24, r20
     7ca:	60 0d       	add	r22, r0
     7cc:	21 1d       	adc	r18, r1
     7ce:	82 2f       	mov	r24, r18
     7d0:	76 2f       	mov	r23, r22
     7d2:	6a 2f       	mov	r22, r26
     7d4:	11 24       	eor	r1, r1
     7d6:	9f 57       	subi	r25, 0x7F	; 127
     7d8:	50 40       	sbci	r21, 0x00	; 0
     7da:	8a f0       	brmi	.+34     	; 0x7fe <__mulsf3_pse+0x84>
     7dc:	e1 f0       	breq	.+56     	; 0x816 <__mulsf3_pse+0x9c>
     7de:	88 23       	and	r24, r24
     7e0:	4a f0       	brmi	.+18     	; 0x7f4 <__mulsf3_pse+0x7a>
     7e2:	ee 0f       	add	r30, r30
     7e4:	ff 1f       	adc	r31, r31
     7e6:	bb 1f       	adc	r27, r27
     7e8:	66 1f       	adc	r22, r22
     7ea:	77 1f       	adc	r23, r23
     7ec:	88 1f       	adc	r24, r24
     7ee:	91 50       	subi	r25, 0x01	; 1
     7f0:	50 40       	sbci	r21, 0x00	; 0
     7f2:	a9 f7       	brne	.-22     	; 0x7de <__mulsf3_pse+0x64>
     7f4:	9e 3f       	cpi	r25, 0xFE	; 254
     7f6:	51 05       	cpc	r21, r1
     7f8:	70 f0       	brcs	.+28     	; 0x816 <__mulsf3_pse+0x9c>
     7fa:	5c cf       	rjmp	.-328    	; 0x6b4 <__fp_inf>
     7fc:	a6 cf       	rjmp	.-180    	; 0x74a <__fp_szero>
     7fe:	5f 3f       	cpi	r21, 0xFF	; 255
     800:	ec f3       	brlt	.-6      	; 0x7fc <__mulsf3_pse+0x82>
     802:	98 3e       	cpi	r25, 0xE8	; 232
     804:	dc f3       	brlt	.-10     	; 0x7fc <__mulsf3_pse+0x82>
     806:	86 95       	lsr	r24
     808:	77 95       	ror	r23
     80a:	67 95       	ror	r22
     80c:	b7 95       	ror	r27
     80e:	f7 95       	ror	r31
     810:	e7 95       	ror	r30
     812:	9f 5f       	subi	r25, 0xFF	; 255
     814:	c1 f7       	brne	.-16     	; 0x806 <__mulsf3_pse+0x8c>
     816:	fe 2b       	or	r31, r30
     818:	88 0f       	add	r24, r24
     81a:	91 1d       	adc	r25, r1
     81c:	96 95       	lsr	r25
     81e:	87 95       	ror	r24
     820:	97 f9       	bld	r25, 7
     822:	08 95       	ret

00000824 <fdevopen>:
     824:	0f 93       	push	r16
     826:	1f 93       	push	r17
     828:	cf 93       	push	r28
     82a:	df 93       	push	r29
     82c:	ec 01       	movw	r28, r24
     82e:	8b 01       	movw	r16, r22
     830:	00 97       	sbiw	r24, 0x00	; 0
     832:	31 f4       	brne	.+12     	; 0x840 <fdevopen+0x1c>
     834:	61 15       	cp	r22, r1
     836:	71 05       	cpc	r23, r1
     838:	19 f4       	brne	.+6      	; 0x840 <fdevopen+0x1c>
     83a:	80 e0       	ldi	r24, 0x00	; 0
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	37 c0       	rjmp	.+110    	; 0x8ae <fdevopen+0x8a>
     840:	6e e0       	ldi	r22, 0x0E	; 14
     842:	70 e0       	ldi	r23, 0x00	; 0
     844:	81 e0       	ldi	r24, 0x01	; 1
     846:	90 e0       	ldi	r25, 0x00	; 0
     848:	63 d2       	rcall	.+1222   	; 0xd10 <calloc>
     84a:	fc 01       	movw	r30, r24
     84c:	00 97       	sbiw	r24, 0x00	; 0
     84e:	a9 f3       	breq	.-22     	; 0x83a <fdevopen+0x16>
     850:	80 e8       	ldi	r24, 0x80	; 128
     852:	83 83       	std	Z+3, r24	; 0x03
     854:	01 15       	cp	r16, r1
     856:	11 05       	cpc	r17, r1
     858:	71 f0       	breq	.+28     	; 0x876 <fdevopen+0x52>
     85a:	13 87       	std	Z+11, r17	; 0x0b
     85c:	02 87       	std	Z+10, r16	; 0x0a
     85e:	81 e8       	ldi	r24, 0x81	; 129
     860:	83 83       	std	Z+3, r24	; 0x03
     862:	80 91 24 02 	lds	r24, 0x0224
     866:	90 91 25 02 	lds	r25, 0x0225
     86a:	89 2b       	or	r24, r25
     86c:	21 f4       	brne	.+8      	; 0x876 <fdevopen+0x52>
     86e:	f0 93 25 02 	sts	0x0225, r31
     872:	e0 93 24 02 	sts	0x0224, r30
     876:	20 97       	sbiw	r28, 0x00	; 0
     878:	c9 f0       	breq	.+50     	; 0x8ac <fdevopen+0x88>
     87a:	d1 87       	std	Z+9, r29	; 0x09
     87c:	c0 87       	std	Z+8, r28	; 0x08
     87e:	83 81       	ldd	r24, Z+3	; 0x03
     880:	82 60       	ori	r24, 0x02	; 2
     882:	83 83       	std	Z+3, r24	; 0x03
     884:	80 91 26 02 	lds	r24, 0x0226
     888:	90 91 27 02 	lds	r25, 0x0227
     88c:	89 2b       	or	r24, r25
     88e:	71 f4       	brne	.+28     	; 0x8ac <fdevopen+0x88>
     890:	f0 93 27 02 	sts	0x0227, r31
     894:	e0 93 26 02 	sts	0x0226, r30
     898:	80 91 28 02 	lds	r24, 0x0228
     89c:	90 91 29 02 	lds	r25, 0x0229
     8a0:	89 2b       	or	r24, r25
     8a2:	21 f4       	brne	.+8      	; 0x8ac <fdevopen+0x88>
     8a4:	f0 93 29 02 	sts	0x0229, r31
     8a8:	e0 93 28 02 	sts	0x0228, r30
     8ac:	cf 01       	movw	r24, r30
     8ae:	df 91       	pop	r29
     8b0:	cf 91       	pop	r28
     8b2:	1f 91       	pop	r17
     8b4:	0f 91       	pop	r16
     8b6:	08 95       	ret

000008b8 <printf>:
     8b8:	cf 93       	push	r28
     8ba:	df 93       	push	r29
     8bc:	cd b7       	in	r28, 0x3d	; 61
     8be:	de b7       	in	r29, 0x3e	; 62
     8c0:	fe 01       	movw	r30, r28
     8c2:	36 96       	adiw	r30, 0x06	; 6
     8c4:	61 91       	ld	r22, Z+
     8c6:	71 91       	ld	r23, Z+
     8c8:	af 01       	movw	r20, r30
     8ca:	80 91 26 02 	lds	r24, 0x0226
     8ce:	90 91 27 02 	lds	r25, 0x0227
     8d2:	30 d0       	rcall	.+96     	; 0x934 <vfprintf>
     8d4:	df 91       	pop	r29
     8d6:	cf 91       	pop	r28
     8d8:	08 95       	ret

000008da <puts>:
     8da:	0f 93       	push	r16
     8dc:	1f 93       	push	r17
     8de:	cf 93       	push	r28
     8e0:	df 93       	push	r29
     8e2:	e0 91 26 02 	lds	r30, 0x0226
     8e6:	f0 91 27 02 	lds	r31, 0x0227
     8ea:	23 81       	ldd	r18, Z+3	; 0x03
     8ec:	21 ff       	sbrs	r18, 1
     8ee:	1b c0       	rjmp	.+54     	; 0x926 <puts+0x4c>
     8f0:	ec 01       	movw	r28, r24
     8f2:	00 e0       	ldi	r16, 0x00	; 0
     8f4:	10 e0       	ldi	r17, 0x00	; 0
     8f6:	89 91       	ld	r24, Y+
     8f8:	60 91 26 02 	lds	r22, 0x0226
     8fc:	70 91 27 02 	lds	r23, 0x0227
     900:	db 01       	movw	r26, r22
     902:	18 96       	adiw	r26, 0x08	; 8
     904:	ed 91       	ld	r30, X+
     906:	fc 91       	ld	r31, X
     908:	19 97       	sbiw	r26, 0x09	; 9
     90a:	88 23       	and	r24, r24
     90c:	31 f0       	breq	.+12     	; 0x91a <puts+0x40>
     90e:	19 95       	eicall
     910:	89 2b       	or	r24, r25
     912:	89 f3       	breq	.-30     	; 0x8f6 <puts+0x1c>
     914:	0f ef       	ldi	r16, 0xFF	; 255
     916:	1f ef       	ldi	r17, 0xFF	; 255
     918:	ee cf       	rjmp	.-36     	; 0x8f6 <puts+0x1c>
     91a:	8a e0       	ldi	r24, 0x0A	; 10
     91c:	19 95       	eicall
     91e:	89 2b       	or	r24, r25
     920:	11 f4       	brne	.+4      	; 0x926 <puts+0x4c>
     922:	c8 01       	movw	r24, r16
     924:	02 c0       	rjmp	.+4      	; 0x92a <puts+0x50>
     926:	8f ef       	ldi	r24, 0xFF	; 255
     928:	9f ef       	ldi	r25, 0xFF	; 255
     92a:	df 91       	pop	r29
     92c:	cf 91       	pop	r28
     92e:	1f 91       	pop	r17
     930:	0f 91       	pop	r16
     932:	08 95       	ret

00000934 <vfprintf>:
     934:	2f 92       	push	r2
     936:	3f 92       	push	r3
     938:	4f 92       	push	r4
     93a:	5f 92       	push	r5
     93c:	6f 92       	push	r6
     93e:	7f 92       	push	r7
     940:	8f 92       	push	r8
     942:	9f 92       	push	r9
     944:	af 92       	push	r10
     946:	bf 92       	push	r11
     948:	cf 92       	push	r12
     94a:	df 92       	push	r13
     94c:	ef 92       	push	r14
     94e:	ff 92       	push	r15
     950:	0f 93       	push	r16
     952:	1f 93       	push	r17
     954:	cf 93       	push	r28
     956:	df 93       	push	r29
     958:	cd b7       	in	r28, 0x3d	; 61
     95a:	de b7       	in	r29, 0x3e	; 62
     95c:	2c 97       	sbiw	r28, 0x0c	; 12
     95e:	0f b6       	in	r0, 0x3f	; 63
     960:	f8 94       	cli
     962:	de bf       	out	0x3e, r29	; 62
     964:	0f be       	out	0x3f, r0	; 63
     966:	cd bf       	out	0x3d, r28	; 61
     968:	7c 01       	movw	r14, r24
     96a:	6b 01       	movw	r12, r22
     96c:	8a 01       	movw	r16, r20
     96e:	fc 01       	movw	r30, r24
     970:	17 82       	std	Z+7, r1	; 0x07
     972:	16 82       	std	Z+6, r1	; 0x06
     974:	83 81       	ldd	r24, Z+3	; 0x03
     976:	81 ff       	sbrs	r24, 1
     978:	b0 c1       	rjmp	.+864    	; 0xcda <vfprintf+0x3a6>
     97a:	ce 01       	movw	r24, r28
     97c:	01 96       	adiw	r24, 0x01	; 1
     97e:	4c 01       	movw	r8, r24
     980:	f7 01       	movw	r30, r14
     982:	93 81       	ldd	r25, Z+3	; 0x03
     984:	f6 01       	movw	r30, r12
     986:	93 fd       	sbrc	r25, 3
     988:	85 91       	lpm	r24, Z+
     98a:	93 ff       	sbrs	r25, 3
     98c:	81 91       	ld	r24, Z+
     98e:	6f 01       	movw	r12, r30
     990:	88 23       	and	r24, r24
     992:	09 f4       	brne	.+2      	; 0x996 <vfprintf+0x62>
     994:	9e c1       	rjmp	.+828    	; 0xcd2 <vfprintf+0x39e>
     996:	85 32       	cpi	r24, 0x25	; 37
     998:	39 f4       	brne	.+14     	; 0x9a8 <vfprintf+0x74>
     99a:	93 fd       	sbrc	r25, 3
     99c:	85 91       	lpm	r24, Z+
     99e:	93 ff       	sbrs	r25, 3
     9a0:	81 91       	ld	r24, Z+
     9a2:	6f 01       	movw	r12, r30
     9a4:	85 32       	cpi	r24, 0x25	; 37
     9a6:	21 f4       	brne	.+8      	; 0x9b0 <vfprintf+0x7c>
     9a8:	b7 01       	movw	r22, r14
     9aa:	90 e0       	ldi	r25, 0x00	; 0
     9ac:	0f d3       	rcall	.+1566   	; 0xfcc <fputc>
     9ae:	e8 cf       	rjmp	.-48     	; 0x980 <vfprintf+0x4c>
     9b0:	51 2c       	mov	r5, r1
     9b2:	31 2c       	mov	r3, r1
     9b4:	20 e0       	ldi	r18, 0x00	; 0
     9b6:	20 32       	cpi	r18, 0x20	; 32
     9b8:	a0 f4       	brcc	.+40     	; 0x9e2 <vfprintf+0xae>
     9ba:	8b 32       	cpi	r24, 0x2B	; 43
     9bc:	69 f0       	breq	.+26     	; 0x9d8 <vfprintf+0xa4>
     9be:	30 f4       	brcc	.+12     	; 0x9cc <vfprintf+0x98>
     9c0:	80 32       	cpi	r24, 0x20	; 32
     9c2:	59 f0       	breq	.+22     	; 0x9da <vfprintf+0xa6>
     9c4:	83 32       	cpi	r24, 0x23	; 35
     9c6:	69 f4       	brne	.+26     	; 0x9e2 <vfprintf+0xae>
     9c8:	20 61       	ori	r18, 0x10	; 16
     9ca:	2c c0       	rjmp	.+88     	; 0xa24 <vfprintf+0xf0>
     9cc:	8d 32       	cpi	r24, 0x2D	; 45
     9ce:	39 f0       	breq	.+14     	; 0x9de <vfprintf+0xaa>
     9d0:	80 33       	cpi	r24, 0x30	; 48
     9d2:	39 f4       	brne	.+14     	; 0x9e2 <vfprintf+0xae>
     9d4:	21 60       	ori	r18, 0x01	; 1
     9d6:	26 c0       	rjmp	.+76     	; 0xa24 <vfprintf+0xf0>
     9d8:	22 60       	ori	r18, 0x02	; 2
     9da:	24 60       	ori	r18, 0x04	; 4
     9dc:	23 c0       	rjmp	.+70     	; 0xa24 <vfprintf+0xf0>
     9de:	28 60       	ori	r18, 0x08	; 8
     9e0:	21 c0       	rjmp	.+66     	; 0xa24 <vfprintf+0xf0>
     9e2:	27 fd       	sbrc	r18, 7
     9e4:	27 c0       	rjmp	.+78     	; 0xa34 <vfprintf+0x100>
     9e6:	30 ed       	ldi	r19, 0xD0	; 208
     9e8:	38 0f       	add	r19, r24
     9ea:	3a 30       	cpi	r19, 0x0A	; 10
     9ec:	78 f4       	brcc	.+30     	; 0xa0c <vfprintf+0xd8>
     9ee:	26 ff       	sbrs	r18, 6
     9f0:	06 c0       	rjmp	.+12     	; 0x9fe <vfprintf+0xca>
     9f2:	fa e0       	ldi	r31, 0x0A	; 10
     9f4:	5f 9e       	mul	r5, r31
     9f6:	30 0d       	add	r19, r0
     9f8:	11 24       	eor	r1, r1
     9fa:	53 2e       	mov	r5, r19
     9fc:	13 c0       	rjmp	.+38     	; 0xa24 <vfprintf+0xf0>
     9fe:	8a e0       	ldi	r24, 0x0A	; 10
     a00:	38 9e       	mul	r3, r24
     a02:	30 0d       	add	r19, r0
     a04:	11 24       	eor	r1, r1
     a06:	33 2e       	mov	r3, r19
     a08:	20 62       	ori	r18, 0x20	; 32
     a0a:	0c c0       	rjmp	.+24     	; 0xa24 <vfprintf+0xf0>
     a0c:	8e 32       	cpi	r24, 0x2E	; 46
     a0e:	21 f4       	brne	.+8      	; 0xa18 <vfprintf+0xe4>
     a10:	26 fd       	sbrc	r18, 6
     a12:	5f c1       	rjmp	.+702    	; 0xcd2 <vfprintf+0x39e>
     a14:	20 64       	ori	r18, 0x40	; 64
     a16:	06 c0       	rjmp	.+12     	; 0xa24 <vfprintf+0xf0>
     a18:	8c 36       	cpi	r24, 0x6C	; 108
     a1a:	11 f4       	brne	.+4      	; 0xa20 <vfprintf+0xec>
     a1c:	20 68       	ori	r18, 0x80	; 128
     a1e:	02 c0       	rjmp	.+4      	; 0xa24 <vfprintf+0xf0>
     a20:	88 36       	cpi	r24, 0x68	; 104
     a22:	41 f4       	brne	.+16     	; 0xa34 <vfprintf+0x100>
     a24:	f6 01       	movw	r30, r12
     a26:	93 fd       	sbrc	r25, 3
     a28:	85 91       	lpm	r24, Z+
     a2a:	93 ff       	sbrs	r25, 3
     a2c:	81 91       	ld	r24, Z+
     a2e:	6f 01       	movw	r12, r30
     a30:	81 11       	cpse	r24, r1
     a32:	c1 cf       	rjmp	.-126    	; 0x9b6 <vfprintf+0x82>
     a34:	98 2f       	mov	r25, r24
     a36:	9f 7d       	andi	r25, 0xDF	; 223
     a38:	95 54       	subi	r25, 0x45	; 69
     a3a:	93 30       	cpi	r25, 0x03	; 3
     a3c:	28 f4       	brcc	.+10     	; 0xa48 <vfprintf+0x114>
     a3e:	0c 5f       	subi	r16, 0xFC	; 252
     a40:	1f 4f       	sbci	r17, 0xFF	; 255
     a42:	ff e3       	ldi	r31, 0x3F	; 63
     a44:	f9 83       	std	Y+1, r31	; 0x01
     a46:	0d c0       	rjmp	.+26     	; 0xa62 <vfprintf+0x12e>
     a48:	83 36       	cpi	r24, 0x63	; 99
     a4a:	31 f0       	breq	.+12     	; 0xa58 <vfprintf+0x124>
     a4c:	83 37       	cpi	r24, 0x73	; 115
     a4e:	71 f0       	breq	.+28     	; 0xa6c <vfprintf+0x138>
     a50:	83 35       	cpi	r24, 0x53	; 83
     a52:	09 f0       	breq	.+2      	; 0xa56 <vfprintf+0x122>
     a54:	57 c0       	rjmp	.+174    	; 0xb04 <vfprintf+0x1d0>
     a56:	21 c0       	rjmp	.+66     	; 0xa9a <vfprintf+0x166>
     a58:	f8 01       	movw	r30, r16
     a5a:	80 81       	ld	r24, Z
     a5c:	89 83       	std	Y+1, r24	; 0x01
     a5e:	0e 5f       	subi	r16, 0xFE	; 254
     a60:	1f 4f       	sbci	r17, 0xFF	; 255
     a62:	44 24       	eor	r4, r4
     a64:	43 94       	inc	r4
     a66:	51 2c       	mov	r5, r1
     a68:	54 01       	movw	r10, r8
     a6a:	14 c0       	rjmp	.+40     	; 0xa94 <vfprintf+0x160>
     a6c:	38 01       	movw	r6, r16
     a6e:	f2 e0       	ldi	r31, 0x02	; 2
     a70:	6f 0e       	add	r6, r31
     a72:	71 1c       	adc	r7, r1
     a74:	f8 01       	movw	r30, r16
     a76:	a0 80       	ld	r10, Z
     a78:	b1 80       	ldd	r11, Z+1	; 0x01
     a7a:	26 ff       	sbrs	r18, 6
     a7c:	03 c0       	rjmp	.+6      	; 0xa84 <vfprintf+0x150>
     a7e:	65 2d       	mov	r22, r5
     a80:	70 e0       	ldi	r23, 0x00	; 0
     a82:	02 c0       	rjmp	.+4      	; 0xa88 <vfprintf+0x154>
     a84:	6f ef       	ldi	r22, 0xFF	; 255
     a86:	7f ef       	ldi	r23, 0xFF	; 255
     a88:	c5 01       	movw	r24, r10
     a8a:	2c 87       	std	Y+12, r18	; 0x0c
     a8c:	94 d2       	rcall	.+1320   	; 0xfb6 <strnlen>
     a8e:	2c 01       	movw	r4, r24
     a90:	83 01       	movw	r16, r6
     a92:	2c 85       	ldd	r18, Y+12	; 0x0c
     a94:	2f 77       	andi	r18, 0x7F	; 127
     a96:	22 2e       	mov	r2, r18
     a98:	16 c0       	rjmp	.+44     	; 0xac6 <vfprintf+0x192>
     a9a:	38 01       	movw	r6, r16
     a9c:	f2 e0       	ldi	r31, 0x02	; 2
     a9e:	6f 0e       	add	r6, r31
     aa0:	71 1c       	adc	r7, r1
     aa2:	f8 01       	movw	r30, r16
     aa4:	a0 80       	ld	r10, Z
     aa6:	b1 80       	ldd	r11, Z+1	; 0x01
     aa8:	26 ff       	sbrs	r18, 6
     aaa:	03 c0       	rjmp	.+6      	; 0xab2 <vfprintf+0x17e>
     aac:	65 2d       	mov	r22, r5
     aae:	70 e0       	ldi	r23, 0x00	; 0
     ab0:	02 c0       	rjmp	.+4      	; 0xab6 <vfprintf+0x182>
     ab2:	6f ef       	ldi	r22, 0xFF	; 255
     ab4:	7f ef       	ldi	r23, 0xFF	; 255
     ab6:	c5 01       	movw	r24, r10
     ab8:	2c 87       	std	Y+12, r18	; 0x0c
     aba:	6b d2       	rcall	.+1238   	; 0xf92 <strnlen_P>
     abc:	2c 01       	movw	r4, r24
     abe:	2c 85       	ldd	r18, Y+12	; 0x0c
     ac0:	20 68       	ori	r18, 0x80	; 128
     ac2:	22 2e       	mov	r2, r18
     ac4:	83 01       	movw	r16, r6
     ac6:	23 fc       	sbrc	r2, 3
     ac8:	19 c0       	rjmp	.+50     	; 0xafc <vfprintf+0x1c8>
     aca:	83 2d       	mov	r24, r3
     acc:	90 e0       	ldi	r25, 0x00	; 0
     ace:	48 16       	cp	r4, r24
     ad0:	59 06       	cpc	r5, r25
     ad2:	a0 f4       	brcc	.+40     	; 0xafc <vfprintf+0x1c8>
     ad4:	b7 01       	movw	r22, r14
     ad6:	80 e2       	ldi	r24, 0x20	; 32
     ad8:	90 e0       	ldi	r25, 0x00	; 0
     ada:	78 d2       	rcall	.+1264   	; 0xfcc <fputc>
     adc:	3a 94       	dec	r3
     ade:	f5 cf       	rjmp	.-22     	; 0xaca <vfprintf+0x196>
     ae0:	f5 01       	movw	r30, r10
     ae2:	27 fc       	sbrc	r2, 7
     ae4:	85 91       	lpm	r24, Z+
     ae6:	27 fe       	sbrs	r2, 7
     ae8:	81 91       	ld	r24, Z+
     aea:	5f 01       	movw	r10, r30
     aec:	b7 01       	movw	r22, r14
     aee:	90 e0       	ldi	r25, 0x00	; 0
     af0:	6d d2       	rcall	.+1242   	; 0xfcc <fputc>
     af2:	31 10       	cpse	r3, r1
     af4:	3a 94       	dec	r3
     af6:	f1 e0       	ldi	r31, 0x01	; 1
     af8:	4f 1a       	sub	r4, r31
     afa:	51 08       	sbc	r5, r1
     afc:	41 14       	cp	r4, r1
     afe:	51 04       	cpc	r5, r1
     b00:	79 f7       	brne	.-34     	; 0xae0 <vfprintf+0x1ac>
     b02:	de c0       	rjmp	.+444    	; 0xcc0 <vfprintf+0x38c>
     b04:	84 36       	cpi	r24, 0x64	; 100
     b06:	11 f0       	breq	.+4      	; 0xb0c <vfprintf+0x1d8>
     b08:	89 36       	cpi	r24, 0x69	; 105
     b0a:	31 f5       	brne	.+76     	; 0xb58 <vfprintf+0x224>
     b0c:	f8 01       	movw	r30, r16
     b0e:	27 ff       	sbrs	r18, 7
     b10:	07 c0       	rjmp	.+14     	; 0xb20 <vfprintf+0x1ec>
     b12:	60 81       	ld	r22, Z
     b14:	71 81       	ldd	r23, Z+1	; 0x01
     b16:	82 81       	ldd	r24, Z+2	; 0x02
     b18:	93 81       	ldd	r25, Z+3	; 0x03
     b1a:	0c 5f       	subi	r16, 0xFC	; 252
     b1c:	1f 4f       	sbci	r17, 0xFF	; 255
     b1e:	08 c0       	rjmp	.+16     	; 0xb30 <vfprintf+0x1fc>
     b20:	60 81       	ld	r22, Z
     b22:	71 81       	ldd	r23, Z+1	; 0x01
     b24:	88 27       	eor	r24, r24
     b26:	77 fd       	sbrc	r23, 7
     b28:	80 95       	com	r24
     b2a:	98 2f       	mov	r25, r24
     b2c:	0e 5f       	subi	r16, 0xFE	; 254
     b2e:	1f 4f       	sbci	r17, 0xFF	; 255
     b30:	2f 76       	andi	r18, 0x6F	; 111
     b32:	b2 2e       	mov	r11, r18
     b34:	97 ff       	sbrs	r25, 7
     b36:	09 c0       	rjmp	.+18     	; 0xb4a <vfprintf+0x216>
     b38:	90 95       	com	r25
     b3a:	80 95       	com	r24
     b3c:	70 95       	com	r23
     b3e:	61 95       	neg	r22
     b40:	7f 4f       	sbci	r23, 0xFF	; 255
     b42:	8f 4f       	sbci	r24, 0xFF	; 255
     b44:	9f 4f       	sbci	r25, 0xFF	; 255
     b46:	20 68       	ori	r18, 0x80	; 128
     b48:	b2 2e       	mov	r11, r18
     b4a:	2a e0       	ldi	r18, 0x0A	; 10
     b4c:	30 e0       	ldi	r19, 0x00	; 0
     b4e:	a4 01       	movw	r20, r8
     b50:	6f d2       	rcall	.+1246   	; 0x1030 <__ultoa_invert>
     b52:	a8 2e       	mov	r10, r24
     b54:	a8 18       	sub	r10, r8
     b56:	43 c0       	rjmp	.+134    	; 0xbde <vfprintf+0x2aa>
     b58:	85 37       	cpi	r24, 0x75	; 117
     b5a:	29 f4       	brne	.+10     	; 0xb66 <vfprintf+0x232>
     b5c:	2f 7e       	andi	r18, 0xEF	; 239
     b5e:	b2 2e       	mov	r11, r18
     b60:	2a e0       	ldi	r18, 0x0A	; 10
     b62:	30 e0       	ldi	r19, 0x00	; 0
     b64:	25 c0       	rjmp	.+74     	; 0xbb0 <vfprintf+0x27c>
     b66:	f2 2f       	mov	r31, r18
     b68:	f9 7f       	andi	r31, 0xF9	; 249
     b6a:	bf 2e       	mov	r11, r31
     b6c:	8f 36       	cpi	r24, 0x6F	; 111
     b6e:	c1 f0       	breq	.+48     	; 0xba0 <vfprintf+0x26c>
     b70:	18 f4       	brcc	.+6      	; 0xb78 <vfprintf+0x244>
     b72:	88 35       	cpi	r24, 0x58	; 88
     b74:	79 f0       	breq	.+30     	; 0xb94 <vfprintf+0x260>
     b76:	ad c0       	rjmp	.+346    	; 0xcd2 <vfprintf+0x39e>
     b78:	80 37       	cpi	r24, 0x70	; 112
     b7a:	19 f0       	breq	.+6      	; 0xb82 <vfprintf+0x24e>
     b7c:	88 37       	cpi	r24, 0x78	; 120
     b7e:	21 f0       	breq	.+8      	; 0xb88 <vfprintf+0x254>
     b80:	a8 c0       	rjmp	.+336    	; 0xcd2 <vfprintf+0x39e>
     b82:	2f 2f       	mov	r18, r31
     b84:	20 61       	ori	r18, 0x10	; 16
     b86:	b2 2e       	mov	r11, r18
     b88:	b4 fe       	sbrs	r11, 4
     b8a:	0d c0       	rjmp	.+26     	; 0xba6 <vfprintf+0x272>
     b8c:	8b 2d       	mov	r24, r11
     b8e:	84 60       	ori	r24, 0x04	; 4
     b90:	b8 2e       	mov	r11, r24
     b92:	09 c0       	rjmp	.+18     	; 0xba6 <vfprintf+0x272>
     b94:	24 ff       	sbrs	r18, 4
     b96:	0a c0       	rjmp	.+20     	; 0xbac <vfprintf+0x278>
     b98:	9f 2f       	mov	r25, r31
     b9a:	96 60       	ori	r25, 0x06	; 6
     b9c:	b9 2e       	mov	r11, r25
     b9e:	06 c0       	rjmp	.+12     	; 0xbac <vfprintf+0x278>
     ba0:	28 e0       	ldi	r18, 0x08	; 8
     ba2:	30 e0       	ldi	r19, 0x00	; 0
     ba4:	05 c0       	rjmp	.+10     	; 0xbb0 <vfprintf+0x27c>
     ba6:	20 e1       	ldi	r18, 0x10	; 16
     ba8:	30 e0       	ldi	r19, 0x00	; 0
     baa:	02 c0       	rjmp	.+4      	; 0xbb0 <vfprintf+0x27c>
     bac:	20 e1       	ldi	r18, 0x10	; 16
     bae:	32 e0       	ldi	r19, 0x02	; 2
     bb0:	f8 01       	movw	r30, r16
     bb2:	b7 fe       	sbrs	r11, 7
     bb4:	07 c0       	rjmp	.+14     	; 0xbc4 <vfprintf+0x290>
     bb6:	60 81       	ld	r22, Z
     bb8:	71 81       	ldd	r23, Z+1	; 0x01
     bba:	82 81       	ldd	r24, Z+2	; 0x02
     bbc:	93 81       	ldd	r25, Z+3	; 0x03
     bbe:	0c 5f       	subi	r16, 0xFC	; 252
     bc0:	1f 4f       	sbci	r17, 0xFF	; 255
     bc2:	06 c0       	rjmp	.+12     	; 0xbd0 <vfprintf+0x29c>
     bc4:	60 81       	ld	r22, Z
     bc6:	71 81       	ldd	r23, Z+1	; 0x01
     bc8:	80 e0       	ldi	r24, 0x00	; 0
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	0e 5f       	subi	r16, 0xFE	; 254
     bce:	1f 4f       	sbci	r17, 0xFF	; 255
     bd0:	a4 01       	movw	r20, r8
     bd2:	2e d2       	rcall	.+1116   	; 0x1030 <__ultoa_invert>
     bd4:	a8 2e       	mov	r10, r24
     bd6:	a8 18       	sub	r10, r8
     bd8:	fb 2d       	mov	r31, r11
     bda:	ff 77       	andi	r31, 0x7F	; 127
     bdc:	bf 2e       	mov	r11, r31
     bde:	b6 fe       	sbrs	r11, 6
     be0:	0b c0       	rjmp	.+22     	; 0xbf8 <vfprintf+0x2c4>
     be2:	2b 2d       	mov	r18, r11
     be4:	2e 7f       	andi	r18, 0xFE	; 254
     be6:	a5 14       	cp	r10, r5
     be8:	50 f4       	brcc	.+20     	; 0xbfe <vfprintf+0x2ca>
     bea:	b4 fe       	sbrs	r11, 4
     bec:	0a c0       	rjmp	.+20     	; 0xc02 <vfprintf+0x2ce>
     bee:	b2 fc       	sbrc	r11, 2
     bf0:	08 c0       	rjmp	.+16     	; 0xc02 <vfprintf+0x2ce>
     bf2:	2b 2d       	mov	r18, r11
     bf4:	2e 7e       	andi	r18, 0xEE	; 238
     bf6:	05 c0       	rjmp	.+10     	; 0xc02 <vfprintf+0x2ce>
     bf8:	7a 2c       	mov	r7, r10
     bfa:	2b 2d       	mov	r18, r11
     bfc:	03 c0       	rjmp	.+6      	; 0xc04 <vfprintf+0x2d0>
     bfe:	7a 2c       	mov	r7, r10
     c00:	01 c0       	rjmp	.+2      	; 0xc04 <vfprintf+0x2d0>
     c02:	75 2c       	mov	r7, r5
     c04:	24 ff       	sbrs	r18, 4
     c06:	0d c0       	rjmp	.+26     	; 0xc22 <vfprintf+0x2ee>
     c08:	fe 01       	movw	r30, r28
     c0a:	ea 0d       	add	r30, r10
     c0c:	f1 1d       	adc	r31, r1
     c0e:	80 81       	ld	r24, Z
     c10:	80 33       	cpi	r24, 0x30	; 48
     c12:	11 f4       	brne	.+4      	; 0xc18 <vfprintf+0x2e4>
     c14:	29 7e       	andi	r18, 0xE9	; 233
     c16:	09 c0       	rjmp	.+18     	; 0xc2a <vfprintf+0x2f6>
     c18:	22 ff       	sbrs	r18, 2
     c1a:	06 c0       	rjmp	.+12     	; 0xc28 <vfprintf+0x2f4>
     c1c:	73 94       	inc	r7
     c1e:	73 94       	inc	r7
     c20:	04 c0       	rjmp	.+8      	; 0xc2a <vfprintf+0x2f6>
     c22:	82 2f       	mov	r24, r18
     c24:	86 78       	andi	r24, 0x86	; 134
     c26:	09 f0       	breq	.+2      	; 0xc2a <vfprintf+0x2f6>
     c28:	73 94       	inc	r7
     c2a:	23 fd       	sbrc	r18, 3
     c2c:	12 c0       	rjmp	.+36     	; 0xc52 <vfprintf+0x31e>
     c2e:	20 ff       	sbrs	r18, 0
     c30:	06 c0       	rjmp	.+12     	; 0xc3e <vfprintf+0x30a>
     c32:	5a 2c       	mov	r5, r10
     c34:	73 14       	cp	r7, r3
     c36:	18 f4       	brcc	.+6      	; 0xc3e <vfprintf+0x30a>
     c38:	53 0c       	add	r5, r3
     c3a:	57 18       	sub	r5, r7
     c3c:	73 2c       	mov	r7, r3
     c3e:	73 14       	cp	r7, r3
     c40:	60 f4       	brcc	.+24     	; 0xc5a <vfprintf+0x326>
     c42:	b7 01       	movw	r22, r14
     c44:	80 e2       	ldi	r24, 0x20	; 32
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	2c 87       	std	Y+12, r18	; 0x0c
     c4a:	c0 d1       	rcall	.+896    	; 0xfcc <fputc>
     c4c:	73 94       	inc	r7
     c4e:	2c 85       	ldd	r18, Y+12	; 0x0c
     c50:	f6 cf       	rjmp	.-20     	; 0xc3e <vfprintf+0x30a>
     c52:	73 14       	cp	r7, r3
     c54:	10 f4       	brcc	.+4      	; 0xc5a <vfprintf+0x326>
     c56:	37 18       	sub	r3, r7
     c58:	01 c0       	rjmp	.+2      	; 0xc5c <vfprintf+0x328>
     c5a:	31 2c       	mov	r3, r1
     c5c:	24 ff       	sbrs	r18, 4
     c5e:	11 c0       	rjmp	.+34     	; 0xc82 <vfprintf+0x34e>
     c60:	b7 01       	movw	r22, r14
     c62:	80 e3       	ldi	r24, 0x30	; 48
     c64:	90 e0       	ldi	r25, 0x00	; 0
     c66:	2c 87       	std	Y+12, r18	; 0x0c
     c68:	b1 d1       	rcall	.+866    	; 0xfcc <fputc>
     c6a:	2c 85       	ldd	r18, Y+12	; 0x0c
     c6c:	22 ff       	sbrs	r18, 2
     c6e:	16 c0       	rjmp	.+44     	; 0xc9c <vfprintf+0x368>
     c70:	21 ff       	sbrs	r18, 1
     c72:	03 c0       	rjmp	.+6      	; 0xc7a <vfprintf+0x346>
     c74:	88 e5       	ldi	r24, 0x58	; 88
     c76:	90 e0       	ldi	r25, 0x00	; 0
     c78:	02 c0       	rjmp	.+4      	; 0xc7e <vfprintf+0x34a>
     c7a:	88 e7       	ldi	r24, 0x78	; 120
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	b7 01       	movw	r22, r14
     c80:	0c c0       	rjmp	.+24     	; 0xc9a <vfprintf+0x366>
     c82:	82 2f       	mov	r24, r18
     c84:	86 78       	andi	r24, 0x86	; 134
     c86:	51 f0       	breq	.+20     	; 0xc9c <vfprintf+0x368>
     c88:	21 fd       	sbrc	r18, 1
     c8a:	02 c0       	rjmp	.+4      	; 0xc90 <vfprintf+0x35c>
     c8c:	80 e2       	ldi	r24, 0x20	; 32
     c8e:	01 c0       	rjmp	.+2      	; 0xc92 <vfprintf+0x35e>
     c90:	8b e2       	ldi	r24, 0x2B	; 43
     c92:	27 fd       	sbrc	r18, 7
     c94:	8d e2       	ldi	r24, 0x2D	; 45
     c96:	b7 01       	movw	r22, r14
     c98:	90 e0       	ldi	r25, 0x00	; 0
     c9a:	98 d1       	rcall	.+816    	; 0xfcc <fputc>
     c9c:	a5 14       	cp	r10, r5
     c9e:	30 f4       	brcc	.+12     	; 0xcac <vfprintf+0x378>
     ca0:	b7 01       	movw	r22, r14
     ca2:	80 e3       	ldi	r24, 0x30	; 48
     ca4:	90 e0       	ldi	r25, 0x00	; 0
     ca6:	92 d1       	rcall	.+804    	; 0xfcc <fputc>
     ca8:	5a 94       	dec	r5
     caa:	f8 cf       	rjmp	.-16     	; 0xc9c <vfprintf+0x368>
     cac:	aa 94       	dec	r10
     cae:	f4 01       	movw	r30, r8
     cb0:	ea 0d       	add	r30, r10
     cb2:	f1 1d       	adc	r31, r1
     cb4:	80 81       	ld	r24, Z
     cb6:	b7 01       	movw	r22, r14
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	88 d1       	rcall	.+784    	; 0xfcc <fputc>
     cbc:	a1 10       	cpse	r10, r1
     cbe:	f6 cf       	rjmp	.-20     	; 0xcac <vfprintf+0x378>
     cc0:	33 20       	and	r3, r3
     cc2:	09 f4       	brne	.+2      	; 0xcc6 <vfprintf+0x392>
     cc4:	5d ce       	rjmp	.-838    	; 0x980 <vfprintf+0x4c>
     cc6:	b7 01       	movw	r22, r14
     cc8:	80 e2       	ldi	r24, 0x20	; 32
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	7f d1       	rcall	.+766    	; 0xfcc <fputc>
     cce:	3a 94       	dec	r3
     cd0:	f7 cf       	rjmp	.-18     	; 0xcc0 <vfprintf+0x38c>
     cd2:	f7 01       	movw	r30, r14
     cd4:	86 81       	ldd	r24, Z+6	; 0x06
     cd6:	97 81       	ldd	r25, Z+7	; 0x07
     cd8:	02 c0       	rjmp	.+4      	; 0xcde <vfprintf+0x3aa>
     cda:	8f ef       	ldi	r24, 0xFF	; 255
     cdc:	9f ef       	ldi	r25, 0xFF	; 255
     cde:	2c 96       	adiw	r28, 0x0c	; 12
     ce0:	0f b6       	in	r0, 0x3f	; 63
     ce2:	f8 94       	cli
     ce4:	de bf       	out	0x3e, r29	; 62
     ce6:	0f be       	out	0x3f, r0	; 63
     ce8:	cd bf       	out	0x3d, r28	; 61
     cea:	df 91       	pop	r29
     cec:	cf 91       	pop	r28
     cee:	1f 91       	pop	r17
     cf0:	0f 91       	pop	r16
     cf2:	ff 90       	pop	r15
     cf4:	ef 90       	pop	r14
     cf6:	df 90       	pop	r13
     cf8:	cf 90       	pop	r12
     cfa:	bf 90       	pop	r11
     cfc:	af 90       	pop	r10
     cfe:	9f 90       	pop	r9
     d00:	8f 90       	pop	r8
     d02:	7f 90       	pop	r7
     d04:	6f 90       	pop	r6
     d06:	5f 90       	pop	r5
     d08:	4f 90       	pop	r4
     d0a:	3f 90       	pop	r3
     d0c:	2f 90       	pop	r2
     d0e:	08 95       	ret

00000d10 <calloc>:
     d10:	0f 93       	push	r16
     d12:	1f 93       	push	r17
     d14:	cf 93       	push	r28
     d16:	df 93       	push	r29
     d18:	86 9f       	mul	r24, r22
     d1a:	80 01       	movw	r16, r0
     d1c:	87 9f       	mul	r24, r23
     d1e:	10 0d       	add	r17, r0
     d20:	96 9f       	mul	r25, r22
     d22:	10 0d       	add	r17, r0
     d24:	11 24       	eor	r1, r1
     d26:	c8 01       	movw	r24, r16
     d28:	0d d0       	rcall	.+26     	; 0xd44 <malloc>
     d2a:	ec 01       	movw	r28, r24
     d2c:	00 97       	sbiw	r24, 0x00	; 0
     d2e:	21 f0       	breq	.+8      	; 0xd38 <calloc+0x28>
     d30:	a8 01       	movw	r20, r16
     d32:	60 e0       	ldi	r22, 0x00	; 0
     d34:	70 e0       	ldi	r23, 0x00	; 0
     d36:	38 d1       	rcall	.+624    	; 0xfa8 <memset>
     d38:	ce 01       	movw	r24, r28
     d3a:	df 91       	pop	r29
     d3c:	cf 91       	pop	r28
     d3e:	1f 91       	pop	r17
     d40:	0f 91       	pop	r16
     d42:	08 95       	ret

00000d44 <malloc>:
     d44:	cf 93       	push	r28
     d46:	df 93       	push	r29
     d48:	82 30       	cpi	r24, 0x02	; 2
     d4a:	91 05       	cpc	r25, r1
     d4c:	10 f4       	brcc	.+4      	; 0xd52 <malloc+0xe>
     d4e:	82 e0       	ldi	r24, 0x02	; 2
     d50:	90 e0       	ldi	r25, 0x00	; 0
     d52:	e0 91 2c 02 	lds	r30, 0x022C
     d56:	f0 91 2d 02 	lds	r31, 0x022D
     d5a:	20 e0       	ldi	r18, 0x00	; 0
     d5c:	30 e0       	ldi	r19, 0x00	; 0
     d5e:	a0 e0       	ldi	r26, 0x00	; 0
     d60:	b0 e0       	ldi	r27, 0x00	; 0
     d62:	30 97       	sbiw	r30, 0x00	; 0
     d64:	39 f1       	breq	.+78     	; 0xdb4 <malloc+0x70>
     d66:	40 81       	ld	r20, Z
     d68:	51 81       	ldd	r21, Z+1	; 0x01
     d6a:	48 17       	cp	r20, r24
     d6c:	59 07       	cpc	r21, r25
     d6e:	b8 f0       	brcs	.+46     	; 0xd9e <malloc+0x5a>
     d70:	48 17       	cp	r20, r24
     d72:	59 07       	cpc	r21, r25
     d74:	71 f4       	brne	.+28     	; 0xd92 <malloc+0x4e>
     d76:	82 81       	ldd	r24, Z+2	; 0x02
     d78:	93 81       	ldd	r25, Z+3	; 0x03
     d7a:	10 97       	sbiw	r26, 0x00	; 0
     d7c:	29 f0       	breq	.+10     	; 0xd88 <malloc+0x44>
     d7e:	13 96       	adiw	r26, 0x03	; 3
     d80:	9c 93       	st	X, r25
     d82:	8e 93       	st	-X, r24
     d84:	12 97       	sbiw	r26, 0x02	; 2
     d86:	2c c0       	rjmp	.+88     	; 0xde0 <malloc+0x9c>
     d88:	90 93 2d 02 	sts	0x022D, r25
     d8c:	80 93 2c 02 	sts	0x022C, r24
     d90:	27 c0       	rjmp	.+78     	; 0xde0 <malloc+0x9c>
     d92:	21 15       	cp	r18, r1
     d94:	31 05       	cpc	r19, r1
     d96:	31 f0       	breq	.+12     	; 0xda4 <malloc+0x60>
     d98:	42 17       	cp	r20, r18
     d9a:	53 07       	cpc	r21, r19
     d9c:	18 f0       	brcs	.+6      	; 0xda4 <malloc+0x60>
     d9e:	a9 01       	movw	r20, r18
     da0:	db 01       	movw	r26, r22
     da2:	01 c0       	rjmp	.+2      	; 0xda6 <malloc+0x62>
     da4:	ef 01       	movw	r28, r30
     da6:	9a 01       	movw	r18, r20
     da8:	bd 01       	movw	r22, r26
     daa:	df 01       	movw	r26, r30
     dac:	02 80       	ldd	r0, Z+2	; 0x02
     dae:	f3 81       	ldd	r31, Z+3	; 0x03
     db0:	e0 2d       	mov	r30, r0
     db2:	d7 cf       	rjmp	.-82     	; 0xd62 <malloc+0x1e>
     db4:	21 15       	cp	r18, r1
     db6:	31 05       	cpc	r19, r1
     db8:	f9 f0       	breq	.+62     	; 0xdf8 <malloc+0xb4>
     dba:	28 1b       	sub	r18, r24
     dbc:	39 0b       	sbc	r19, r25
     dbe:	24 30       	cpi	r18, 0x04	; 4
     dc0:	31 05       	cpc	r19, r1
     dc2:	80 f4       	brcc	.+32     	; 0xde4 <malloc+0xa0>
     dc4:	8a 81       	ldd	r24, Y+2	; 0x02
     dc6:	9b 81       	ldd	r25, Y+3	; 0x03
     dc8:	61 15       	cp	r22, r1
     dca:	71 05       	cpc	r23, r1
     dcc:	21 f0       	breq	.+8      	; 0xdd6 <malloc+0x92>
     dce:	fb 01       	movw	r30, r22
     dd0:	93 83       	std	Z+3, r25	; 0x03
     dd2:	82 83       	std	Z+2, r24	; 0x02
     dd4:	04 c0       	rjmp	.+8      	; 0xdde <malloc+0x9a>
     dd6:	90 93 2d 02 	sts	0x022D, r25
     dda:	80 93 2c 02 	sts	0x022C, r24
     dde:	fe 01       	movw	r30, r28
     de0:	32 96       	adiw	r30, 0x02	; 2
     de2:	44 c0       	rjmp	.+136    	; 0xe6c <malloc+0x128>
     de4:	fe 01       	movw	r30, r28
     de6:	e2 0f       	add	r30, r18
     de8:	f3 1f       	adc	r31, r19
     dea:	81 93       	st	Z+, r24
     dec:	91 93       	st	Z+, r25
     dee:	22 50       	subi	r18, 0x02	; 2
     df0:	31 09       	sbc	r19, r1
     df2:	39 83       	std	Y+1, r19	; 0x01
     df4:	28 83       	st	Y, r18
     df6:	3a c0       	rjmp	.+116    	; 0xe6c <malloc+0x128>
     df8:	20 91 2a 02 	lds	r18, 0x022A
     dfc:	30 91 2b 02 	lds	r19, 0x022B
     e00:	23 2b       	or	r18, r19
     e02:	41 f4       	brne	.+16     	; 0xe14 <malloc+0xd0>
     e04:	20 91 02 02 	lds	r18, 0x0202
     e08:	30 91 03 02 	lds	r19, 0x0203
     e0c:	30 93 2b 02 	sts	0x022B, r19
     e10:	20 93 2a 02 	sts	0x022A, r18
     e14:	20 91 00 02 	lds	r18, 0x0200
     e18:	30 91 01 02 	lds	r19, 0x0201
     e1c:	21 15       	cp	r18, r1
     e1e:	31 05       	cpc	r19, r1
     e20:	41 f4       	brne	.+16     	; 0xe32 <malloc+0xee>
     e22:	2d b7       	in	r18, 0x3d	; 61
     e24:	3e b7       	in	r19, 0x3e	; 62
     e26:	40 91 04 02 	lds	r20, 0x0204
     e2a:	50 91 05 02 	lds	r21, 0x0205
     e2e:	24 1b       	sub	r18, r20
     e30:	35 0b       	sbc	r19, r21
     e32:	e0 91 2a 02 	lds	r30, 0x022A
     e36:	f0 91 2b 02 	lds	r31, 0x022B
     e3a:	e2 17       	cp	r30, r18
     e3c:	f3 07       	cpc	r31, r19
     e3e:	a0 f4       	brcc	.+40     	; 0xe68 <malloc+0x124>
     e40:	2e 1b       	sub	r18, r30
     e42:	3f 0b       	sbc	r19, r31
     e44:	28 17       	cp	r18, r24
     e46:	39 07       	cpc	r19, r25
     e48:	78 f0       	brcs	.+30     	; 0xe68 <malloc+0x124>
     e4a:	ac 01       	movw	r20, r24
     e4c:	4e 5f       	subi	r20, 0xFE	; 254
     e4e:	5f 4f       	sbci	r21, 0xFF	; 255
     e50:	24 17       	cp	r18, r20
     e52:	35 07       	cpc	r19, r21
     e54:	48 f0       	brcs	.+18     	; 0xe68 <malloc+0x124>
     e56:	4e 0f       	add	r20, r30
     e58:	5f 1f       	adc	r21, r31
     e5a:	50 93 2b 02 	sts	0x022B, r21
     e5e:	40 93 2a 02 	sts	0x022A, r20
     e62:	81 93       	st	Z+, r24
     e64:	91 93       	st	Z+, r25
     e66:	02 c0       	rjmp	.+4      	; 0xe6c <malloc+0x128>
     e68:	e0 e0       	ldi	r30, 0x00	; 0
     e6a:	f0 e0       	ldi	r31, 0x00	; 0
     e6c:	cf 01       	movw	r24, r30
     e6e:	df 91       	pop	r29
     e70:	cf 91       	pop	r28
     e72:	08 95       	ret

00000e74 <free>:
     e74:	cf 93       	push	r28
     e76:	df 93       	push	r29
     e78:	00 97       	sbiw	r24, 0x00	; 0
     e7a:	09 f4       	brne	.+2      	; 0xe7e <free+0xa>
     e7c:	87 c0       	rjmp	.+270    	; 0xf8c <free+0x118>
     e7e:	fc 01       	movw	r30, r24
     e80:	32 97       	sbiw	r30, 0x02	; 2
     e82:	13 82       	std	Z+3, r1	; 0x03
     e84:	12 82       	std	Z+2, r1	; 0x02
     e86:	c0 91 2c 02 	lds	r28, 0x022C
     e8a:	d0 91 2d 02 	lds	r29, 0x022D
     e8e:	20 97       	sbiw	r28, 0x00	; 0
     e90:	81 f4       	brne	.+32     	; 0xeb2 <free+0x3e>
     e92:	20 81       	ld	r18, Z
     e94:	31 81       	ldd	r19, Z+1	; 0x01
     e96:	28 0f       	add	r18, r24
     e98:	39 1f       	adc	r19, r25
     e9a:	80 91 2a 02 	lds	r24, 0x022A
     e9e:	90 91 2b 02 	lds	r25, 0x022B
     ea2:	82 17       	cp	r24, r18
     ea4:	93 07       	cpc	r25, r19
     ea6:	79 f5       	brne	.+94     	; 0xf06 <free+0x92>
     ea8:	f0 93 2b 02 	sts	0x022B, r31
     eac:	e0 93 2a 02 	sts	0x022A, r30
     eb0:	6d c0       	rjmp	.+218    	; 0xf8c <free+0x118>
     eb2:	de 01       	movw	r26, r28
     eb4:	20 e0       	ldi	r18, 0x00	; 0
     eb6:	30 e0       	ldi	r19, 0x00	; 0
     eb8:	ae 17       	cp	r26, r30
     eba:	bf 07       	cpc	r27, r31
     ebc:	50 f4       	brcc	.+20     	; 0xed2 <free+0x5e>
     ebe:	12 96       	adiw	r26, 0x02	; 2
     ec0:	4d 91       	ld	r20, X+
     ec2:	5c 91       	ld	r21, X
     ec4:	13 97       	sbiw	r26, 0x03	; 3
     ec6:	9d 01       	movw	r18, r26
     ec8:	41 15       	cp	r20, r1
     eca:	51 05       	cpc	r21, r1
     ecc:	09 f1       	breq	.+66     	; 0xf10 <free+0x9c>
     ece:	da 01       	movw	r26, r20
     ed0:	f3 cf       	rjmp	.-26     	; 0xeb8 <free+0x44>
     ed2:	b3 83       	std	Z+3, r27	; 0x03
     ed4:	a2 83       	std	Z+2, r26	; 0x02
     ed6:	40 81       	ld	r20, Z
     ed8:	51 81       	ldd	r21, Z+1	; 0x01
     eda:	84 0f       	add	r24, r20
     edc:	95 1f       	adc	r25, r21
     ede:	8a 17       	cp	r24, r26
     ee0:	9b 07       	cpc	r25, r27
     ee2:	71 f4       	brne	.+28     	; 0xf00 <free+0x8c>
     ee4:	8d 91       	ld	r24, X+
     ee6:	9c 91       	ld	r25, X
     ee8:	11 97       	sbiw	r26, 0x01	; 1
     eea:	84 0f       	add	r24, r20
     eec:	95 1f       	adc	r25, r21
     eee:	02 96       	adiw	r24, 0x02	; 2
     ef0:	91 83       	std	Z+1, r25	; 0x01
     ef2:	80 83       	st	Z, r24
     ef4:	12 96       	adiw	r26, 0x02	; 2
     ef6:	8d 91       	ld	r24, X+
     ef8:	9c 91       	ld	r25, X
     efa:	13 97       	sbiw	r26, 0x03	; 3
     efc:	93 83       	std	Z+3, r25	; 0x03
     efe:	82 83       	std	Z+2, r24	; 0x02
     f00:	21 15       	cp	r18, r1
     f02:	31 05       	cpc	r19, r1
     f04:	29 f4       	brne	.+10     	; 0xf10 <free+0x9c>
     f06:	f0 93 2d 02 	sts	0x022D, r31
     f0a:	e0 93 2c 02 	sts	0x022C, r30
     f0e:	3e c0       	rjmp	.+124    	; 0xf8c <free+0x118>
     f10:	d9 01       	movw	r26, r18
     f12:	13 96       	adiw	r26, 0x03	; 3
     f14:	fc 93       	st	X, r31
     f16:	ee 93       	st	-X, r30
     f18:	12 97       	sbiw	r26, 0x02	; 2
     f1a:	4d 91       	ld	r20, X+
     f1c:	5d 91       	ld	r21, X+
     f1e:	a4 0f       	add	r26, r20
     f20:	b5 1f       	adc	r27, r21
     f22:	ea 17       	cp	r30, r26
     f24:	fb 07       	cpc	r31, r27
     f26:	79 f4       	brne	.+30     	; 0xf46 <free+0xd2>
     f28:	80 81       	ld	r24, Z
     f2a:	91 81       	ldd	r25, Z+1	; 0x01
     f2c:	84 0f       	add	r24, r20
     f2e:	95 1f       	adc	r25, r21
     f30:	02 96       	adiw	r24, 0x02	; 2
     f32:	d9 01       	movw	r26, r18
     f34:	11 96       	adiw	r26, 0x01	; 1
     f36:	9c 93       	st	X, r25
     f38:	8e 93       	st	-X, r24
     f3a:	82 81       	ldd	r24, Z+2	; 0x02
     f3c:	93 81       	ldd	r25, Z+3	; 0x03
     f3e:	13 96       	adiw	r26, 0x03	; 3
     f40:	9c 93       	st	X, r25
     f42:	8e 93       	st	-X, r24
     f44:	12 97       	sbiw	r26, 0x02	; 2
     f46:	e0 e0       	ldi	r30, 0x00	; 0
     f48:	f0 e0       	ldi	r31, 0x00	; 0
     f4a:	8a 81       	ldd	r24, Y+2	; 0x02
     f4c:	9b 81       	ldd	r25, Y+3	; 0x03
     f4e:	00 97       	sbiw	r24, 0x00	; 0
     f50:	19 f0       	breq	.+6      	; 0xf58 <free+0xe4>
     f52:	fe 01       	movw	r30, r28
     f54:	ec 01       	movw	r28, r24
     f56:	f9 cf       	rjmp	.-14     	; 0xf4a <free+0xd6>
     f58:	ce 01       	movw	r24, r28
     f5a:	02 96       	adiw	r24, 0x02	; 2
     f5c:	28 81       	ld	r18, Y
     f5e:	39 81       	ldd	r19, Y+1	; 0x01
     f60:	82 0f       	add	r24, r18
     f62:	93 1f       	adc	r25, r19
     f64:	20 91 2a 02 	lds	r18, 0x022A
     f68:	30 91 2b 02 	lds	r19, 0x022B
     f6c:	28 17       	cp	r18, r24
     f6e:	39 07       	cpc	r19, r25
     f70:	69 f4       	brne	.+26     	; 0xf8c <free+0x118>
     f72:	30 97       	sbiw	r30, 0x00	; 0
     f74:	29 f4       	brne	.+10     	; 0xf80 <free+0x10c>
     f76:	10 92 2d 02 	sts	0x022D, r1
     f7a:	10 92 2c 02 	sts	0x022C, r1
     f7e:	02 c0       	rjmp	.+4      	; 0xf84 <free+0x110>
     f80:	13 82       	std	Z+3, r1	; 0x03
     f82:	12 82       	std	Z+2, r1	; 0x02
     f84:	d0 93 2b 02 	sts	0x022B, r29
     f88:	c0 93 2a 02 	sts	0x022A, r28
     f8c:	df 91       	pop	r29
     f8e:	cf 91       	pop	r28
     f90:	08 95       	ret

00000f92 <strnlen_P>:
     f92:	fc 01       	movw	r30, r24
     f94:	05 90       	lpm	r0, Z+
     f96:	61 50       	subi	r22, 0x01	; 1
     f98:	70 40       	sbci	r23, 0x00	; 0
     f9a:	01 10       	cpse	r0, r1
     f9c:	d8 f7       	brcc	.-10     	; 0xf94 <strnlen_P+0x2>
     f9e:	80 95       	com	r24
     fa0:	90 95       	com	r25
     fa2:	8e 0f       	add	r24, r30
     fa4:	9f 1f       	adc	r25, r31
     fa6:	08 95       	ret

00000fa8 <memset>:
     fa8:	dc 01       	movw	r26, r24
     faa:	01 c0       	rjmp	.+2      	; 0xfae <memset+0x6>
     fac:	6d 93       	st	X+, r22
     fae:	41 50       	subi	r20, 0x01	; 1
     fb0:	50 40       	sbci	r21, 0x00	; 0
     fb2:	e0 f7       	brcc	.-8      	; 0xfac <memset+0x4>
     fb4:	08 95       	ret

00000fb6 <strnlen>:
     fb6:	fc 01       	movw	r30, r24
     fb8:	61 50       	subi	r22, 0x01	; 1
     fba:	70 40       	sbci	r23, 0x00	; 0
     fbc:	01 90       	ld	r0, Z+
     fbe:	01 10       	cpse	r0, r1
     fc0:	d8 f7       	brcc	.-10     	; 0xfb8 <strnlen+0x2>
     fc2:	80 95       	com	r24
     fc4:	90 95       	com	r25
     fc6:	8e 0f       	add	r24, r30
     fc8:	9f 1f       	adc	r25, r31
     fca:	08 95       	ret

00000fcc <fputc>:
     fcc:	0f 93       	push	r16
     fce:	1f 93       	push	r17
     fd0:	cf 93       	push	r28
     fd2:	df 93       	push	r29
     fd4:	18 2f       	mov	r17, r24
     fd6:	09 2f       	mov	r16, r25
     fd8:	eb 01       	movw	r28, r22
     fda:	8b 81       	ldd	r24, Y+3	; 0x03
     fdc:	81 fd       	sbrc	r24, 1
     fde:	03 c0       	rjmp	.+6      	; 0xfe6 <fputc+0x1a>
     fe0:	8f ef       	ldi	r24, 0xFF	; 255
     fe2:	9f ef       	ldi	r25, 0xFF	; 255
     fe4:	20 c0       	rjmp	.+64     	; 0x1026 <fputc+0x5a>
     fe6:	82 ff       	sbrs	r24, 2
     fe8:	10 c0       	rjmp	.+32     	; 0x100a <fputc+0x3e>
     fea:	4e 81       	ldd	r20, Y+6	; 0x06
     fec:	5f 81       	ldd	r21, Y+7	; 0x07
     fee:	2c 81       	ldd	r18, Y+4	; 0x04
     ff0:	3d 81       	ldd	r19, Y+5	; 0x05
     ff2:	42 17       	cp	r20, r18
     ff4:	53 07       	cpc	r21, r19
     ff6:	7c f4       	brge	.+30     	; 0x1016 <fputc+0x4a>
     ff8:	e8 81       	ld	r30, Y
     ffa:	f9 81       	ldd	r31, Y+1	; 0x01
     ffc:	9f 01       	movw	r18, r30
     ffe:	2f 5f       	subi	r18, 0xFF	; 255
    1000:	3f 4f       	sbci	r19, 0xFF	; 255
    1002:	39 83       	std	Y+1, r19	; 0x01
    1004:	28 83       	st	Y, r18
    1006:	10 83       	st	Z, r17
    1008:	06 c0       	rjmp	.+12     	; 0x1016 <fputc+0x4a>
    100a:	e8 85       	ldd	r30, Y+8	; 0x08
    100c:	f9 85       	ldd	r31, Y+9	; 0x09
    100e:	81 2f       	mov	r24, r17
    1010:	19 95       	eicall
    1012:	89 2b       	or	r24, r25
    1014:	29 f7       	brne	.-54     	; 0xfe0 <fputc+0x14>
    1016:	2e 81       	ldd	r18, Y+6	; 0x06
    1018:	3f 81       	ldd	r19, Y+7	; 0x07
    101a:	2f 5f       	subi	r18, 0xFF	; 255
    101c:	3f 4f       	sbci	r19, 0xFF	; 255
    101e:	3f 83       	std	Y+7, r19	; 0x07
    1020:	2e 83       	std	Y+6, r18	; 0x06
    1022:	81 2f       	mov	r24, r17
    1024:	90 2f       	mov	r25, r16
    1026:	df 91       	pop	r29
    1028:	cf 91       	pop	r28
    102a:	1f 91       	pop	r17
    102c:	0f 91       	pop	r16
    102e:	08 95       	ret

00001030 <__ultoa_invert>:
    1030:	fa 01       	movw	r30, r20
    1032:	aa 27       	eor	r26, r26
    1034:	28 30       	cpi	r18, 0x08	; 8
    1036:	51 f1       	breq	.+84     	; 0x108c <__ultoa_invert+0x5c>
    1038:	20 31       	cpi	r18, 0x10	; 16
    103a:	81 f1       	breq	.+96     	; 0x109c <__ultoa_invert+0x6c>
    103c:	e8 94       	clt
    103e:	6f 93       	push	r22
    1040:	6e 7f       	andi	r22, 0xFE	; 254
    1042:	6e 5f       	subi	r22, 0xFE	; 254
    1044:	7f 4f       	sbci	r23, 0xFF	; 255
    1046:	8f 4f       	sbci	r24, 0xFF	; 255
    1048:	9f 4f       	sbci	r25, 0xFF	; 255
    104a:	af 4f       	sbci	r26, 0xFF	; 255
    104c:	b1 e0       	ldi	r27, 0x01	; 1
    104e:	3e d0       	rcall	.+124    	; 0x10cc <__ultoa_invert+0x9c>
    1050:	b4 e0       	ldi	r27, 0x04	; 4
    1052:	3c d0       	rcall	.+120    	; 0x10cc <__ultoa_invert+0x9c>
    1054:	67 0f       	add	r22, r23
    1056:	78 1f       	adc	r23, r24
    1058:	89 1f       	adc	r24, r25
    105a:	9a 1f       	adc	r25, r26
    105c:	a1 1d       	adc	r26, r1
    105e:	68 0f       	add	r22, r24
    1060:	79 1f       	adc	r23, r25
    1062:	8a 1f       	adc	r24, r26
    1064:	91 1d       	adc	r25, r1
    1066:	a1 1d       	adc	r26, r1
    1068:	6a 0f       	add	r22, r26
    106a:	71 1d       	adc	r23, r1
    106c:	81 1d       	adc	r24, r1
    106e:	91 1d       	adc	r25, r1
    1070:	a1 1d       	adc	r26, r1
    1072:	20 d0       	rcall	.+64     	; 0x10b4 <__ultoa_invert+0x84>
    1074:	09 f4       	brne	.+2      	; 0x1078 <__ultoa_invert+0x48>
    1076:	68 94       	set
    1078:	3f 91       	pop	r19
    107a:	2a e0       	ldi	r18, 0x0A	; 10
    107c:	26 9f       	mul	r18, r22
    107e:	11 24       	eor	r1, r1
    1080:	30 19       	sub	r19, r0
    1082:	30 5d       	subi	r19, 0xD0	; 208
    1084:	31 93       	st	Z+, r19
    1086:	de f6       	brtc	.-74     	; 0x103e <__ultoa_invert+0xe>
    1088:	cf 01       	movw	r24, r30
    108a:	08 95       	ret
    108c:	46 2f       	mov	r20, r22
    108e:	47 70       	andi	r20, 0x07	; 7
    1090:	40 5d       	subi	r20, 0xD0	; 208
    1092:	41 93       	st	Z+, r20
    1094:	b3 e0       	ldi	r27, 0x03	; 3
    1096:	0f d0       	rcall	.+30     	; 0x10b6 <__ultoa_invert+0x86>
    1098:	c9 f7       	brne	.-14     	; 0x108c <__ultoa_invert+0x5c>
    109a:	f6 cf       	rjmp	.-20     	; 0x1088 <__ultoa_invert+0x58>
    109c:	46 2f       	mov	r20, r22
    109e:	4f 70       	andi	r20, 0x0F	; 15
    10a0:	40 5d       	subi	r20, 0xD0	; 208
    10a2:	4a 33       	cpi	r20, 0x3A	; 58
    10a4:	18 f0       	brcs	.+6      	; 0x10ac <__ultoa_invert+0x7c>
    10a6:	49 5d       	subi	r20, 0xD9	; 217
    10a8:	31 fd       	sbrc	r19, 1
    10aa:	40 52       	subi	r20, 0x20	; 32
    10ac:	41 93       	st	Z+, r20
    10ae:	02 d0       	rcall	.+4      	; 0x10b4 <__ultoa_invert+0x84>
    10b0:	a9 f7       	brne	.-22     	; 0x109c <__ultoa_invert+0x6c>
    10b2:	ea cf       	rjmp	.-44     	; 0x1088 <__ultoa_invert+0x58>
    10b4:	b4 e0       	ldi	r27, 0x04	; 4
    10b6:	a6 95       	lsr	r26
    10b8:	97 95       	ror	r25
    10ba:	87 95       	ror	r24
    10bc:	77 95       	ror	r23
    10be:	67 95       	ror	r22
    10c0:	ba 95       	dec	r27
    10c2:	c9 f7       	brne	.-14     	; 0x10b6 <__ultoa_invert+0x86>
    10c4:	00 97       	sbiw	r24, 0x00	; 0
    10c6:	61 05       	cpc	r22, r1
    10c8:	71 05       	cpc	r23, r1
    10ca:	08 95       	ret
    10cc:	9b 01       	movw	r18, r22
    10ce:	ac 01       	movw	r20, r24
    10d0:	0a 2e       	mov	r0, r26
    10d2:	06 94       	lsr	r0
    10d4:	57 95       	ror	r21
    10d6:	47 95       	ror	r20
    10d8:	37 95       	ror	r19
    10da:	27 95       	ror	r18
    10dc:	ba 95       	dec	r27
    10de:	c9 f7       	brne	.-14     	; 0x10d2 <__ultoa_invert+0xa2>
    10e0:	62 0f       	add	r22, r18
    10e2:	73 1f       	adc	r23, r19
    10e4:	84 1f       	adc	r24, r20
    10e6:	95 1f       	adc	r25, r21
    10e8:	a0 1d       	adc	r26, r0
    10ea:	08 95       	ret

000010ec <_exit>:
    10ec:	f8 94       	cli

000010ee <__stop_program>:
    10ee:	ff cf       	rjmp	.-2      	; 0x10ee <__stop_program>
